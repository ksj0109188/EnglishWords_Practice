Index: src/main/java/com/project/statistic/vo/statisticVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/statistic/vo/statisticVO.java b/src/main/java/com/project/statistic/vo/statisticVO.java
deleted file mode 100644
--- a/src/main/java/com/project/statistic/vo/statisticVO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,44 +0,0 @@
-package com.project.statistic.vo;
-
-import org.springframework.stereotype.Component;
-
-@Component("statisticVO")
-public class statisticVO {
-
-    private int wordId;
-    private String word;
-    private int wrongCount;
-    private int correctCount;
-
-    public int getWordId() {
-        return wordId;
-    }
-
-    public void setWordId(int wordId) {
-        this.wordId = wordId;
-    }
-
-    public String getWord() {
-        return word;
-    }
-
-    public void setWord(String word) {
-        this.word = word;
-    }
-
-    public int getWrongCount() {
-        return wrongCount;
-    }
-
-    public void setWrongCount(int wrongCount) {
-        this.wrongCount = wrongCount;
-    }
-
-    public int getCorrectCount() {
-        return correctCount;
-    }
-
-    public void setCorrectCount(int correctCount) {
-        this.correctCount = correctCount;
-    }
-}
Index: src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAOImpl.java b/src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAOImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAOImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,97 +0,0 @@
-package com.project.inquiryBoard.dao;
-
-import com.project.inquiryBoard.vo.AnswerVO;
-import com.project.inquiryBoard.vo.imageVO;
-import com.project.inquiryBoard.vo.inquiryBoardVO;
-import org.apache.ibatis.session.SqlSession;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.dao.DataAccessException;
-import org.springframework.stereotype.Repository;
-
-import java.util.List;
-import java.util.Map;
-
-@Repository("inquiryBoardDAO")
-public class inquiryBoardDAOImpl implements inquiryBoardDAO {
-    @Autowired
-    SqlSession session;
-    @Override
-    public List<inquiryBoardVO> selectInquiryBoard(Map inquiryBoardMap) throws DataAccessException {
-        return session.selectList("mapper.inquiryBoard.selectInquiryBoard",inquiryBoardMap);
-    }
-
-    @Override
-    public inquiryBoardVO selectBoardDetail(Map boardMap) throws DataAccessException {
-        return session.selectOne("mapper.inquiryBoard.selectBoardDetail",boardMap);
-    }
-
-    @Override
-    public List<AnswerVO> selectBoardAnswer(Map boardMap) throws DataAccessException {
-        return session.selectList("mapper.inquiryBoard.selectBoardAnswer",boardMap);
-    }
-
-    @Override
-    public int maxBoardId() throws DataAccessException {
-        return session.selectOne("mapper.inquiryBoard.maxBoardId");
-    }
-
-    @Override
-    public void writeBoard(Map boardMap) throws DataAccessException {
-        session.insert("mapper.inquiryBoard.writeBoard",boardMap);
-    }
-
-    @Override
-    public void writeImageBoard(List<imageVO> imageVOList) throws DataAccessException {
-        session.insert("mapper.inquiryBoard.writeImageBoard", imageVOList);
-    }
-
-    @Override
-    public int maxBoardImageFileId() throws DataAccessException {
-        return session.selectOne("mapper.inquiryBoard.maxBoardImageFileId");
-    }
-
-    @Override
-    public List<imageVO> selectBoardImage(Map boardMap) throws DataAccessException {
-        return session.selectList("mapper.inquiryBoard.selectBoardImage",boardMap);
-    }
-
-    @Override
-    public void writeAnswer(Map boardMap) throws DataAccessException {
-        session.insert("mapper.inquiryBoard.writeAnswer",boardMap);
-    }
-
-    @Override
-    public int maxAnswerId() throws DataAccessException {
-        return session.selectOne("mapper.inquiryBoard.maxAnswerId");
-    }
-
-    @Override
-    public void updateBoard(Map boardMap) throws DataAccessException {
-        session.update("mapper.inquiryBoard.updateBoard",boardMap);
-    }
-
-    @Override
-    public void updateImageBoard(List<imageVO> imageVOList) throws DataAccessException {
-        session.update("mapper.inquiryBoard.updateImageBoard", imageVOList);
-    }
-
-    @Override
-    public void deleteBoard(Map boardMap) throws DataAccessException {
-        session.delete("mapper.inquiryBoard.deleteBoard",boardMap);
-    }
-
-    @Override
-    public void modifyAnswer(Map answerMap) throws DataAccessException {
-        session.update("mapper.inquiryBoard.modifyAnswer",answerMap);
-    }
-
-    @Override
-    public void deleteAnswer(Map answerMap) throws DataAccessException {
-        session.delete("mapper.inquiryBoard.deleteAnswer",answerMap);
-    }
-
-    @Override
-    public int selectTotalCountBoard(Map boardMap) throws DataAccessException {
-        return session.selectOne("mapper.inquiryBoard.selectTotalCountBoard",boardMap);
-    }
-}
Index: src/main/resources/tiles/tiles_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/tiles/tiles_main.xml b/src/main/resources/tiles/tiles_main.xml
deleted file mode 100644
--- a/src/main/resources/tiles/tiles_main.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE tiles-definitions PUBLIC
-       "-//Apache Software Foundation//DTD Tiles Configuration 2.0//EN"
-       "http://tiles.apache.org/dtds/tiles-config_2_0.dtd">
-<tiles-definitions>
-	<definition name="baseLayout"
-		template="/WEB-INF/views/common/tiles/layout.jsp">
-		<put-attribute name="title" value="레이아웃 페이지" />
-		<put-attribute name="header" value="/WEB-INF/views/common/tiles/header.jsp" />
-		<put-attribute name="body" value="" />
-		<put-attribute name="footer" value="/WEB-INF/views/common/tiles/footer.jsp" />
-	</definition>
-
-	<definition name="/main/main" extends="baseLayout">
-		<put-attribute name="title" value="Remind 메인페이지" />
-		<put-attribute name="header" value=""/>
-		<put-attribute name="body" value="/WEB-INF/views/main/main.jsp" />
-	</definition>
-</tiles-definitions>
-
-
Index: src/main/resources/mybatis/mappers/inquiryBoard.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mybatis/mappers/inquiryBoard.xml b/src/main/resources/mybatis/mappers/inquiryBoard.xml
deleted file mode 100644
--- a/src/main/resources/mybatis/mappers/inquiryBoard.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,154 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-
-
-<mapper namespace="mapper.inquiryBoard">
-    <resultMap id="inquiryBoardVO" type="inquiryBoardVO">
-        <result property="boardId" column="boardId"/>
-        <result property="title" column="title"/>
-        <result property="content" column="content"/>
-        <result property="writeDate" column="writeDate"/>
-        <result property="userId" column="userId"/>
-    </resultMap>
-
-    <resultMap id="imageVO" type="imageVO">
-        <result property="imageFileId" column="imageFileId"/>
-        <result property="imageFileName" column="imageFileName"/>
-        <result property="savedDate" column="savedDate"/>
-        <result property="boardId" column="boardId"/>
-    </resultMap>
-
-    <resultMap id="AnswerVO" type="AnswerVO">
-        <result property="AnswerId" column="AnswerId"/>
-        <result property="boardId" column="boardId"/>
-        <result property="content" column="content"/>
-        <result property="userId" column="userId"/>
-        <result property="savedDate" column="savedDate"/>
-    </resultMap>
-
-    <select id="maxBoardId" resultType="int">
-        select IFNULL(MAX(boardId), 0) + 1
-        from inquiryBoard
-    </select>
-
-    <select id="maxBoardImageFileId" resultType="int">
-        select IFNULL(MAX(imageFileId), 0) + 1
-        from inquiry_imageFile
-    </select>
-
-    <select id="maxAnswerId" resultType="int">
-        select IFNULL(MAX(AnswerId), 0) + 1
-        from inquiry_Answer
-    </select>
-
-    <select id="selectInquiryBoard" resultType="inquiryBoardVO" parameterType="java.util.Map">
-        <![CDATA[
-        select boardId, title, writeDate, userId
-        from inquiryBoard
-        ]]>
-        <if test="selectMode=='like'">
-        <![CDATA[
-        where title like CONCAT('%',#{title},'%')
-        ]]>
-        </if>
-        <![CDATA[
-        order by boardId
-        limit 10 offset #{startPage}
-        ]]>
-    </select>
-
-    <select id="selectTotalCountBoard" resultType="int">
-        <![CDATA[
-        select count(*)
-        from inquiryBoard
-        ]]>
-        <if test="selectMode=='like'">
-            where title like CONCAT('%',#{title},'%')
-        </if>
-    </select>
-
-    <select id="selectBoardDetail" resultType="inquiryBoardVO" parameterType="java.util.Map">
-        <![CDATA[
-        select boardId, title, content, writeDate, userId
-        from inquiryBoard
-        where boardId = #{boardId}
-        ]]>
-    </select>
-
-    <select id="selectBoardAnswer" resultType="AnswerVO" parameterType="java.util.Map">
-        <![CDATA[
-        select *
-        from (inquiry_Answer as Answer join inquiryBoard as Board on Answer.boardId = Board.BoardId)
-        where Board.BoardId = #{boardId};
-        ]]>
-    </select>
-
-    <insert id="writeBoard" parameterType="java.util.Map">
-        insert into inquiryBoard(boardId, title, content, userId)
-        values (#{boardId}, #{title}, #{content}, #{userId})
-    </insert>
-
-    <insert id="writeImageBoard" parameterType="java.util.Map">
-        insert into inquiry_imageFile(imageFileId, imageFileName, boardId)
-        <foreach collection="list" item="item" separator=",">
-            values(#{item.imageFileId},#{item.imageFileName},#{item.boardId})
-        </foreach>
-    </insert>
-
-    <select id="selectBoardImage" parameterType="java.util.Map" resultType="imageVO">
-        <![CDATA[
-        select imageFileId, imageFileName, boardId, savedDate
-        from inquiry_imageFile
-        where boardId = #{boardId}
-        ]]>
-    </select>
-
-    <insert id="writeAnswer" parameterType="java.util.Map">
-        <![CDATA[
-        insert into inquiry_Answer(boardId, content, savedDate, userId, AnswerId)
-        values (#{boardId}, #{content}, current_timestamp, #{userId}, #{AnswerId})
-        ]]>
-    </insert>
-
-    <update id="updateBoard" parameterType="java.util.Map">
-        <![CDATA[
-        Update inquiryBoard
-        set title  = #{title},
-            content=#{content}
-        where boardId = #{boardId}
-        ]]>
-    </update>
-
-    <update id="updateImageBoard" parameterType="java.util.Map">
-        <foreach collection="list" item="item" separator="," close="">
-            Update inquiry_imageFile
-            set imageFileName = #{item.imageFileName}, savedDate=current_timestamp
-            where imageFileId = #{item.imageFileId}
-        </foreach>
-    </update>
-
-    <delete id="deleteBoard" parameterType="java.util.Map">
-        <![CDATA[
-        DELETE
-        FROM inquiryBoard
-        WHERE boardId = #{boardId}
-        ]]>
-    </delete>
-
-    <update id="modifyAnswer" parameterType="java.util.Map">
-        <![CDATA[
-        UPDATE inquiry_Answer
-        set content   = #{content},
-            savedDate = current_timestamp
-        where AnswerId = #{AnswerId}
-        ]]>
-    </update>
-
-    <delete id="deleteAnswer" parameterType="java.util.Map">
-        DELETE
-        FROM inquiry_Answer
-        WHERE  AnswerId= #{AnswerId}
-    </delete>
-</mapper>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/main/main.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/main/main.jsp b/src/main/webapp/WEB-INF/views/main/main.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/main/main.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,46 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>Remind Home</title>
-    <script>
-        <c:choose>
-        <c:when test="${message eq 'loginFail'}">
-        alert("아이디 혹은 비밀번호가 틀렸습니다 다시 로그인해주세요.");
-        </c:when>
-        <c:when test="${message eq 'notAuthorization'}">
-        alert("이메일 인증먼저 해주세요.");
-        </c:when>
-        <c:when test="${message eq 'registerSuccess'}">
-        alert("이메일 인증후 해당 계정으로 이용하실수 있습니다.");
-        </c:when>
-        <c:when test="${message eq 'authFalse'}">
-        alert("올바른 이메일로 인증해주세요.");
-        </c:when>
-        </c:choose>
-    </script>
-    <c:if test="${not empty userId}">
-        <script>
-            location.href = "${contextPath}/main/mainContent";
-        </script>
-    </c:if>
-
-</head>
-<body>
-<div>
-    <form action="${contextPath}/member/registerMemberForm.do" method="post">
-        <button type="submit">회원가입</button>
-    </form>
-
-    <form action="${contextPath}/member/login" method="post">
-        <input type="text" id="userId" name="userId">
-        <input type="password" name="userPwd">
-        <input type="submit" value="로그인">
-    </form>
-    <a href="${contextPath}/member/findUserIdForm.do">아이디 찾기</a>
-    <a href="${contextPath}/member/findUserPwdForm.do">비밀번호 찾기</a>
-</div>
-</body>
-</html>
Index: src/main/java/com/project/statistic/dao/statisticDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/statistic/dao/statisticDAO.java b/src/main/java/com/project/statistic/dao/statisticDAO.java
deleted file mode 100644
--- a/src/main/java/com/project/statistic/dao/statisticDAO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,21 +0,0 @@
-package com.project.statistic.dao;
-
-import com.project.statistic.vo.statisticVO;
-import com.project.word.vo.wordVO;
-import org.springframework.dao.DataAccessException;
-
-import java.util.Map;
-
-public interface statisticDAO {
-    void addWord(wordVO wordvo)throws DataAccessException;
-
-    void addDailyWord(wordVO wordvo)throws DataAccessException;
-
-    void updateWrongCard(Map wordMap) throws DataAccessException;
-
-    void updateAppropriateCard(Map wordMap)throws DataAccessException;
-
-    int countWord(Map staMap) throws DataAccessException;
-
-    statisticVO search(Map staMap) throws DataAccessException;
-}
Index: src/main/java/com/project/common/Interceptor/loginInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/common/Interceptor/loginInterceptor.java b/src/main/java/com/project/common/Interceptor/loginInterceptor.java
deleted file mode 100644
--- a/src/main/java/com/project/common/Interceptor/loginInterceptor.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,32 +0,0 @@
-package com.project.common.Interceptor;
-
-import org.springframework.web.servlet.HandlerInterceptor;
-import org.springframework.web.servlet.ModelAndView;
-import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.servlet.http.HttpSession;
-
-public class loginInterceptor extends HandlerInterceptorAdapter {
-    @Override
-    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
-        HttpSession session = request.getSession();
-        Object userId = session.getAttribute("userId");
-        if(userId == null){
-            response.sendRedirect(request.getContextPath()+"/main/main.do");
-            return false;
-        }else{
-            return true;
-        }
-    }
-    @Override
-    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {
-
-    }
-
-    @Override
-    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {
-
-    }
-}
Index: src/main/java/com/project/word/dao/wordDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/word/dao/wordDAO.java b/src/main/java/com/project/word/dao/wordDAO.java
deleted file mode 100644
--- a/src/main/java/com/project/word/dao/wordDAO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,48 +0,0 @@
-package com.project.word.dao;
-
-import com.project.word.vo.wordVO;
-import org.springframework.dao.DataAccessException;
-
-import javax.xml.crypto.Data;
-import java.util.List;
-import java.util.Map;
-
-public interface wordDAO {
-    void addWord(wordVO wordvo) throws DataAccessException;
-
-    void addDailyWord(wordVO wordvo) throws DataAccessException;
-
-    int countWrongReviewCard(Map wordMap) throws DataAccessException;
-
-    int countReviewCard(Map wordMap) throws DataAccessException;
-
-    int countWrongNewCard(Map wordMap) throws DataAccessException;
-
-    int countNewCard(Map wordMap) throws DataAccessException;
-
-    int maxWordId(wordVO wordvo) throws DataAccessException;
-
-    wordVO selectReviewCard(Map wordMap) throws DataAccessException;
-
-    wordVO selectNewCard(Map wordMap) throws DataAccessException;
-
-    void updateWrongCard(Map wordMap) throws DataAccessException;
-
-    void updateReviewCard_Appropriate(Map wordMap) throws DataAccessException;
-
-    wordVO selectRemainedReviewCard(Map wordMap) throws DataAccessException;
-
-    wordVO selectRemainedNewCard(Map wordMap) throws DataAccessException;
-
-    void updateNewCard_Appropriate(Map wordMap) throws DataAccessException;
-
-    List<wordVO> selectModifyWord(Map<String, Object> wordMap) throws DataAccessException;
-
-    int totalCount(Map<String, Object> wordMap) throws DataAccessException;
-
-    wordVO selectSpecificWord(Map<String, Object> wordMap)throws DataAccessException;
-
-    void updateWord(Map<String, Object> wordMap) throws DataAccessException;
-
-    void deleteWord(Map<String, Object> wordMap) throws DataAccessException;
-}
Index: src/main/webapp/WEB-INF/views/inquiryBoard/modifyBoardForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/inquiryBoard/modifyBoardForm.jsp b/src/main/webapp/WEB-INF/views/inquiryBoard/modifyBoardForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/inquiryBoard/modifyBoardForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,75 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>문의 게시판 상세보기</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        var cnt = 0;
-
-        function modifyImage() {
-            if (cnt == 0) {
-                $("#add_ImageDiv").append("<br>" + "<input  type='file' name='imageFileName' id='imageFileName' onchange='setImage(event)'/>");
-                cnt++;
-            } else {
-                alert("이미지는 한 개만 추가가 가능합니다.");
-            }
-        }
-
-        function setImage(event) {
-            var reader = new FileReader();
-            reader.readAsDataURL(event.target.files[0]);
-
-            reader.onload = function (event) {
-                var img = document.getElementById("inquiryBoardImage");
-                img.setAttribute("src", event.target.result);
-            };
-        }
-
-    </script>
-</head>
-<body>
-<form action="${contextPath}/inquiryBoard/modifyBoard" method="post" enctype="multipart/form-data">
-    <table>
-        <tr>
-            <td>제목</td>
-            <td><input type="text" name="title" value="${inquiryBoardVO.title}"></td>
-        </tr>
-        <tr>
-            <td>내용</td>
-            <td><textarea name="content">${inquiryBoardVO.content}</textarea></td>
-        </tr>
-        <tr>
-            <td>작성자</td>
-            <td><input type="text" name="userId" value="${inquiryBoardVO.userId}" disabled></td>
-        </tr>
-
-        <tr>
-            <td>글쓴날짜</td>
-            <td><input type="text" name="writeDate" value="${inquiryBoardVO.writeDate}" disabled></td>
-        </tr>
-
-        <input type="hidden" name="boardId" value="${inquiryBoardVO.boardId}">
-        <c:forEach var="item" items="${imageVO}" varStatus="itemStatus">
-            <tr>
-                <td><img id="inquiryBoardImage"
-                         src="${contextPath}/download.do?boardId=${item.boardId}&imageFileName=${item.imageFileName}">
-                </td>
-                <input type="hidden" name="originalFileName" value="${item.imageFileName}">
-                <input type="hidden" name="imageFileId" value="${item.imageFileId}">
-            </tr>
-        </c:forEach>
-    </table>
-    <input type="submit" value="적용하기">
-
-    <div>
-        <input type="button" onclick="modifyImage()" value="이미지 수정">
-        <div id="add_ImageDiv"></div>
-    </div>
-
-</form>
-</body>
-</html>
\ No newline at end of file
Index: src/main/java/com/project/statistic/service/statisticServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/statistic/service/statisticServiceImpl.java b/src/main/java/com/project/statistic/service/statisticServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/statistic/service/statisticServiceImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,50 +0,0 @@
-package com.project.statistic.service;
-
-import com.project.statistic.dao.statisticDAO;
-import com.project.statistic.vo.statisticVO;
-import com.project.word.vo.wordVO;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-import org.springframework.transaction.annotation.Propagation;
-import org.springframework.transaction.annotation.Transactional;
-
-import java.util.Map;
-
-@Transactional(propagation = Propagation.REQUIRED)
-@Service("statisticService")
-public class statisticServiceImpl implements statisticService {
-    @Autowired
-    statisticDAO statisticDAO;
-
-    @Override
-    public void addWord(wordVO wordvo) {
-        statisticDAO.addWord(wordvo);
-    }
-
-    @Override
-    public void addDailyWord(wordVO wordvo) {
-        statisticDAO.addDailyWord(wordvo);
-    }
-
-    @Override
-    public void updateWrongCard(Map wordMap) throws Exception {
-        statisticDAO.updateWrongCard(wordMap);
-    }
-
-    @Override
-    public void updateAppropriateCard(Map wordMap) throws Exception {
-        statisticDAO.updateAppropriateCard(wordMap);
-    }
-
-    @Override
-    public int countWord(Map staMap) throws Exception {
-        return statisticDAO.countWord(staMap);
-    }
-
-    @Override
-    public statisticVO search(Map staMap) throws Exception {
-        return statisticDAO.search(staMap);
-    }
-
-
-}
Index: src/main/webapp/WEB-INF/views/inquiryBoard/inquiryBoardForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/inquiryBoard/inquiryBoardForm.jsp b/src/main/webapp/WEB-INF/views/inquiryBoard/inquiryBoardForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/inquiryBoard/inquiryBoardForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,129 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<c:set var="pageNum" value="${boardMap.pageNum}"/>
-<c:set var="section" value="${boardMap.section}"/>
-<c:set var="inquiryBoardVO" value="${boardMap.inquiryBoardVO}"/>
-<c:set var="totalCount" value="${boardMap.totalCount}"/>
-<c:set var="selectMode" value="${boardMap.selectMode}"/>
-<c:set var="title" value="${boardMap.title}"/>
-
-<html>
-<head>
-    <title>문의 게시판</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-
-
-    <c:if test="${empty inquiryBoardVO}">
-        <script>
-            window.onload = function () {
-                alert("게시글이 없습니다.");
-            }
-        </script>
-    </c:if>
-</head>
-
-<body>
-<div>
-    <form action="${contextPath}/inquiryBoard/title" method="get">
-        <input type="text" name="title" placeholder="글 제목을 입력하세요.">
-        <input type="submit" value="검색하기">
-    </form>
-
-</div>
-
-<div>
-    <table>
-        <c:forEach var="item" items="${inquiryBoardVO}" varStatus="itemStatus">
-            <tr>
-                <td><a href="${contextPath}/inquiryBoard/board/${item.boardId}" methods="get">${item.title}</a></td>
-                <td>${item.userId}</td>
-                <td>${item.writeDate}</td>
-                <td>${item.boardId}</td>
-            </tr>
-        </c:forEach>
-    </table>
-</div>
-
-<div>
-    <c:if test="${selectMode=='like'}">
-        <c:choose>
-            <c:when test="${totalCount>100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <c:if test="${section>1 && page==1}">
-                        <a href="${contextPath}/inquiryBoard/title?section=${section-1}&pageNum=1&title=${title}">pre</a>
-                    </c:if>
-                    <a href="${contextPath}/inquiryBoard/title?section=${section}&pageNum=${page}&title=${title}">${(section-1)*10+page}</a>
-                    <c:if test="${page==10}">
-                        <a href="${contextPath}/inquiryBoard/title?section=${section+1}&pageNum=1&title=${title}">next</a>
-                    </c:if>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount == 100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <a href="${contextPath}/inquiryBoard/title?section=${section}&pageNum=${page}&title=${title}">${page}</a>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount < 100}">
-                <c:forEach var="page" begin="1" end="${totalCount/10+1}" step="1">
-                    <c:choose>
-                        <c:when test="${page==pageNum}">
-                            <a style="color:#db7093"
-                               href="${contextPath}/inquiryBoard/title?section=${section}&pageNum=${page}&title=${title}">${page}</a>
-                        </c:when>
-                        <c:otherwise>
-                            <a href="${contextPath}/inquiryBoard/title?section=${section}&pageNum=${page}&title=${title}">${page}</a>
-                        </c:otherwise>
-                    </c:choose>
-                </c:forEach>
-            </c:when>
-        </c:choose>
-    </c:if>
-
-    <c:if test="${selectMode!='like'}">
-        <c:choose>
-            <c:when test="${totalCount>100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <c:if test="${section>1 && page==1}">
-                        <a href="${contextPath}/inquiryBoard/boardForm?section=${section-1}&pageNum=1">pre</a>
-                    </c:if>
-                    <a href="${contextPath}/inquiryBoard/boardForm?section=${section}&pageNum=${page}">${(section-1)*10+page}</a>
-                    <c:if test="${page==10}">
-                        <a href="${contextPath}/inquiryBoard/boardForm?section=${section+1}&pageNum=1">next</a>
-                    </c:if>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount == 100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <a href="${contextPath}/inquiryBoard/boardForm?section=${section}&pageNum=${page}">${page}</a>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount < 100}">
-                <c:forEach var="page" begin="1" end="${totalCount/10+1}" step="1">
-                    <c:choose>
-                        <c:when test="${page==pageNum}">
-                            <a style="color:#db7093"
-                               href="${contextPath}/inquiryBoard/boardForm?section=${section}&pageNum=${page}">${page}</a>
-                        </c:when>
-                        <c:otherwise>
-                            <a href="${contextPath}/inquiryBoard/boardForm?section=${section}&pageNum=${page}">${page}</a>
-                        </c:otherwise>
-                    </c:choose>
-                </c:forEach>
-            </c:when>
-        </c:choose>
-    </c:if>
-</div>
-
-<div>
-    <a href="${contextPath}/inquiryBoard/writeBoardForm.do">글쓰기</a>
-</div>
-
-</body>
-</html>
Index: src/main/webapp/WEB-INF/views/main/mainContent.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/main/mainContent.jsp b/src/main/webapp/WEB-INF/views/main/mainContent.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/main/mainContent.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,28 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>Content Page</title>
-        <c:if test="${not empty finish}">
-            <script>
-                alert("외울 단어가 없습니다. mainContent.jsp페이지입니다.");
-            </script>
-        </c:if>
-
-
-</head>
-
-<body>
-        <a href="${contextPath}/member/logout">로그아웃</a>
-    <ul>
-        <li><a href="${contextPath}/dailyWord/dailyWordForm.do"/>오늘의 단어</li>
-        <li><a href="${contextPath}/word/saveWordForm.do"/>단어저장</li>
-        <li><a href="${contextPath}/word/wordBoardForm.do"/>단어수정</li>
-        <li><a href="${contextPath}/word/StudyForm.do"/>학습하기</li>
-        <li><a href="${contextPath}/inquiryBoard/boardForm"/>문의게시판</li>
-        <li><a href="${contextPath}/statistic/statisticForm.do"/>통계</li>
-    </ul>
-</body>
-</html>
Index: src/main/webapp/WEB-INF/views/common/tiles/footer.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/common/tiles/footer.jsp b/src/main/webapp/WEB-INF/views/common/tiles/footer.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/common/tiles/footer.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,14 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=utf-8"
-    pageEncoding="utf-8"
-    isELIgnored="false"    
-    %>
-<%@ taglib uri="http://tiles.apache.org/tags-tiles" prefix="tiles" %>    
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
-<c:set var="contextPath"  value="${pageContext.request.contextPath}"  />
-<hr>
-<div>
-	연락처 : 010-9188-6481<br>
-	이메일 : tjdwns6481@naver.com<br>
-	<a href="https://github.com/ksj0109188">깃헙 주소</a>
-</div>
-
Index: src/main/webapp/WEB-INF/views/member/registerMemberForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/member/registerMemberForm.jsp b/src/main/webapp/WEB-INF/views/member/registerMemberForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/member/registerMemberForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,195 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>회원가입창</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        var checkOverlapIdBoolean = false;
-
-        function checkValidId() {
-            var userId = document.getElementById("userId");
-            var str = userId.value;
-            var regul1 = /^[a-zA-Z0-9]{4,12}$/;
-            if (str == "") {
-                alert("아이디를 입력해주세요");
-                userId.focus();
-                return false;
-            } else if (str.length < 4 || str.length > 12) {
-                alert("아이디는 길이는 4~12이내입니다.");
-                userId.focus();
-                return false;
-            } else if (regul1.test(str)) {
-                return true;
-            } else {
-                alert("아이디는 영어, 숫자 조합만 이용가능합니다.");
-                userId.focus();
-                return false;
-            }
-        }
-
-        function checkValidPassword() {
-            var userpwd = document.getElementById("userPwd1");
-            var pw = userpwd.value;
-            var num = pw.search(/[0-9]/g);
-            var eng = pw.search(/[a-z]/ig);
-            var spe = pw.search(/[`~!@@#$%^&*|₩₩₩'₩";:₩/?]/gi);
-            if (pw == "" || pw.length <= 0) {
-                alert("비밀번호를 입력해주세요.");
-                userpwd.focus();
-                return false;
-            }
-            if (pw.length < 10 || pw.length > 20) {
-                alert("비밀번호를 10자리 ~ 20자리 이내로 입력해주세요.");
-                userpwd.focus();
-                return false;
-            }
-
-            if (pw.search(/₩s/) != -1) {
-                alert("비밀번호는 공백없이 입력해주세요.");
-                userpwd.focus();
-                return false;
-            }
-            if ((num < 0 && eng < 0) || (eng < 0 && spe < 0) || (spe < 0 && num < 0)) {
-                alert("영문,숫자, 특수문자 중 2가지 이상을 혼합하여 입력해주세요.");
-                userpwd.focus();
-                return false;
-            }
-            return true;
-        }
-
-        function checkPasswordOverlap() {
-            var original = document.getElementById("userPwd1").value;
-            var duplicate = document.getElementById("userPwd2").value;
-            if (original != duplicate) {
-                alert("비밀번호가 일치하지 않습니다.");
-                $('#userPwd2').val('');
-                $('#userPwd2').focus();
-                return false;
-            } else {
-                return true;
-            }
-        }
-
-        function checkValidEmail() {
-            var email = document.getElementById("userEmail");
-            var str = email.value;
-            var regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;
-            if (str == null || str.length <= 0) {
-                alert("이메일을 입력해주세요.");
-                email.focus();
-                return false;
-            } else if (regExp.test(str)) {
-                return true;
-            } else {
-                alert("이메일 주소를 다시 확인해주세요.");
-                email.focus();
-                return false;
-            }
-        }
-
-        function checkOverlap() {
-            var userBox = document.getElementById("userId");
-            var overlapButton = document.getElementById("overlapButton");
-            if (userBox.value == "") {
-                alert("아이디를 올바르게 입력해주세요.");
-                return;
-            } else if (!checkValidId()) {
-                return;
-            }
-            $.ajax({
-                method: "get",
-                url: "${contextPath}/member/overlap?userId=" + userBox.value,
-                success: function (data) {
-                    if (data == "notOverlapping") {
-                        alert("사용할 수 있는 아이디입니다.");
-                        checkOverlapIdBoolean = true;
-                        userBox.setAttribute("readOnly", "true");
-                        overlapButton.setAttribute("disabled", "true");
-                    } else {
-                        alert("중복된 아이디입니다.");
-                    }
-                },
-                error: function () {
-                    alert("잠시후 다시 시도해주세요.");
-                }
-            });
-        }
-
-        function submitForm() {
-            var form = document.getElementById("userForm");
-            var userNameValue = document.getElementById("userName").value;
-            var phone1Value = document.getElementById("phone1").value;
-            var phone2Value = document.getElementById("phone2").value;
-            var phone3Value = document.getElementById("phone3").value;
-            if (!checkValidId()) {
-                return;
-            } else if (!checkValidPassword()) {
-                return;
-            } else if (!checkPasswordOverlap()) {
-                return;
-            } else if (!checkValidEmail()) {
-                return;
-            } else if (checkOverlapIdBoolean == false) {
-                alert("아이디 중복확인을 해주세요.");
-                return;
-            } else if (phone1Value == "" || phone2Value == "" || phone3Value == "") {
-                alert("휴대폰 번호를 입력해주세요.");
-                return;
-            } else if (userNameValue == "") {
-                alert("이름을 입력해주세요.")
-            } else {
-                form.submit();
-            }
-        }
-
-
-    </script>
-</head>
-<body>
-<form id="userForm" action="${contextPath}/member/addMember.do" method="post">
-    <div>
-        이름 : <input type="text" id="userName" name="userName" placeholder="아이디를 찾을 때 사용됩니다.">
-    </div>
-    <div>
-        아이디
-        <input type="text" id="userId" name="userId" minlength="4" maxlength="12">
-        <span>아이디는 4~12자 이내로 정해주세요.(이메일 형식이 아닙니다.)</span>
-        <input type="button" id="overlapButton" value="중복확인하기" onclick="checkOverlap()">
-    </div>
-    <div>
-        비밀번호<input type="password" id="userPwd1" name="userPwd" minlength="10" maxlength="20"
-                   placeholder="">
-        <span>10~20자리 숫자,문자, 특수문자 중 2개 이상을 혼합해 입력하세요.</span><br>
-        재입력<input type="password" id="userPwd2" name="userPwd2" minlength="10"
-                  maxlength="20" placeholder="비밀번호 재입력">
-    </div>
-    <div>
-        email<input type="text" id="userEmail" name="email">
-    </div>
-    <div>
-        <select id="phone1" name="phone1">
-            <option>없음</option>
-            <option selected value="010">010</option>
-            <option value="011">011</option>
-            <option value="016">016</option>
-            <option value="017">017</option>
-            <option value="018">018</option>
-            <option value="019">019</option>
-        </select>
-        <input type="text" id="phone2" name="phone2"> - <input type="text" id="phone3" name="phone3">
-        <input type="button" id="submitButton" value="가입하기" onclick="submitForm()">
-    </div>
-</form>
-</body>
-</html>
Index: src/main/webapp/WEB-INF/views/statistic/statisticForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/statistic/statisticForm.jsp b/src/main/webapp/WEB-INF/views/statistic/statisticForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/statistic/statisticForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,80 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<c:set var="countWord" value="${staMap.countWord}"/>
-
-<html>
-<head>
-    <title>회원가입창</title>
-    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.11/c3.min.css"/>
-    <script src="https://d3js.org/d3.v3.min.js"></script>
-    <script src="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.11/c3.min.js"></script>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        function searchStatistic() {
-            var searchText = document.getElementById("searchText");
-            $.ajax({
-                method: "get",
-                url: "${contextPath}/statistic/search/" + searchText.value,
-                success: function (data) {
-                    if (data == "Empty") {
-                        alert("해당하는 단어가 없습니다.");
-                    } else {
-                        drawChart(data.word, data.wrongCount, data.correctCount);
-                    }
-                }, error: function () {
-                    alert("잠시후 다시 시도해주세요.");
-                }
-            });
-        }
-
-        function drawChart(word, wrongCount, correctCount) {
-            var pieData = {"틀린 횟수": wrongCount, "맞은 횟수": correctCount};
-            var chartDonut = c3.generate({
-                bindto: "#piechart",
-                data: {
-                    json: [pieData],
-                    keys: {
-                        value: Object.keys(pieData),
-                    },
-                    type: "donut",
-                },
-                donut: {
-                    title: word
-                }
-            });
-            var chartDonutColors = chartDonut.data.colors();
-            $("#wrongCount").html("틀릿 횟수:"+wrongCount);
-            $("#correctCount").html("맞은 횟수:"+correctCount);
-            $("#wrongCount").css("color", chartDonutColors["틀린 횟수"]);
-            $("#correctCount").css("color", chartDonutColors["맞은 횟수"]);
-        }
-
-    </script>
-</head>
-<body>
-
-<div>
-    <input id="searchText" type="text" placeholder="내가 저장한 단어를 입력하면 틀림과 맞은 횟수가 나옵니다.">
-    <input type="button" value="검색" onclick="searchStatistic()">
-</div>
-
-<div>
-    <span>저장한 카드수:${countWord}</span>
-</div>
-<div>
-    <div id="pieChart"></div>
-    <div style="text-align:center">
-        <span id="wrongCount"></span>
-        <span id="correctCount"></span>
-    </div>
-</div>
-</body>
-</html>
Index: src/main/java/com/project/statistic/Controller/statisticControllerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/statistic/Controller/statisticControllerImpl.java b/src/main/java/com/project/statistic/Controller/statisticControllerImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/statistic/Controller/statisticControllerImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,73 +0,0 @@
-package com.project.statistic.Controller;
-
-import com.project.common.base.BaseController;
-import com.project.statistic.service.statisticService;
-import com.project.statistic.vo.statisticVO;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RestController;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.servlet.http.HttpSession;
-import java.util.HashMap;
-import java.util.Map;
-
-@RequestMapping(value = "/statistic")
-@RestController("statisticController")
-public class statisticControllerImpl extends BaseController implements statisticController {
-
-    @Autowired
-    statisticService statisticService;
-
-    @Autowired
-    statisticVO statisticVO;
-
-    @RequestMapping("/statisticForm.do")
-    public ModelAndView statisticForm(HttpServletRequest request, HttpServletResponse response) {
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        Map<String, Object> staMap = new HashMap<>();
-        staMap.put("userId", userId);
-        ModelAndView modelAndView;
-        try {
-            int countWord = statisticService.countWord(staMap);
-            staMap.remove("userId");
-            staMap.put("countWord", countWord);
-            modelAndView = new ModelAndView("/statistic/statisticForm");
-            modelAndView.addObject("staMap", staMap);
-
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("/common/error");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping("/search/{word}")
-    public ResponseEntity search(HttpServletRequest request, HttpServletResponse response, @PathVariable("word") String word) {
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        Map staMap = new HashMap<>();
-        staMap.put("userId", userId);
-        staMap.put("word", word);
-        ResponseEntity responseEntity;
-        try {
-            statisticVO statisticVO = statisticService.search(staMap);
-            if (statisticVO == null) {
-                responseEntity = new ResponseEntity<String>("Empty", HttpStatus.OK);
-            } else {
-                responseEntity = new ResponseEntity<statisticVO>(statisticVO, HttpStatus.OK);
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-            responseEntity = new ResponseEntity<String>("error", HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-
-}
Index: src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml b/src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans:beans xmlns="http://www.springframework.org/schema/mvc"
-	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-			 xmlns:mvc="http://www.springframework.org/schema/mvc"
-	xmlns:beans="http://www.springframework.org/schema/beans"
-	xmlns:context="http://www.springframework.org/schema/context"
-	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
-		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
-		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
-
-	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
-	
-	<!-- Enables the Spring MVC @Controller programming model -->
-	<annotation-driven />
-
-	<!--시작페이지 설정-->
-	<view-controller path="/" view-name="/main/main"/>
-
-	<context:component-scan base-package="com.project" />
-
-	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
-	<resources mapping="/resources/**" location="/resources/" />
-	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
-
-	<!--tiles-->
-	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
-		<beans:property name="definitions">
-			<beans:list>
-				<beans:value>classpath:tiles/*.xml</beans:value>
-			</beans:list>
-		</beans:property>
-		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
-	</beans:bean>
-	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
-		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
-	</beans:bean>
-
-	<!-- Interceptor-->
-	<mvc:interceptors>
-		<mvc:interceptor>
-			<mvc:mapping path="/*/*.do"/>
-			<beans:bean class="com.project.common.Interceptor.viewInterceptor"/>
-		</mvc:interceptor>
-
-		<mvc:interceptor>
-			<mvc:mapping path="/word/*"/>
-			<mvc:mapping path="/statistic/*"/>
-			<mvc:mapping path="/inquiryBoard/*"/>
-			<beans:bean class="com.project.common.Interceptor.loginInterceptor"/>
-		</mvc:interceptor>
-	</mvc:interceptors>
-
-	<!--multipartResolver-->
-	<beans:bean id="multipartResolver" 	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
-		<beans:property name="maxUploadSize" value="52428800" />
-		<beans:property name="maxInMemorySize" value="52428800" />
-		<beans:property name="defaultEncoding" value="utf-8" />
-	</beans:bean>
-
-</beans:beans>
Index: src/main/java/com/project/statistic/dao/statisticDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/statistic/dao/statisticDAOImpl.java b/src/main/java/com/project/statistic/dao/statisticDAOImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/statistic/dao/statisticDAOImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,48 +0,0 @@
-package com.project.statistic.dao;
-
-import com.project.statistic.vo.statisticVO;
-import com.project.word.vo.wordVO;
-import org.apache.ibatis.session.SqlSession;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.dao.DataAccessException;
-import org.springframework.stereotype.Repository;
-
-import java.util.Map;
-
-@Repository("statisticDAO")
-public class statisticDAOImpl implements statisticDAO {
-    @Autowired
-    SqlSession session;
-
-    @Override
-    public void addWord(wordVO wordvo) throws DataAccessException {
-        session.insert("mapper.statistic.addWord", wordvo);
-    }
-
-    @Override
-    public void addDailyWord(wordVO wordvo) throws DataAccessException {
-        session.insert("mapper.statistic.addDailyWord", wordvo);
-    }
-
-    @Override
-    public void updateWrongCard(Map wordMap) throws DataAccessException {
-        session.update("mapper.statistic.updateWrongCard", wordMap);
-    }
-
-    @Override
-    public void updateAppropriateCard(Map wordMap) throws DataAccessException {
-        session.update("mapper.statistic.updateAppropriateCard", wordMap);
-    }
-
-    @Override
-    public int countWord(Map staMap) throws DataAccessException {
-        return session.selectOne("mapper.statistic.countWord", staMap);
-    }
-
-    @Override
-    public statisticVO search(Map staMap) throws DataAccessException {
-        return session.selectOne("mapper.statistic.search", staMap);
-    }
-
-
-}
Index: src/main/webapp/WEB-INF/views/common/tiles/header.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/common/tiles/header.jsp b/src/main/webapp/WEB-INF/views/common/tiles/header.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/common/tiles/header.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,23 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=utf-8"
-         pageEncoding="utf-8"
-         isELIgnored="false"
-%>
-<%@ taglib uri="http://tiles.apache.org/tags-tiles" prefix="tiles" %>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<script type="text/javascript">
-
-</script>
-<body>
-<ul>
-    <li><a href="${contextPath}/dailyWord/dailyWordForm.do"/>오늘의 단어</li>
-    <li><a href="${contextPath}/word/saveWordForm.do"/>단어저장</li>
-    <li><a href="${contextPath}/word/wordBoardForm.do"/>단어수정</li>
-    <li><a href="${contextPath}/word/StudyForm.do"/>학습하기</li>
-    <li><a href="${contextPath}/inquiryBoard/boardForm"/>문의게시판</li>
-    <li><a href="${contextPath}/statistic/statisticForm.do"/>통계</li>
-</ul>
-<a href="${contextPath}/member/logout">로그아웃</a>
-<hr>
-</body>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
deleted file mode 100644
--- a/pom.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,319 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <groupId>com.project</groupId>
-    <artifactId>word</artifactId>
-    <name>RemindProject</name>
-    <packaging>war</packaging>
-    <version>1.0.0-BUILD-SNAPSHOT</version>
-    <properties>
-        <java-version>1.6</java-version>
-        <org.springframework-version>4.1.1.RELEASE</org.springframework-version>
-        <org.aspectj-version>1.6.10</org.aspectj-version>
-        <org.slf4j-version>1.6.6</org.slf4j-version>
-    </properties>
-    <dependencies>
-        <!-- Spring -->
-        <dependency>
-            <groupId>org.springframework</groupId>
-            <artifactId>spring-context</artifactId>
-            <version>${org.springframework-version}</version>
-            <exclusions>
-                <!-- Exclude Commons Logging in favor of SLF4j -->
-                <exclusion>
-                    <groupId>commons-logging</groupId>
-                    <artifactId>commons-logging</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework</groupId>
-            <artifactId>spring-webmvc</artifactId>
-            <version>${org.springframework-version}</version>
-        </dependency>
-
-        <dependency>
-            <groupId>org.jsoup</groupId>
-            <artifactId>jsoup</artifactId>
-            <version>1.8.3</version>
-        </dependency>
-        <!--파일 업로드-->
-        <dependency>
-            <groupId>commons-io</groupId>
-            <artifactId>commons-io</artifactId>
-            <version>2.4</version>
-        </dependency>
-
-        <dependency>
-            <groupId>commons-fileupload</groupId>
-            <artifactId>commons-fileupload</artifactId>
-            <version>1.3.1</version>
-        </dependency>
-
-        <!-- json -->
-        <dependency>
-            <groupId>com.fasterxml.jackson.core</groupId>
-            <artifactId>jackson-databind</artifactId>
-            <version>2.5.4</version>
-        </dependency>
-
-        <dependency>
-            <groupId>com.googlecode.json-simple</groupId>
-            <artifactId>json-simple</artifactId>
-            <version>1.1.1</version>
-        </dependency>
-
-
-        <!-- AOP -->
-        <dependency>
-            <groupId>org.springframework</groupId>
-            <artifactId>spring-aop</artifactId>
-            <version>${org.springframework-version}</version>
-        </dependency>
-
-        <!-- AspectJ -->
-        <dependency>
-            <groupId>org.aspectj</groupId>
-            <artifactId>aspectjrt</artifactId>
-            <version>${org.aspectj-version}</version>
-        </dependency>
-
-        <!-- Logging -->
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-api</artifactId>
-            <version>${org.slf4j-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>jcl-over-slf4j</artifactId>
-            <version>${org.slf4j-version}</version>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${org.slf4j-version}</version>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>log4j</groupId>
-            <artifactId>log4j</artifactId>
-            <version>1.2.15</version>
-            <exclusions>
-                <exclusion>
-                    <groupId>javax.mail</groupId>
-                    <artifactId>mail</artifactId>
-                </exclusion>
-                <exclusion>
-                    <groupId>javax.jms</groupId>
-                    <artifactId>jms</artifactId>
-                </exclusion>
-                <exclusion>
-                    <groupId>com.sun.jdmk</groupId>
-                    <artifactId>jmxtools</artifactId>
-                </exclusion>
-                <exclusion>
-                    <groupId>com.sun.jmx</groupId>
-                    <artifactId>jmxri</artifactId>
-                </exclusion>
-            </exclusions>
-            <scope>runtime</scope>
-        </dependency>
-
-        <!-- @Inject -->
-        <dependency>
-            <groupId>javax.inject</groupId>
-            <artifactId>javax.inject</artifactId>
-            <version>1</version>
-        </dependency>
-
-        <!--JDBC-->
-        <dependency>
-            <groupId>mysql</groupId>
-            <artifactId>mysql-connector-java</artifactId>
-            <version>8.0.22</version>
-        </dependency>
-
-        <!--Mybatis-->
-        <dependency>
-            <groupId>commons-beanutils</groupId>
-            <artifactId>commons-beanutils</artifactId>
-            <version>1.8.0</version>
-        </dependency>
-        <dependency>
-            <groupId>commons-dbcp</groupId>
-            <artifactId>commons-dbcp</artifactId>
-            <version>1.2.2</version>
-        </dependency>
-        <dependency>
-            <groupId>org.mybatis</groupId>
-            <artifactId>mybatis</artifactId>
-            <version>3.1.0</version>
-        </dependency>
-        <dependency>
-            <groupId>org.mybatis</groupId>
-            <artifactId>mybatis-spring</artifactId>
-            <version>1.1.0</version>
-        </dependency>
-        <dependency>
-            <groupId>cglib</groupId>
-            <artifactId>cglib-nodep</artifactId>
-            <version>2.2</version>
-        </dependency>
-
-        <!-- jquery 라이브러리 -->
-        <dependency>
-            <groupId>org.webjars</groupId>
-            <artifactId>jquery</artifactId>
-            <version>2.2.1</version>
-        </dependency>
-
-        <!--	mybatis및 mysql	-->
-        <dependency>
-            <groupId>commons-beanutils</groupId>
-            <artifactId>commons-beanutils</artifactId>
-            <version>1.8.0</version>
-        </dependency>
-        <dependency>
-            <groupId>commons-dbcp</groupId>
-            <artifactId>commons-dbcp</artifactId>
-            <version>1.2.2</version>
-        </dependency>
-        <dependency>
-            <groupId>cglib</groupId>
-            <artifactId>cglib-nodep</artifactId>
-            <version>2.2</version>
-        </dependency>
-        <dependency>
-            <groupId>org.mybatis</groupId>
-            <artifactId>mybatis</artifactId>
-            <version>3.1.0</version>
-        </dependency>
-        <dependency>
-            <groupId>org.mybatis</groupId>
-            <artifactId>mybatis-spring</artifactId>
-            <version>1.1.0</version>
-        </dependency>
-
-        <!-- Servlet -->
-        <dependency>
-            <groupId>javax.servlet</groupId>
-            <artifactId>servlet-api</artifactId>
-            <version>2.5</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>javax.servlet.jsp</groupId>
-            <artifactId>jsp-api</artifactId>
-            <version>2.1</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>javax.servlet</groupId>
-            <artifactId>jstl</artifactId>
-            <version>1.2</version>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework</groupId>
-            <artifactId>spring-test</artifactId>
-            <version>${org.springframework-version}</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!-- Test -->
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.12</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.junit.jupiter</groupId>
-            <artifactId>junit-jupiter</artifactId>
-            <version>RELEASE</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!-- 메일 전송 -->
-        <dependency>
-            <groupId>org.springframework</groupId>
-            <artifactId>spring-context-support</artifactId>
-            <version>${org.springframework-version}</version>
-        </dependency>
-        <dependency>
-            <groupId>javax.mail</groupId>
-            <artifactId>javax.mail-api</artifactId>
-            <version>1.5.4</version>
-        </dependency>
-        <dependency>
-            <groupId>com.sun.mail</groupId>
-            <artifactId>javax.mail</artifactId>
-            <version>1.5.3</version>
-        </dependency>
-
-        <dependency>
-            <groupId>org.apache.tiles</groupId>
-            <artifactId>tiles-core</artifactId>
-            <version>2.2.2</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.tiles</groupId>
-            <artifactId>tiles-jsp</artifactId>
-            <version>2.2.2</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.tiles</groupId>
-            <artifactId>tiles-servlet</artifactId>
-            <version>2.2.2</version>
-        </dependency>
-<!--        spring loaded-->
-        <dependency>
-            <groupId>org.springframework</groupId>
-            <artifactId>springloaded</artifactId>
-            <version>1.2.0.RELEASE</version>
-        </dependency>
-
-    </dependencies>
-    <build>
-        <plugins>
-            <plugin>
-                <artifactId>maven-eclipse-plugin</artifactId>
-                <version>2.9</version>
-                <configuration>
-                    <additionalProjectnatures>
-                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
-                    </additionalProjectnatures>
-                    <additionalBuildcommands>
-                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
-                    </additionalBuildcommands>
-                    <downloadSources>true</downloadSources>
-                    <downloadJavadocs>true</downloadJavadocs>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>2.5.1</version>
-                <configuration>
-                    <source>8</source>
-                    <target>8</target>
-                    <compilerArgument>-Xlint:all</compilerArgument>
-                    <showWarnings>true</showWarnings>
-                    <showDeprecation>true</showDeprecation>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.codehaus.mojo</groupId>
-                <artifactId>exec-maven-plugin</artifactId>
-                <version>1.2.1</version>
-                <configuration>
-                    <mainClass>org.test.int1.Main</mainClass>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-</project>
Index: src/main/webapp/WEB-INF/views/inquiryBoard/detailBoardForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/inquiryBoard/detailBoardForm.jsp b/src/main/webapp/WEB-INF/views/inquiryBoard/detailBoardForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/inquiryBoard/detailBoardForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,179 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>문의 게시판 상세보기</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        function writeAnswer(boardId) {
-            var contentValue = document.getElementById("content").value;
-            var data = {boardId: boardId, content: contentValue};
-            $.ajax({
-                type: "post",
-                url: "${contextPath}/inquiryBoard/writeAnswer",
-                contentType: "application/json",
-                data: JSON.stringify(data),
-                success: function (data) {
-                    alert(data);
-                    location.reload();
-                },
-                error: function () {
-                    alert("잠시후 다시 시도해주세요.");
-                    location.href = "${contextPath}/inquiryBoard/error";
-                }
-            });
-        }
-
-        function modifyBoard(boardId) {
-            var form = document.createElement("form");
-            form.setAttribute("method", "get");
-            form.setAttribute("action", "${contextPath}/inquiryBoard/modifyBoardForm.do");
-            var boardIdInput = document.createElement("input");
-            boardIdInput.setAttribute("type", "hidden");
-            boardIdInput.setAttribute("name", "boardId");
-            boardIdInput.setAttribute("value", boardId);
-            form.appendChild(boardIdInput);
-            document.body.appendChild(form);
-            form.submit();
-        }
-
-        function deleteBoard(boardId) {
-            var form = document.createElement("form");
-            var imageFileName = document.getElementById("imageFileName");
-            var boardIdInput = document.createElement("input");
-            boardIdInput.setAttribute("type", "hidden");
-            boardIdInput.setAttribute("name", "boardId");
-            boardIdInput.setAttribute("value", boardId);
-            form.setAttribute("method", "post");
-            form.setAttribute("action", "${contextPath}/inquiryBoard/deleteBoard");
-            form.appendChild(boardIdInput);
-            form.appendChild(imageFileName);
-            document.body.appendChild(form);
-            form.submit();
-        }
-
-        function setModifyAnswer(index) {
-            var modifyTable = document.getElementsByName("modifyTable")[index];
-            var AnswerContent = document.getElementsByName("AnswerContent")[index];
-            AnswerContent.removeAttribute("disabled");
-            var modifyAnswerButton = document.createElement("input");
-            modifyAnswerButton.setAttribute("type", "button");
-            modifyAnswerButton.setAttribute("onclick", "modifyAnswer(" + index + ")");
-            modifyAnswerButton.setAttribute("value", "적용하기");
-            modifyTable.appendChild(modifyAnswerButton);
-        }
-
-        function modifyAnswer(index) {
-            var AnswerContentValue = document.getElementsByName("AnswerContent")[index].value;
-            var AnswerIdValue = document.getElementsByName("AnswerId")[index].value;
-            $.ajax({
-                type: "put",
-                contentType: "application/json",
-                url: "${contextPath}/inquiryBoard/modifyAnswer",
-                data: JSON.stringify({
-                    content: AnswerContentValue,
-                    AnswerId: AnswerIdValue
-                }),
-                success: function (data) {
-                    alert(data);
-                    location.reload();
-                },
-                error: function () {
-                    alert("에러가 발생했습니다 잠시후 다시 시도해주세요.");
-                }
-            });
-        }
-
-        function deleteAnswer(index){
-            var AnswerIdValue = document.getElementsByName("AnswerId")[index].value;
-            $.ajax({
-                type : "delete",
-                url: "${contextPath}/inquiryBoard/deleteAnswer/"+AnswerIdValue,
-                success : function (data){
-                    alert(data);
-                    location.reload();
-                },
-                error : function (request){
-
-                }
-            });
-        }
-    </script>
-
-</head>
-<body>
-<form>
-    <table>
-        <tr>
-            <td>제목</td>
-            <td><input type="text" name="inquiryBoardTitle" value="${inquiryBoardVO.title}" disabled></td>
-        </tr>
-        <tr>
-            <td>내용</td>
-            <td><input type="text" name="inquiryBoardContent" value="${inquiryBoardVO.content}" disabled></td>
-        </tr>
-        <tr>
-            <td>작성자</td>
-            <td><input type="text" name="inquiryBoardUserId" value="${inquiryBoardVO.userId}" disabled></td>
-        </tr>
-        <tr>
-            <td>글쓴날짜</td>
-            <td>${inquiryBoardVO.writeDate}</td>
-        </tr>
-
-        <c:choose>
-            <c:when test="${not empty imageVO}">
-                <c:forEach var="item" items="${imageVO}" varStatus="itemStatus">
-                    <tr>
-                        <td>
-                            <img src="${contextPath}/download.do?boardId=${item.boardId}&imageFileName=${item.imageFileName}"
-                                 alt="error">
-                        </td>
-                    </tr>
-                    <input type="hidden" id="imageFileName" name="imageFileName" value="${item.imageFileName}">
-                </c:forEach>
-            </c:when>
-            <c:otherwise>
-                <input type="hidden" id="imageFileName" name="imageFileName" value="empty">
-            </c:otherwise>
-        </c:choose>
-
-        <c:if test="${not empty AnswerVO}">
-            <h3>댓글</h3>
-            <c:forEach var="item" items="${AnswerVO}" varStatus="itemStatus">
-                <tr>
-                    <td><input type="text" name="AnswerContent" value="${item.content}" disabled></td>
-                    <td>${item.userId}</td>
-                    <td>${item.savedDate}</td>
-                    <td>${item.boardId}</td>
-                    <input type="hidden" name="AnswerId" value="${item.answerId}">
-
-                    <c:if test="${userId==item.userId}">
-                        <td name="modifyTable">
-                            <input type="button" value="댓글 수정하기" onclick="setModifyAnswer(${itemStatus.index})">
-                            <input type="button" value="댓글 삭제하기" onclick="deleteAnswer(${itemStatus.index})">
-                        </td>
-                    </c:if>
-                </tr>
-            </c:forEach>
-        </c:if>
-    </table>
-    <div>
-        <textarea id="content"></textarea>
-        <input type="button" value="댓글 등록" onclick="writeAnswer(${inquiryBoardVO.boardId})">
-    </div>
-
-</form>
-
-<c:if test="${userId==inquiryBoardVO.userId}">
-    <div>
-        <input type="button" onclick="modifyBoard(${inquiryBoardVO.boardId})" value="글 수정하기">
-        <input type="button" onclick="deleteBoard(${inquiryBoardVO.boardId})" value="글 삭제하기">
-    </div>
-</c:if>
-
-</body>
-</html>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/member/findUserIdForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/member/findUserIdForm.jsp b/src/main/webapp/WEB-INF/views/member/findUserIdForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/member/findUserIdForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,58 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>아이디 찾기 페이지</title>
-    <script>
-        function checkValidEmail() {
-            var email = document.getElementById("email");
-            var str = email.value;
-            var regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;
-            if (str == null || str.length <= 0) {
-                alert("이메일을 입력해주세요.");
-                email.focus();
-                return false;
-            } else if (regExp.test(str)) {
-                return true;
-            } else {
-                alert("이메일 주소를 다시 확인해주세요.");
-                email.focus();
-                return false;
-            }
-        }
-
-        function checkValidText(){
-            var form = document.getElementById("userForm")
-            var userName = document.getElementById("userName");
-            var userNameValue = userName.value;
-            if(userNameValue=="" || userNameValue.length<=0){
-                alert("이름을 입력해주세요.");
-                userName.focus();
-            }else if(!checkValidEmail){
-                return;
-            }else{
-                form.submit();
-            }
-        }
-    </script>
-</head>
-<body>
-<div>
-    <form id="userForm" action="${contextPath}/member/findUserId" method="get">
-        이름<input type="text" name="userName" id="userName">
-        이메일<input type="text" name="email" id="email">
-        <input type="button" value="아이디 찾기" onclick="checkValidText()">
-    </form>
-</div>
-</body>
-</html>
Index: src/main/webapp/WEB-INF/views/word/settingStudyForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/word/settingStudyForm.jsp b/src/main/webapp/WEB-INF/views/word/settingStudyForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/word/settingStudyForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,81 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>Study Page</title>
-
-    <script>
-
-
-
-    window.onpageshow = function (event) {
-        if (event.persisted || (window.performance && window.performance.navigation.type == 2)) {
-            location.reload();
-        }
-    }
-
-    function setReviewCardStudy() {
-        var form = document.getElementById("setReviewCardForm");
-        var countReviewCard = document.getElementById("countReviewCard");
-        var countWrongCard = document.getElementById("countWrongCard");
-
-        if (parseInt(countReviewCard.value) == 0 && parseInt(countWrongCard.value) == 0 ) {
-            alert("복습할 카드가 없네요.")
-        } else {
-            form.submit();
-        }
-    }
-
-    function setNewCardStudy() {
-        var form = document.getElementById("setNewCardForm");
-        var countNewCard = document.getElementById("countNewCard");
-        var countWrongNewCard = document.getElementById("countWrongNewCard");
-        if (parseInt(countNewCard.value) == 0 && parseInt(countWrongNewCard.value) == 0) {
-            alert("복습할 카드가 없네요.")
-        } else {
-            form.submit();
-        }
-    }
-    </script>
-
-</head>
-<body>
-오늘 학습할 갯수를 정해주세요.<br>
-새로 추가한 카드는 학습할 갯수를 입력후, 새카드 학습하기 버튼을 클릭해주세요.<br>
-이미 학습한 카드를 복습하고 싶으시면 학습할 갯수를 입력후, 복습하기 버튼을 클릭해주세요.<br>
-
-학습양의 경우 틀린카드 + 복습/새카드 학습할 단어수를 포함한 갯수를 입력해주세요
-
-<form id="setReviewCardForm" action="${contextPath}/word/reviewCardForm.do" method="get">
-    <input type="button" onclick=" setReviewCardStudy()" value="복습하기">
-</form>
-
-<form id="setNewCardForm" action="${contextPath}/word/newCardForm.do" method="get">
-    <input type="button" onclick="setNewCardStudy()" value="새카드 학습하기">
-</form>
-<div>
-
-    복습해야할 단어 카드수<input type="text" id="countReviewCard" name="countReviewCard" value="${setting.countReviewCard}">
-    복습에 실패한 카드수<input type="text" id="countWrongCard" name="countWrongCard" value="${setting.countWrongReviewCard}">
-</div>
-<div>
-    새로운 단어 카드수<input type="text" id="countNewCard" name="countNewCard" value="${setting.countNewCard}">
-    새로운 단어 암기에 실패한 카드수<input type="text" id="countWrongNewCard" name="countWrongNewCard"
-                             value="${setting.countWrongNewCard}">
-</div>
-
-복습할 단어수는 당신이 학습해야할 복습 단어들의 갯수를 말합니다.<br>
-복습에 실패한 카드수는 당신이 복습카드를 학습하며 외우지 못한 카드수를 말합니다.<br>
-새로운 카드는 당신이 새로 추가한 단어의 수를 말합니다.<br>
-새로운 단어 암기에 실패한 카드수는 당신이 새로쿤 단어 카드를 외우지 못한 카드수입니다. 알맞음을 눌러야 복습할 단어로 단어가 이동합니다.
-</body>
-</html>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/spring/root-context.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/spring/root-context.xml b/src/main/webapp/WEB-INF/spring/root-context.xml
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/spring/root-context.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:aop="http://www.springframework.org/schema/aop"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
-       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
-    <aop:aspectj-autoproxy/>
-    <bean id="propertyPlaceholderConfigurer"
-          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
-        <property name="locations">
-            <value>classpath:/mybatis/config/jdbc/jdbc.properties</value>
-        </property>
-    </bean>
-
-    <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
-        <property name="driver" value="${jdbc.driverClassName}"/>
-        <property name="url" value="${jdbc.url}"/>
-        <property name="username" value="${jdbc.username}"/>
-        <property name="password" value="${jdbc.password}"/>
-    </bean>
-
-    <bean id="sqlSessionFactory"
-          class="org.mybatis.spring.SqlSessionFactoryBean">
-        <property name="dataSource" ref="dataSource"/>
-        <property name="configLocation"
-                  value="classpath:mybatis/model/modelConfig.xml"/>
-        <property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"/>
-    </bean>
-
-    <bean id="transactionManager"
-          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
-        <property name="dataSource" ref="dataSource"></property>
-    </bean>
-
-    <bean id="sqlSession"
-          class="org.mybatis.spring.SqlSessionTemplate">
-        <constructor-arg ref="sqlSessionFactory"></constructor-arg>
-    </bean>
-
-</beans>
Index: src/main/java/com/project/main/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/main/MainController.java b/src/main/java/com/project/main/MainController.java
deleted file mode 100644
--- a/src/main/java/com/project/main/MainController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,29 +0,0 @@
-package com.project.main;
-
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-
-@Controller("mainController")
-@RequestMapping(value="/main")
-public class MainController {
-
-    @RequestMapping(value="/main.do", method ={RequestMethod.POST,RequestMethod.GET})
-    public ModelAndView main(HttpServletResponse response, HttpServletRequest request) throws Exception{
-        String viewName = (String) request.getAttribute("viewNAme");
-        ModelAndView modelAndView = new ModelAndView();
-        modelAndView.setViewName(viewName);
-        return modelAndView;
-    }
-
-    @RequestMapping(value="/mainContent")
-    public ModelAndView mainContent(HttpServletRequest request, HttpServletResponse response){
-        ModelAndView modelAndView = new ModelAndView();
-        modelAndView.setViewName("/main/mainContent");
-        return modelAndView;
-    }
-}
\ No newline at end of file
Index: src/main/resources/mybatis/model/modelConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mybatis/model/modelConfig.xml b/src/main/resources/mybatis/model/modelConfig.xml
deleted file mode 100644
--- a/src/main/resources/mybatis/model/modelConfig.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE configuration 	PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-config.dtd">
-
-<configuration>
-    <typeAliases>
-        <typeAlias type="com.project.member.vo.MemberVO" alias="MemberVO" />
-        <typeAlias type="com.project.word.vo.wordVO" alias="wordVO"/>
-        <typeAlias type="com.project.dailyWord.vo.dailyWordVO" alias="dailyWordVO"/>
-        <typeAlias type="com.project.inquiryBoard.vo.AnswerVO" alias="AnswerVO"/>
-        <typeAlias type="com.project.inquiryBoard.vo.imageVO" alias="imageVO"/>
-        <typeAlias type="com.project.inquiryBoard.vo.inquiryBoardVO" alias="inquiryBoardVO"/>
-        <typeAlias type="com.project.statistic.vo.statisticVO" alias="statisticVO"/>
-    </typeAliases>
-</configuration>
Index: src/main/webapp/WEB-INF/views/common/error.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/common/error.jsp b/src/main/webapp/WEB-INF/views/common/error.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/common/error.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,17 +0,0 @@
-<%@ page language="java" contentType="text/html; ISO-8859-1"
-         pageEncoding="utf-8"
-         isELIgnored="false"
-%>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>Error</title>
-
-
-</head>
-<body>
-에러 페이지입니다. 다른 컨텐츠를 이용해주세요 ㅠㅠ
-</body>
-</html>
Index: src/main/webapp/WEB-INF/views/word/saveWordForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/word/saveWordForm.jsp b/src/main/webapp/WEB-INF/views/word/saveWordForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/word/saveWordForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,45 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>saveWord Page</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        function sendToPaPaGO() {
-            var word = document.getElementById("word").value;
-            $.ajax({
-                method: "get",
-                url: "${contextPath}/word/papagoAPI/" + word,
-                success: function (data) {
-                    alert("번역이 완료되었습니다.");
-                    var mean = document.getElementById("mean");
-                    mean.value =data.translatedText;
-                }, error: function () {
-                    alert("잠시후 다시 시도해주세요,");
-                }
-            });
-        }
-
-    </script>
-</head>
-<body>
-<div>
-    <form action="${contextPath}/word/word" method="post">
-        <input type="text" id="word" name="word">저장할 단어
-        <input type="text" id="mean" name="mean">저장할 의미
-        <input type="submit" value="저장하기">
-        <input type="button" onclick="sendToPaPaGO()" value="번역하기">
-</div>
-</form>
-</body>
-</html>
Index: src/main/java/com/project/word/service/wordServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/word/service/wordServiceImpl.java b/src/main/java/com/project/word/service/wordServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/word/service/wordServiceImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,113 +0,0 @@
-package com.project.word.service;
-
-import com.project.word.vo.wordVO;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-import com.project.word.dao.wordDAO;
-import org.springframework.transaction.annotation.Propagation;
-import org.springframework.transaction.annotation.Transactional;
-
-import java.util.List;
-import java.util.Map;
-
-@Service("wordservice")
-@Transactional(propagation = Propagation.REQUIRED)
-public class wordServiceImpl implements wordService {
-    @Autowired
-    wordDAO worddao;
-
-    @Override
-    public void addWord(wordVO wordvo) throws Exception {
-        worddao.addWord(wordvo);
-    }
-
-    @Override
-    public void addDailyWord(wordVO wordvo) throws Exception{
-        worddao.addDailyWord(wordvo);
-    }
-
-    @Override
-    public int countWrongReviewCard(Map wordMap) throws Exception {
-        return worddao.countWrongReviewCard(wordMap);
-    }
-
-    @Override
-    public int countReviewCard(Map wordMap) throws Exception {
-        return worddao.countReviewCard(wordMap);
-    }
-
-    @Override
-    public int countWrongNewCard(Map wordMap) throws Exception {
-        return worddao.countWrongNewCard(wordMap);
-    }
-
-    @Override
-    public int countNewCard(Map wordMap) throws Exception {
-        return worddao.countNewCard(wordMap);
-    }
-
-    @Override
-    public int maxWordId(wordVO wordvo) throws Exception {
-        return worddao.maxWordId(wordvo);
-    }
-
-    @Override
-    public wordVO selectReviewCard(Map wordMap) throws Exception {
-        return worddao.selectReviewCard(wordMap);
-    }
-
-    @Override
-    public wordVO selectNewCard(Map wordMap) throws Exception {
-        return worddao.selectNewCard(wordMap);
-    }
-
-    @Override
-    public void updateWrongCard(Map wordMap) throws Exception {
-        worddao.updateWrongCard(wordMap);
-    }
-
-    @Override
-    public void updateReviewCard_Appropriate(Map wordMap) throws Exception {
-        worddao.updateReviewCard_Appropriate(wordMap);
-    }
-
-    @Override
-    public wordVO selectRemainedReviewCard(Map wordMap) throws Exception {
-        return worddao.selectRemainedReviewCard(wordMap);
-    }
-
-    @Override
-    public wordVO selectRemainedNewCard(Map wordMap) throws Exception {
-        return worddao.selectRemainedNewCard(wordMap);
-    }
-
-    @Override
-    public void updateNewCard_Appropriate(Map wordMap) throws Exception {
-        worddao.updateNewCard_Appropriate(wordMap);
-    }
-
-    @Override
-    public List<wordVO> selectModifyWord(Map<String, Object> wordMap) throws Exception {
-        return worddao.selectModifyWord(wordMap);
-    }
-
-    @Override
-    public int totalCount(Map<String, Object> wordMap) throws Exception {
-        return worddao.totalCount(wordMap);
-    }
-
-    @Override
-    public wordVO selectSpecificWord(Map<String, Object> wordMap) {
-        return worddao.selectSpecificWord(wordMap);
-    }
-
-    @Override
-    public void updateWord(Map<String, Object> wordMap) throws Exception {
-        worddao.updateWord(wordMap);
-    }
-
-    @Override
-    public void deleteWord(Map<String, Object> wordMap) throws Exception {
-        worddao.deleteWord(wordMap);
-    }
-}
Index: word.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/word.iml b/word.iml
deleted file mode 100644
--- a/word.iml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,66 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
-  <component name="FacetManager">
-    <facet type="Spring" name="Spring">
-      <configuration />
-    </facet>
-  </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7">
-    <output url="file://$MODULE_DIR$/target/classes" />
-    <output-test url="file://$MODULE_DIR$/target/test-classes" />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
-      <excludeFolder url="file://$MODULE_DIR$/target" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-context:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-beans:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-core:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-expression:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-web:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-aop:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: aopalliance:aopalliance:1.0" level="project" />
-    <orderEntry type="library" name="Maven: org.aspectj:aspectjrt:1.6.10" level="project" />
-    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.6.6" level="project" />
-    <orderEntry type="library" scope="RUNTIME" name="Maven: org.slf4j:jcl-over-slf4j:1.6.6" level="project" />
-    <orderEntry type="library" scope="RUNTIME" name="Maven: org.slf4j:slf4j-log4j12:1.6.6" level="project" />
-    <orderEntry type="library" scope="RUNTIME" name="Maven: log4j:log4j:1.2.15" level="project" />
-    <orderEntry type="library" name="Maven: javax.inject:javax.inject:1" level="project" />
-    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.22" level="project" />
-    <orderEntry type="library" name="Maven: com.google.protobuf:protobuf-java:3.11.4" level="project" />
-    <orderEntry type="library" name="Maven: commons-beanutils:commons-beanutils:1.8.0" level="project" />
-    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.1.1" level="project" />
-    <orderEntry type="library" name="Maven: commons-dbcp:commons-dbcp:1.2.2" level="project" />
-    <orderEntry type="library" name="Maven: commons-pool:commons-pool:1.3" level="project" />
-    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.1.0" level="project" />
-    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:1.1.0" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-tx:3.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:3.1.1.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: cglib:cglib-nodep:2.2" level="project" />
-    <orderEntry type="library" name="Maven: org.webjars:jquery:2.2.1" level="project" />
-    <orderEntry type="library" scope="PROVIDED" name="Maven: javax.servlet:servlet-api:2.5" level="project" />
-    <orderEntry type="library" scope="PROVIDED" name="Maven: javax.servlet.jsp:jsp-api:2.1" level="project" />
-    <orderEntry type="library" name="Maven: javax.servlet:jstl:1.2" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.springframework:spring-test:4.1.1.RELEASE" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.12" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.8.0-M1" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.20" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib:1.4.20" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.4.20" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains:annotations:13.0" level="project" />
-    <orderEntry type="library" scope="TEST" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.20" level="project" />
-  </component>
-</module>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/dailyWord/dailyWordForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/dailyWord/dailyWordForm.jsp b/src/main/webapp/WEB-INF/views/dailyWord/dailyWordForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/dailyWord/dailyWordForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,53 +0,0 @@
-<%@ page language="java" contentType="text/html; ISO-8859-1"
-         pageEncoding="utf-8"
-         isELIgnored="false"
-%>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>dailyWord Page</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        function moveToMyWord(index) {
-            var word = document.getElementsByName("word")[index].value
-            var mean = document.getElementsByName("mean")[index].value
-            var dailyId = document.getElementsByName("dailyId")[index].value
-
-            $.ajax({
-                type: "post",
-                async: true,
-                url: "${contextPath}/word/DailyWord",
-                data: {
-                    dailyId: dailyId,
-                    word: word,
-                    mean: mean
-                },
-                success: function () {
-                    alert("추가되었습니다.");
-                },
-                error: function (request, error) {
-                    alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
-                }
-            });
-        }
-    </script>
-</head>
-<body>
-<form>
-    <c:forEach items="${dailyWordVO}" var="item" varStatus="itemStatus">
-        <div>
-            <input type="text" name="word" value="${item.word}">
-            <input type="text" name="mean" value="${item.mean}">
-            <input type="hidden" name="dailyId" value="${item.dailyId}">
-            <input type="button" value="새 카드로 이동" onclick="moveToMyWord(${itemStatus.index})">
-        </div>
-    </c:forEach>
-</form>
-매일 8시에 갱신됩니다.<br>
-출처<br>
-네이버 사전<br>
-https://learn.dict.naver.com/m/endic/today/words.nhn
-</body>
-</html>
Index: src/main/webapp/WEB-INF/views/word/wordBoardForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/word/wordBoardForm.jsp b/src/main/webapp/WEB-INF/views/word/wordBoardForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/word/wordBoardForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,120 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<c:set var="wordVoItems" value="${wordMap.wordVoItems}"/>
-<c:set var="totalCount" value="${wordMap.totalCount}"/>
-<c:set var="pageNum" value="${wordMap.pageNum}"/>
-<c:set var="section" value="${wordMap.section}"/>
-<c:set var="selectMode" value="${wordMap.selectMode}"/>
-<c:set var="search" value="${wordMap.search}"/>
-<html>
-<head>
-    <title>단어 게시판 페이지</title>
-</head>
-<body>
-<div style="align-content: center">
-<div>
-    <form action="${contextPath}/word/title" method="get">
-        <input type="text" name="search" placeholder="글 제목을 입력하세요.">
-        <input type="submit" value="검색하기">
-    </form>
-</div>
-<div>
-    <table>
-        <tr>
-            <td><span>단어</span></td>
-            <td><span>의미</span></td>
-            <td><span>저장날짜</span></td>
-            <td><span>복습날짜</span></td>
-        </tr>
-
-        <c:forEach var="item" items="${wordVoItems}" varStatus="itemStatus">
-            <tr>
-                <input type="hidden" name="wordIdHidden" value="${item.wordId}">
-                <td><a href="${contextPath}/word/modifyWordForm.do/${item.wordId}" methods="get">${item.word}</a></td>
-                <td>${item.mean}</td>
-                <td>${item.savedDate}</td>
-                <td>${item.appearanceDate}</td>
-            </tr>
-        </c:forEach>
-    </table>
-</div>
-
-
-<div>
-
-    <c:if test="${selectMode=='like'}">
-        <c:choose>
-            <c:when test="${totalCount>100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <c:if test="${section>1 && page==1}">
-                        <a href="${contextPath}/word/title?section=${section-1}&pageNum=1&search=${search}">pre</a>
-                    </c:if>
-                    <a href="${contextPath}/word/title?section=${section}&pageNum=${page}&search=${search}">${(section-1)*10+page}</a>
-                    <c:if test="${page==10}">
-                        <a href="${contextPath}/word/title?section=${section+1}&pageNum=1&search=${search}">next</a>
-                    </c:if>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount == 100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <a href="${contextPath}/word/title?section=${section}&pageNum=${page}&search=${search}">${page}</a>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount < 100}">
-                <c:forEach var="page" begin="1" end="${totalCount/10+1}" step="1">
-                    <c:choose>
-                        <c:when test="${page==pageNum}">
-                            <a style="color:#db7093"
-                               href="${contextPath}/word/title?section=${section}&pageNum=${page}&search=${search}">${page}</a>
-                        </c:when>
-                        <c:otherwise>
-                            <a href="${contextPath}/word/title?section=${section}&pageNum=${page}&search=${search}">${page}</a>
-                        </c:otherwise>
-                    </c:choose>
-                </c:forEach>
-            </c:when>
-        </c:choose>
-    </c:if>
-
-    <c:if test="${selectMode!='like'}">
-        <c:choose>
-            <c:when test="${totalCount>100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <c:if test="${section>1 && page==1}">
-                        <a href="${contextPath}/word/wordBoardForm.do?section=${section-1}&pageNum=1">pre</a>
-                    </c:if>
-                    <a href="${contextPath}/word/wordBoardForm.do?section=${section}&pageNum=${page}">${(section-1)*10+page}</a>
-                    <c:if test="${page==10}">
-                        <a href="${contextPath}/word/wordBoardForm.do?section=${section+1}&pageNum=1">next</a>
-                    </c:if>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount == 100}">
-                <c:forEach var="page" begin="1" end="10" step="1">
-                    <a href="${contextPath}/word/wordBoardForm.do?section=${section}&pageNum=${page}">${page}</a>
-                </c:forEach>
-            </c:when>
-
-            <c:when test="${totalCount < 100}">
-                <c:forEach var="page" begin="1" end="${totalCount/10+1}" step="1">
-                    <c:choose>
-                        <c:when test="${page==pageNum}">
-                            <a style="color:#db7093"
-                               href="${contextPath}/word/wordBoardForm.do?section=${section}&pageNum=${page}">${page}</a>
-                        </c:when>
-                        <c:otherwise>
-                            <a href="${contextPath}/word/wordBoardForm.do?section=${section}&pageNum=${page}">${page}</a>
-                        </c:otherwise>
-                    </c:choose>
-                </c:forEach>
-            </c:when>
-        </c:choose>
-    </c:if>
-</div>
-</div>
-</body>
-</html>
\ No newline at end of file
Index: .springBeans
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.springBeans b/.springBeans
deleted file mode 100644
--- a/.springBeans	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beansProjectDescription>
-	<version>1</version>
-	<pluginVersion><![CDATA[2.5.0.201010141000-RC1]]></pluginVersion>
-	<configSuffixes>
-		<configSuffix><![CDATA[xml]]></configSuffix>
-	</configSuffixes>
-	<enableImports><![CDATA[true]]></enableImports>
-	<configs>
-	</configs>
-	<configSets>
-	</configSets>
-</beansProjectDescription>
Index: src/main/java/com/project/member/Controller/MemberController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/member/Controller/MemberController.java b/src/main/java/com/project/member/Controller/MemberController.java
deleted file mode 100644
--- a/src/main/java/com/project/member/Controller/MemberController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,15 +0,0 @@
-package com.project.member.Controller;
-
-import com.project.member.vo.MemberVO;
-import org.springframework.web.bind.annotation.ModelAttribute;
-import org.springframework.web.bind.annotation.RequestParam;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.util.Map;
-
-public interface MemberController {
-    ModelAndView addMember(HttpServletRequest request, HttpServletResponse response, @ModelAttribute MemberVO memberVO )  throws Exception;
-    ModelAndView login(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, String> memberMap) throws Exception;
-}
Index: src/main/java/com/project/statistic/Controller/statisticController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/statistic/Controller/statisticController.java b/src/main/java/com/project/statistic/Controller/statisticController.java
deleted file mode 100644
--- a/src/main/java/com/project/statistic/Controller/statisticController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,13 +0,0 @@
-package com.project.statistic.Controller;
-
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-
-public interface statisticController {
-    public ModelAndView statisticForm(HttpServletRequest request, HttpServletResponse response);
-    ResponseEntity search(HttpServletRequest request, HttpServletResponse response, @PathVariable("word") String word);
-}
Index: src/main/java/com/project/member/service/MemberService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/member/service/MemberService.java b/src/main/java/com/project/member/service/MemberService.java
deleted file mode 100644
--- a/src/main/java/com/project/member/service/MemberService.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,22 +0,0 @@
-package com.project.member.service;
-
-import com.project.member.vo.MemberVO;
-
-import java.util.List;
-import java.util.Map;
-
-public interface MemberService {
-    void addMember(MemberVO memberVO) throws Exception;
-    MemberVO loginMember(Map<String,String> memberMap) throws Exception;
-    String selectAuthKey(Map<String, Object> memberMap) throws Exception;
-    void updateAuthKey(Map<String, Object> memberMap) throws Exception;
-    String checkAuthEmail(Map<String, String> memberMap) throws Exception;
-
-    int searchOverlapId(String userId)throws Exception;
-
-    List<MemberVO> findUserId(MemberVO memberVO)throws Exception;
-
-    MemberVO findUserPwd(MemberVO memberVO) throws Exception;
-
-    void updateUserPwd(MemberVO memberVO) throws Exception;
-}
Index: .classpath
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.classpath b/.classpath
deleted file mode 100644
--- a/.classpath	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" output="target/classes" path="src/main/java">
-		<attributes>
-			<attribute name="optional" value="true"/>
-			<attribute name="maven.pomderived" value="true"/>
-		</attributes>
-	</classpathentry>
-	<classpathentry including="**/*.java" kind="src" path="src/main/resources"/>
-	<classpathentry kind="src" output="target/test-classes" path="src/test/java">
-		<attributes>
-			<attribute name="optional" value="true"/>
-			<attribute name="maven.pomderived" value="true"/>
-		</attributes>
-	</classpathentry>
-	<classpathentry including="**/*.java" kind="src" output="target/test-classes" path="src/test/resources"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6">
-		<attributes>
-			<attribute name="maven.pomderived" value="true"/>
-		</attributes>
-	</classpathentry>
-	<classpathentry kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER">
-		<attributes>
-			<attribute name="maven.pomderived" value="true"/>
-			<attribute name="org.eclipse.jst.component.dependency" value="/WEB-INF/lib"/>
-		</attributes>
-	</classpathentry>
-	<classpathentry kind="output" path="target/classes"/>
-</classpath>
Index: src/main/resources/log4j.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/log4j.xml b/src/main/resources/log4j.xml
deleted file mode 100644
--- a/src/main/resources/log4j.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
-<log4j:configuration>
-	<!-- Appenders -->
-	<appender name="console" class="org.apache.log4j.ConsoleAppender">
-		<param name="Target" value="System.out" />
-		<layout class="org.apache.log4j.PatternLayout">
-			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
-		</layout>
-	</appender>
-
-	<!-- Application Loggers -->
-	<logger name="com.project.word">
-		<level value="debug" />
-	</logger>
-
-	<!-- 3rdparty Loggers -->
-	<logger name="org.springframework.core">
-		<level value="info" />
-	</logger>
-
-	<logger name="org.springframework.beans">
-		<level value="info" />
-	</logger>
-
-	<logger name="org.springframework.context">
-		<level value="info" />
-	</logger>
-
-	<logger name="org.springframework.web">
-		<level value="info" />
-	</logger>
-
-	<!-- Root Logger -->
-	<root>
-		<priority value="debug" />
-		<appender-ref ref="console" />
-	</root>
-
-</log4j:configuration>
Index: src/test/java/com/project/word/cloneTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/project/word/cloneTest.java b/src/test/java/com/project/word/cloneTest.java
deleted file mode 100644
--- a/src/test/java/com/project/word/cloneTest.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,32 +0,0 @@
-package com.project.word;
-
-import org.jsoup.Jsoup;
-import org.jsoup.nodes.Document;
-import org.jsoup.nodes.Element;
-import org.jsoup.select.Elements;
-import org.junit.Test;
-import org.junit.jupiter.api.DisplayName;
-
-import java.util.Iterator;
-
-
-public class cloneTest {
-
-    @DisplayName("네이버 단어장 크롤링")
-    @Test
-    public void cloneTest() {
-        String connectURL = "https://learn.dict.naver.com/m/endic/today/words.nhn";
-        try {
-            Document doc = Jsoup.connect(connectURL).get();
-            String[] words = doc.select("em.words").html().split("\n");
-            Elements mean = doc.select("p.txt_ct2");
-            Iterator<Element> iterable = mean.iterator();
-            for (int i=0; i< words.length ; i++) {
-                System.out.println("오늘의 단어 "+ words[i]+iterable.next().text());
-            }
-
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-}
Index: src/main/java/com/project/inquiryBoard/Controller/inquiryBoardControllerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/Controller/inquiryBoardControllerImpl.java b/src/main/java/com/project/inquiryBoard/Controller/inquiryBoardControllerImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/Controller/inquiryBoardControllerImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,344 +0,0 @@
-package com.project.inquiryBoard.Controller;
-
-import com.project.common.base.BaseController;
-import com.project.inquiryBoard.service.inquiryBoardService;
-import com.project.inquiryBoard.vo.AnswerVO;
-import com.project.inquiryBoard.vo.imageVO;
-import com.project.inquiryBoard.vo.inquiryBoardVO;
-import org.apache.commons.io.FileUtils;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.*;
-import org.springframework.web.multipart.MultipartHttpServletRequest;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.servlet.http.HttpSession;
-import java.io.File;
-import java.util.*;
-
-@RequestMapping(value = "/inquiryBoard")
-@RestController("inquiryBoardController")
-public class inquiryBoardControllerImpl extends BaseController implements inquiryBoardController {
-    @Autowired
-    inquiryBoardService inquiryBoardService;
-
-    @Autowired
-    inquiryBoardVO inquiryBoardVO;
-
-    @Autowired
-    imageVO imageVO;
-
-    @Autowired
-    AnswerVO AnswerVO;
-
-    @RequestMapping(value = "/boardForm", method = RequestMethod.GET)
-    @Override
-    public ModelAndView selectInquiryBoard(HttpServletRequest request, HttpServletResponse response,
-                                           @RequestParam(value = "section", defaultValue = "1") int section,
-                                           @RequestParam(value = "pageNum", defaultValue = "1") int pageNum) {
-        Map boardMap = new HashMap();
-        int startPage = ((section - 1) * 100) + ((pageNum - 1) * 10 );
-        boardMap.put("pageNum", pageNum);
-        boardMap.put("section", section);
-        boardMap.put("startPage", startPage);
-        List<inquiryBoardVO> inquiryBoardVO;
-        try {
-            inquiryBoardVO = inquiryBoardService.selectInquiryBoard(boardMap);
-            int totalCount = inquiryBoardService.selectTotalCountBoard(boardMap);
-
-            boardMap.put("inquiryBoardVO", inquiryBoardVO);
-            boardMap.put("totalCount", totalCount);
-            ModelAndView modelAndView = new ModelAndView("inquiryBoard/inquiryBoardForm");
-            modelAndView.addObject("boardMap", boardMap);
-
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            return new ModelAndView("common/error");
-        }
-    }
-
-    @RequestMapping(value = "/title", method = RequestMethod.GET)
-    public ModelAndView selectTitle(HttpServletRequest request, HttpServletResponse response,
-                                    @RequestParam(value = "title") String title,
-                                    @RequestParam(value = "section", defaultValue = "1") int section,
-                                    @RequestParam(value = "pageNum", defaultValue = "1") int pageNum) {
-
-        Map boardMap = new HashMap();
-        int startPage = ((section - 1) * 100) + ((pageNum - 1) * 10 );
-
-        boardMap.put("title",title);
-        boardMap.put("pageNum", pageNum);
-        boardMap.put("section", section);
-        boardMap.put("startPage", startPage);
-        boardMap.put("selectMode", "like");
-        List<inquiryBoardVO> inquiryBoardVO;
-        try {
-            inquiryBoardVO = inquiryBoardService.selectInquiryBoard(boardMap);
-            int totalCount = inquiryBoardService.selectTotalCountBoard(boardMap);
-
-            boardMap.put("inquiryBoardVO", inquiryBoardVO);
-            boardMap.put("totalCount", totalCount);
-            ModelAndView modelAndView = new ModelAndView("inquiryBoard/inquiryBoardForm");
-            modelAndView.addObject("boardMap", boardMap);
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            return new ModelAndView("common/error");
-        }
-
-    }
-
-    @RequestMapping(value = "/board/{boardId}", method = RequestMethod.GET)
-    public ModelAndView selectBoardDetail(HttpServletRequest request, HttpServletResponse response, @PathVariable int boardId) {
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        Map boardMap = new HashMap();
-        boardMap.put("boardId", boardId);
-        boardMap.put("userId", userId);
-        inquiryBoardVO inquiryBoardVO;
-        List<AnswerVO> AnswerVO;
-        List<imageVO> imageVO;
-        try {
-            inquiryBoardVO = inquiryBoardService.selectBoardDetail(boardMap);
-            AnswerVO = inquiryBoardService.selectBoardAnswer(boardMap);
-            imageVO = inquiryBoardService.selectBoardImage(boardMap);
-            ModelAndView modelAndView = new ModelAndView("inquiryBoard/detailBoardForm");
-            modelAndView.addObject("inquiryBoardVO", inquiryBoardVO);
-            modelAndView.addObject("AnswerVO", AnswerVO);
-            modelAndView.addObject("imageVO", imageVO);
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            return new ModelAndView("common/error");
-        }
-    }
-
-    @RequestMapping(value = "/writeBoard", method = RequestMethod.POST)
-    @Override
-    public ResponseEntity writeBoard(MultipartHttpServletRequest multipartRequest, HttpServletResponse response) throws Exception {
-        ResponseEntity responseEntity = null;
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        String message;
-        HttpSession session = multipartRequest.getSession();
-        String userId = (String) session.getAttribute("userId");
-        Map boardMap = new HashMap();
-        boardMap.put("userId", userId);
-
-        List<inquiryBoardVO> inquiryBoardVO = new ArrayList<inquiryBoardVO>();
-        Enumeration enu = multipartRequest.getParameterNames();
-        while (enu.hasMoreElements()) {
-            String name = (String) enu.nextElement();
-            String value = multipartRequest.getParameter(name);
-            boardMap.put(name, value);
-        }
-
-        String imageFileName;
-        List<String> fileList = upload(multipartRequest);
-        List<imageVO> imageFileList = new ArrayList<imageVO>();
-        try {
-            int boardId = inquiryBoardService.writeBoard(boardMap);
-            inquiryBoardService.updateBoard(boardMap);
-            if (fileList != null && fileList.size() != 0) {
-                for (String fileName : fileList) {
-                    imageVO ImageVO = new imageVO();
-                    ImageVO.setImageFileName(fileName);
-                    imageFileList.add(ImageVO);
-                }
-                boardMap.put("imageFileList", imageFileList);
-                inquiryBoardService.writeImageBoard(boardMap);
-            }
-            if (imageFileList != null && imageFileList.size() != 0) {
-                for (imageVO imageVO : imageFileList) {
-                    imageFileName = imageVO.getImageFileName();
-                    File srcFile = new File(BOARD_IMAGE + "/" + "temp" + "/" + imageFileName);
-                    File destDir = new File(BOARD_IMAGE + "/" + boardId);
-                    FileUtils.moveFileToDirectory(srcFile, destDir, true);
-                }
-            }
-            message = "<script>";
-            message += " alert('글이 작성되었습니다.');";
-            message += " location.href='" + multipartRequest.getContextPath() + "/inquiryBoard/boardForm.do'; ";
-            message += " </script>";
-            responseEntity = new ResponseEntity(message, responseHeader, HttpStatus.CREATED);
-        } catch (Exception e) {
-            e.printStackTrace();
-            if (imageFileList != null && imageFileList.size() != 0) {
-                for (imageVO imageVO : imageFileList) {
-                    imageFileName = imageVO.getImageFileName();
-                    File srcFile = new File(BOARD_IMAGE + "/" + "temp" + "/" + imageFileName);
-                    srcFile.delete();
-                }
-                message = "<script>";
-                message += " alert('잠시후 다시 시도해주세요.');";
-                message += " location.href='" + multipartRequest.getContextPath() + "/inquiryBoard/error'; ";
-                message += " </script>";
-                responseEntity = new ResponseEntity(message, responseHeader, HttpStatus.INTERNAL_SERVER_ERROR);
-            }
-        }
-        return responseEntity;
-    }
-
-    @RequestMapping(value = "/writeAnswer", method = RequestMethod.POST)
-    public ResponseEntity writeAnswer(HttpServletRequest request, HttpServletResponse response, @RequestBody Map<String, String> boardMap) {
-        ResponseEntity responseEntity = null;
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        boardMap.put("userId", userId);
-        try {
-            inquiryBoardService.writeAnswer(boardMap);
-            responseEntity = new ResponseEntity<String>("댓글이 작성되었습니다.", responseHeader, HttpStatus.CREATED);
-        } catch (Exception e) {
-            e.printStackTrace();
-            String message = "<script>";
-            message += " alert('잠시후 다시 시도해주세요.');";
-            message += " location.href='" + request.getContextPath() + "/inquiryBoard/error'; ";
-            message += " </script>";
-            responseEntity = new ResponseEntity(message, responseHeader, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-
-    @RequestMapping(value = "/modifyBoardForm.do", method = RequestMethod.GET)
-    public ModelAndView modifyForm(HttpServletRequest request, HttpServletResponse response, @RequestParam(value = "boardId", required = true) int boardId) {
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        Map boardMap = new HashMap();
-        boardMap.put("boardId", boardId);
-        boardMap.put("userId", userId);
-        List<imageVO> imageVO;
-        try {
-            inquiryBoardVO inquiryBoardVO = inquiryBoardService.selectBoardDetail(boardMap);
-            imageVO = inquiryBoardService.selectBoardImage(boardMap);
-            ModelAndView modelAndView = new ModelAndView();
-            modelAndView.addObject("inquiryBoardVO", inquiryBoardVO);
-            modelAndView.addObject("imageVO", imageVO);
-            modelAndView.setViewName("/inquiryBoard/modifyBoardForm");
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            ModelAndView modelAndView = new ModelAndView();
-            modelAndView.addObject("inquiryBoardVO", inquiryBoardVO);
-            modelAndView.setViewName("/common/error");
-            return modelAndView;
-        }
-    }
-
-    @RequestMapping(value = "/modifyBoard", method = RequestMethod.POST)
-    public ModelAndView modifyBoard(MultipartHttpServletRequest multipartRequest, HttpServletResponse response) throws Exception {
-        HttpSession session = multipartRequest.getSession();
-        String userId = (String) session.getAttribute("userId");
-        Map boardMap = new HashMap();
-        boardMap.put("userId", userId);
-
-        List<inquiryBoardVO> inquiryBoardVO = new ArrayList<inquiryBoardVO>();
-        Enumeration enu = multipartRequest.getParameterNames();
-        while (enu.hasMoreElements()) {
-            String name = (String) enu.nextElement();
-            String value = multipartRequest.getParameter(name);
-            boardMap.put(name, value);
-        }
-        String imageFileName;
-        List<String> fileList = upload(multipartRequest);
-        List<imageVO> imageFileList = new ArrayList<imageVO>();
-
-        try {
-            inquiryBoardService.updateBoard(boardMap);
-            int boardId = Integer.parseInt((String) boardMap.get("boardId"));
-            if (fileList != null && fileList.size() != 0) {
-                for (String fileName : fileList) {
-                    imageVO ImageVO = new imageVO();
-                    ImageVO.setBoardId(boardId);
-                    ImageVO.setImageFileName(fileName);
-                    imageFileList.add(ImageVO);
-                }
-                boardMap.put("imageFileList", imageFileList);
-                inquiryBoardService.updateImageBoard(boardMap);
-            }
-            if (imageFileList != null && imageFileList.size() != 0) {
-                for (imageVO imageVO : imageFileList) {
-                    imageFileName = imageVO.getImageFileName();
-                    File srcFile = new File(BOARD_IMAGE + "/" + "temp" + "/" + imageFileName);
-                    File destDir = new File(BOARD_IMAGE + "/" + boardId);
-                    FileUtils.moveFileToDirectory(srcFile, destDir, true);
-
-                    String originalFileName = (String) boardMap.get("originalFileName");
-                    File oldFile = new File(BOARD_IMAGE + "/" + boardId + "/" + originalFileName);
-                    oldFile.delete();
-                }
-            }
-            ModelAndView modelAndView = new ModelAndView();
-            modelAndView.setViewName("redirect:/inquiryBoard/board/" + boardId);
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            if (imageFileList != null && imageFileList.size() != 0) {
-                for (imageVO imageVO : imageFileList) {
-                    imageFileName = imageVO.getImageFileName();
-                    File srcFile = new File(BOARD_IMAGE + "/" + "temp" + "/" + imageFileName);
-                    srcFile.delete();
-                }
-            }
-            return new ModelAndView("/common/error");
-        }
-    }
-
-    @RequestMapping(value = "/deleteBoard", method = RequestMethod.POST)
-    public ModelAndView deleteBoard(HttpServletRequest request, HttpServletResponse response, @RequestParam(value = "boardId") int boardId,
-                                    @RequestParam(value = "imageFileName") String imageFileName) {
-        Map boardMap = new HashMap();
-        boardMap.put("boardId", boardId);
-        boardMap.put("imageFileName", imageFileName);
-        try {
-            if (!imageFileName.equals("empty")) {
-                File directory = new File(BOARD_IMAGE + "/" + boardId);
-                File srcFile = new File(BOARD_IMAGE + "/" + boardId + "/" + imageFileName);
-                srcFile.delete();
-                directory.delete();
-            }
-            inquiryBoardService.deleteBoard(boardMap);
-            return new ModelAndView("redirect:/inquiryBoard/boardForm.do");
-        } catch (Exception e) {
-            e.printStackTrace();
-            return new ModelAndView("common/error");
-        }
-    }
-
-    @RequestMapping(value = "/modifyAnswer", method = RequestMethod.PUT)
-    public ResponseEntity modifyAnswer(HttpServletRequest request, HttpServletResponse response, @RequestBody Map AnswerMap) {
-        ResponseEntity responseEntity = null;
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        try {
-            inquiryBoardService.modifyAnswer(AnswerMap);
-            responseEntity = new ResponseEntity<String>("댓글이 수정되었습니다.", responseHeader, HttpStatus.OK);
-        } catch (Exception e) {
-            responseEntity = new ResponseEntity<String>("에러발생", responseHeader, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-
-    @RequestMapping(value = "/deleteAnswer/{AnswerId}", method = RequestMethod.DELETE)
-    public ResponseEntity deleteAnswer(HttpServletRequest request, HttpServletResponse response, @PathVariable int AnswerId) {
-        ResponseEntity responseEntity = null;
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        Map AnswerMap = new HashMap();
-        AnswerMap.put("AnswerId", AnswerId);
-        try {
-            inquiryBoardService.deleteAnswer(AnswerMap);
-            responseEntity = new ResponseEntity<String>("댓글이 삭제되었습니다..", responseHeader, HttpStatus.OK);
-        } catch (Exception e) {
-            responseEntity = new ResponseEntity<String>("에러발생", responseHeader, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-
-}
Index: src/main/java/com/project/common/mail/mailServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/common/mail/mailServiceImpl.java b/src/main/java/com/project/common/mail/mailServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/common/mail/mailServiceImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,85 +0,0 @@
-package com.project.common.mail;
-
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.mail.javamail.JavaMailSender;
-import org.springframework.mail.javamail.MimeMessageHelper;
-import org.springframework.scheduling.annotation.Async;
-import org.springframework.stereotype.Service;
-
-import javax.mail.MessagingException;
-import javax.mail.internet.MimeMessage;
-import java.util.Random;
-
-@Service("mailService")
-public class mailServiceImpl implements mailService {
-
-    @Autowired
-    JavaMailSender mailSender;
-
-    private boolean lowerCheck;
-    private int size;
-
-    @Override
-    public String createKey() {
-        Random random = new Random();
-        StringBuilder stringBuilder = new StringBuilder();
-        int num = 0;
-        do {
-            num = random.nextInt(75) + 48;
-            if ((num >= 48 && num <= 57) || (num >= 65 && num <= 90) || (num >= 97 && num <= 122)) {
-                stringBuilder.append((char) num);
-            } else {
-                continue;
-            }
-        } while (stringBuilder.length() < size);
-        if (!lowerCheck) {
-            return stringBuilder.toString().toLowerCase();
-        }else{
-            return stringBuilder.toString();
-        }
-    }
-
-    public String getKey(boolean lowerCheck, int size){
-        this.lowerCheck = lowerCheck;
-        this.size = size;
-        return createKey();
-    }
-
-    @Async
-    @Override
-    public void setMail(String authKey, String userId, String userEmail, String context){
-        MimeMessage mailMessage = mailSender.createMimeMessage();
-        String Message = "<h2>안녕하세요 Remind입니다.</h2><br><br><h3>"+userId+"님 먼저 단어암기 웹 사이트를 이용해주시는 것에 정말 " +
-                "감사드리며 아래 보시는 인증하기 버튼을 누르시면 로그인 후 바로 서비스를 이용하실수 있습니다." +
-                "<a href='http://localhost:8080"+ context+ "/member/authMember.do?userId="+userId+"&authKey="+authKey+"'>인증하기</a>";
-        try{
-            MimeMessageHelper messageHelper = new MimeMessageHelper(mailMessage,true,"UTF-8");
-            messageHelper.setFrom("ksj0109188@gmail.com");
-            messageHelper.setSubject("Remind 사이트의 회원가입 이메일 인증입니다.");
-            messageHelper.setTo(userEmail);
-            messageHelper.setText(Message,true);
-            mailSender.send(mailMessage);
-        } catch (MessagingException e) {
-            e.printStackTrace();
-        }
-    }
-
-    @Async
-    @Override
-    public void findPwdMail(String newPwd, String userId, String userName, String userEmail, String context) {
-        MimeMessage mailMessage = mailSender.createMimeMessage();
-        String Message = "<h2>안녕하세요 Remind입니다.</h2><br><br><h3>"+userName+"님 먼저 단어암기 웹 사이트를 이용해주시는 것에 정말 " +
-                "감사드리며 아래 임시 비밀번호로 로그인이 가능합니다. <br> 아이디 : "+userId+"<br> 비밀번호 : " + newPwd;
-        try{
-            MimeMessageHelper messageHelper = new MimeMessageHelper(mailMessage,true,"UTF-8");
-            messageHelper.setFrom("ksj0109188@gmail.com");
-            messageHelper.setSubject("Remind 사이트의 비밀번호 찾기 이메일입니다.");
-            messageHelper.setTo(userEmail);
-            messageHelper.setText(Message,true);
-            mailSender.send(mailMessage);
-        } catch (MessagingException e) {
-            e.printStackTrace();
-        }
-    }
-
-}
\ No newline at end of file
Index: src/main/java/com/project/inquiryBoard/vo/AnswerVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/vo/AnswerVO.java b/src/main/java/com/project/inquiryBoard/vo/AnswerVO.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/vo/AnswerVO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,54 +0,0 @@
-package com.project.inquiryBoard.vo;
-
-import org.springframework.stereotype.Component;
-
-import java.sql.Timestamp;
-
-@Component("AnswerVO")
-public class AnswerVO {
-    private int boardId;
-    private String content;
-    private Timestamp savedDate;
-    private String userId;
-    private int AnswerId;
-
-    public int getBoardId() {
-        return boardId;
-    }
-
-    public void setBoardId(int boardId) {
-        this.boardId = boardId;
-    }
-
-    public String getContent() {
-        return content;
-    }
-
-    public void setContent(String content) {
-        this.content = content;
-    }
-
-    public Timestamp getSavedDate() {
-        return savedDate;
-    }
-
-    public void setSavedDate(Timestamp savedDate) {
-        this.savedDate = savedDate;
-    }
-
-    public String getUserId() {
-        return userId;
-    }
-
-    public void setUserId(String userId) {
-        this.userId = userId;
-    }
-
-    public int getAnswerId() {
-        return AnswerId;
-    }
-
-    public void setAnswerId(int answerId) {
-        AnswerId = answerId;
-    }
-}
Index: src/main/resources/mybatis/config/jdbc/jdbc.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mybatis/config/jdbc/jdbc.properties b/src/main/resources/mybatis/config/jdbc/jdbc.properties
deleted file mode 100644
--- a/src/main/resources/mybatis/config/jdbc/jdbc.properties	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,4 +0,0 @@
-jdbc.driverClassName=com.mysql.jdbc.Driver
-jdbc.url=jdbc:mysql://127.0.0.1:3306/RemindProject?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
-jdbc.username=root
-jdbc.password=8465123z
\ No newline at end of file
Index: src/main/resources/tiles/tiles_introduction.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/tiles/tiles_introduction.xml b/src/main/resources/tiles/tiles_introduction.xml
deleted file mode 100644
--- a/src/main/resources/tiles/tiles_introduction.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE tiles-definitions PUBLIC
-       "-//Apache Software Foundation//DTD Tiles Configuration 2.0//EN"
-       "http://tiles.apache.org/dtds/tiles-config_2_0.dtd">
-<tiles-definitions>
-	<definition name="/introduction/introductionPage" extends="baseLayout">
-		<put-attribute name="title" value="Remind 소개 페이지" />
-		<put-attribute name="body" value="/WEB-INF/views/introduction/introductionPage.jsp" />
-	</definition>
-</tiles-definitions>
-
-
Index: src/main/webapp/WEB-INF/views/member/authMember.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/member/authMember.jsp b/src/main/webapp/WEB-INF/views/member/authMember.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/member/authMember.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,27 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-        <title>인증 완료창</title>
-        <script>
-
-        </script>
-</head>
-<body>
-<div>
-        <p>Remind웹 사이트에 오신걸 환영합니다.<p>
-        <p>아래 링크를 통해서 로그인후 해당 웹 페이지를 이용해주세요!!</p>
-        <a href="${contextPath}/main/main.do">로그인하기</a>
-</div>
-</body>
-</html>
Index: src/main/java/com/project/common/mail/mailService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/common/mail/mailService.java b/src/main/java/com/project/common/mail/mailService.java
deleted file mode 100644
--- a/src/main/java/com/project/common/mail/mailService.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,11 +0,0 @@
-package com.project.common.mail;
-
-public interface mailService {
-    String createKey() throws Exception;
-
-    String getKey(boolean lowerCheck, int size) throws Exception;
-
-    void setMail(String authKey, String userId, String userEmail, String context) throws Exception;
-
-    void findPwdMail(String newPwd, String userId, String userName, String userEmail, String context);
-}
Index: src/main/java/com/project/dailyWord/Controller/dailyWordControllerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dailyWord/Controller/dailyWordControllerImpl.java b/src/main/java/com/project/dailyWord/Controller/dailyWordControllerImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/dailyWord/Controller/dailyWordControllerImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,75 +0,0 @@
-package com.project.dailyWord.Controller;
-
-
-import com.project.common.base.BaseController;
-import com.project.dailyWord.service.dailyWordService;
-import com.project.dailyWord.vo.dailyWordVO;
-import org.jsoup.Jsoup;
-import org.jsoup.nodes.Document;
-import org.jsoup.nodes.Element;
-import org.jsoup.select.Elements;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.scheduling.annotation.EnableScheduling;
-import org.springframework.scheduling.annotation.Scheduled;
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.servlet.http.HttpSession;
-import java.util.*;
-
-@EnableScheduling
-@Controller("dailyWord")
-@RequestMapping(value = "/dailyWord")
-public class dailyWordControllerImpl extends BaseController implements dailyWordController {
-
-    @Autowired
-    dailyWordVO dailyWordvo;
-
-    @Autowired
-    dailyWordService dailyWordService;
-
-    @Scheduled(cron = "0 47 00 * * *")
-    public void cloneDailyWord() {
-        String connectURL = "https://learn.dict.naver.com/m/endic/today/words.nhn";
-        try {
-            Document doc = Jsoup.connect(connectURL).get();
-            String[] words = doc.select("em.words").html().split("\n");
-            Elements mean = doc.select("p.txt_ct2");
-            Iterator<Element> iterable = mean.iterator();
-            int maxId = dailyWordService.selectmaxId();
-            List<dailyWordVO> wordVOElements = new ArrayList<dailyWordVO>();
-            int wordsIndex = 0;
-            while (iterable.hasNext()) {
-                dailyWordVO _dailyWordvo = new dailyWordVO();
-                _dailyWordvo.setDailyId(maxId);
-                _dailyWordvo.setWord(words[wordsIndex]);
-                _dailyWordvo.setMean(iterable.next().text());
-                wordVOElements.add(_dailyWordvo);
-                maxId++;
-                wordsIndex++;
-            }
-            dailyWordService.insertDailyWord(wordVOElements);
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
-    @RequestMapping("/dailyWordForm.do")
-    @Override
-    public ModelAndView dailyWordForm(HttpServletRequest request, HttpServletResponse response) {
-        List<dailyWordVO> wordVOElements;
-        try {
-            wordVOElements = dailyWordService.selectDailyWord();
-            ModelAndView modelAndView = new ModelAndView("dailyWord/dailyWordForm");
-            modelAndView.addObject("dailyWordVO",wordVOElements);
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            ModelAndView modelAndView = new ModelAndView("common/error");
-            return modelAndView;
-        }
-    }
-}
Index: src/main/java/com/project/member/Controller/MemberControllerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/member/Controller/MemberControllerImpl.java b/src/main/java/com/project/member/Controller/MemberControllerImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/member/Controller/MemberControllerImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,168 +0,0 @@
-package com.project.member.Controller;
-
-import com.project.common.base.BaseController;
-import com.project.common.mail.mailService;
-import com.project.member.service.MemberService;
-import com.project.member.vo.MemberVO;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.*;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.servlet.http.HttpSession;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-@RestController("MemberController")
-@RequestMapping(value = "/member")
-public class MemberControllerImpl extends BaseController implements MemberController {
-
-    @Autowired
-    MemberVO memberVO;
-
-    @Autowired
-    MemberService memberService;
-
-    @Autowired
-    mailService mailService;
-
-
-    @RequestMapping(value = "/addMember", method = RequestMethod.POST)
-    @Override
-    public ModelAndView addMember(HttpServletRequest request, HttpServletResponse response, @ModelAttribute MemberVO memberVO) throws Exception {
-        ModelAndView modelAndView;
-        try {
-            String AuthKey = mailService.getKey(false, 20);
-            memberVO.setAuthKey(AuthKey);
-            memberService.addMember(memberVO);
-            mailService.setMail(AuthKey, memberVO.getUserId(), memberVO.getEmail(), request.getContextPath());
-            modelAndView = new ModelAndView("/main/main");
-            modelAndView.addObject("message", "registerSuccess");
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("/common/error");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "/overlap")
-    public ResponseEntity searchOverlapId(HttpServletRequest request, HttpServletResponse response, @RequestParam("userId") String userId) {
-        ResponseEntity responseEntity;
-        try {
-            int userIdCount = memberService.searchOverlapId(userId);
-            if (userIdCount == 0) {
-                responseEntity = new ResponseEntity<String>("notOverlapping", HttpStatus.OK);
-            } else {
-                responseEntity = new ResponseEntity<String>("Overlapping", HttpStatus.OK);
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-            responseEntity = new ResponseEntity<String>("error", HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-
-    @RequestMapping(value = "/authMember.do")
-    public ModelAndView authMember(HttpServletRequest request, HttpServletResponse response, @RequestParam("userId") String userId, @RequestParam("authKey") String authKey) {
-        Map<String, Object> memberMap = new HashMap<String, Object>();
-        ModelAndView modelAndView;
-        try {
-            memberMap.put("userId", userId);
-            memberMap.put("authKey", authKey);
-            String savedAuthKey = memberService.selectAuthKey(memberMap);
-            if (authKey.equals(savedAuthKey)) {
-                modelAndView = new ModelAndView("/member/authMember");
-                memberService.updateAuthKey(memberMap);
-            } else {
-                modelAndView = new ModelAndView("/main/main");
-                modelAndView.addObject("message", "authFalse");
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("/common/error");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "/login", method = RequestMethod.POST)
-    @Override
-    public ModelAndView login(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, String> memberMap) throws Exception {
-        ModelAndView modelAndView = new ModelAndView();
-        MemberVO membervo = memberService.loginMember(memberMap);
-        if (membervo != null) {
-            if (!membervo.getAuthKey().equals("Y")) {
-                modelAndView = new ModelAndView("/main/main");
-                modelAndView.addObject("message", "notAuthorization");
-                return modelAndView;
-            } else {
-                String userId = membervo.getUserId();
-                HttpSession httpSession = request.getSession();
-                httpSession.setAttribute("userId", userId);
-                httpSession.setAttribute("isLogin", true);
-                modelAndView.setViewName("/introduction/introductionPage");
-            }
-        } else {
-            modelAndView.addObject("message", "loginFail");
-            modelAndView.setViewName("/main/main");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "/logout")
-    public ModelAndView logout(HttpServletRequest request, HttpServletResponse response) {
-        ModelAndView modelAndView = new ModelAndView("/main/main");
-        HttpSession session = request.getSession();
-        Object userId = session.getAttribute("userId");
-        if (userId != null) {
-            session.removeAttribute("userId");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "findUserId", method = RequestMethod.GET)
-    public ModelAndView findUserId(HttpServletRequest request, HttpServletResponse response, @ModelAttribute MemberVO memberVO) {
-        ModelAndView modelAndView;
-        List<MemberVO> memberVOItems;
-        try {
-            memberVOItems = memberService.findUserId(memberVO);
-            if (memberVOItems == null || memberVOItems.size() <= 0) {
-                modelAndView = new ModelAndView("/member/foundUserIdForm");
-                modelAndView.addObject("message", "empty");
-            } else {
-                modelAndView = new ModelAndView("/member/foundUserIdForm");
-                modelAndView.addObject("memberVOItems", memberVOItems);
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("/common/error");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "findUserPwd", method = RequestMethod.GET)
-    public ResponseEntity findUserPwd(HttpServletRequest request, HttpServletResponse response, @ModelAttribute MemberVO memberVO) {
-        ResponseEntity responseEntity;
-        String contextPath = request.getContextPath();
-        try {
-            MemberVO _memberVO = memberService.findUserPwd(memberVO);
-            if (_memberVO == null) {
-                responseEntity = new ResponseEntity<String>("NotFounded", HttpStatus.OK);
-            } else {
-                String newPwd = mailService.getKey(false,14);
-                mailService.findPwdMail(newPwd,_memberVO.getUserId(),_memberVO.getUserName(),_memberVO.getEmail(),contextPath);
-                _memberVO.setUserPwd(newPwd);
-                memberService.updateUserPwd(_memberVO);
-                responseEntity = new ResponseEntity<String>("founded", HttpStatus.OK);
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-            responseEntity = new ResponseEntity<String>("error", HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-}
\ No newline at end of file
Index: src/main/java/com/project/statistic/service/statisticService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/statistic/service/statisticService.java b/src/main/java/com/project/statistic/service/statisticService.java
deleted file mode 100644
--- a/src/main/java/com/project/statistic/service/statisticService.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,20 +0,0 @@
-package com.project.statistic.service;
-
-import com.project.statistic.vo.statisticVO;
-import com.project.word.vo.wordVO;
-
-import java.util.Map;
-
-public interface statisticService {
-    void addWord(wordVO wordvo) throws Exception;
-
-    void addDailyWord(wordVO wordvo) throws Exception;
-
-    void updateWrongCard(Map wordMap)  throws Exception;
-
-    void updateAppropriateCard(Map wordMap) throws Exception;
-
-    int countWord(Map staMap) throws Exception;
-
-    statisticVO search(Map staMap) throws Exception;
-}
Index: src/main/java/com/project/word/vo/wordVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/word/vo/wordVO.java b/src/main/java/com/project/word/vo/wordVO.java
deleted file mode 100644
--- a/src/main/java/com/project/word/vo/wordVO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,118 +0,0 @@
-package com.project.word.vo;
-
-import org.springframework.stereotype.Component;
-
-import java.sql.Timestamp;
-
-@Component("wordVO")
-public class wordVO {
-    private int wordId;
-    private String word;
-    private String mean;
-    private Timestamp savedDate;
-    private int wordCount;
-    private String userId;
-    private boolean isNewCard;
-    private boolean isWrongCard;
-    private boolean isReviewCard;
-    private String dailyWord_dailyId;
-    private Timestamp appearanceDate;
-
-    public boolean isWrongCard() {
-        return isWrongCard;
-    }
-
-    public void setWrongCard(boolean wrongCard) {
-        isWrongCard = wrongCard;
-    }
-
-    public boolean isReviewCard() {
-        return isReviewCard;
-    }
-
-    public void setReviewCard(boolean reviewCard) {
-        isReviewCard = reviewCard;
-    }
-
-    public int getCountRemain() {
-        return countRemain;
-    }
-
-    public void setCountRemain(int countRemain) {
-        this.countRemain = countRemain;
-    }
-
-    private int countRemain;
-
-    public int getWordId() {
-        return wordId;
-    }
-
-    public void setWordId(int wordId) {
-        this.wordId = wordId;
-    }
-
-    public String getWord() {
-        return word;
-    }
-
-    public void setWord(String word) {
-        this.word = word;
-    }
-
-    public String getMean() {
-        return mean;
-    }
-
-    public void setMean(String mean) {
-        this.mean = mean;
-    }
-
-    public Timestamp getSavedDate() {
-        return savedDate;
-    }
-
-    public void setSavedDate(Timestamp savedDate) {
-        this.savedDate = savedDate;
-    }
-
-    public int getWordCount() {
-        return wordCount;
-    }
-
-    public void setWordCount(int wordCount) {
-        this.wordCount = wordCount;
-    }
-
-    public String getUserId() {
-        return userId;
-    }
-
-    public void setUserId(String userId) {
-        this.userId = userId;
-    }
-
-    public boolean isNewCard() {
-        return isNewCard;
-    }
-
-    public void setNewCard(boolean newCard) {
-        isNewCard = newCard;
-    }
-
-    public String getDailyWord_dailyId() {
-        return dailyWord_dailyId;
-    }
-
-    public void setDailyWord_dailyId(String dailyWord_dailyId) {
-        this.dailyWord_dailyId = dailyWord_dailyId;
-    }
-
-    public Timestamp getAppearanceDate() {
-        return appearanceDate;
-    }
-
-    public void setAppearanceDate(Timestamp appearanceDate) {
-        this.appearanceDate = appearanceDate;
-    }
-}
Index: src/main/java/com/project/word/Controller/wordController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/word/Controller/wordController.java b/src/main/java/com/project/word/Controller/wordController.java
deleted file mode 100644
--- a/src/main/java/com/project/word/Controller/wordController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,50 +0,0 @@
-package com.project.word.Controller;
-
-import com.project.word.vo.wordVO;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.*;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.util.List;
-import java.util.Map;
-
-public interface wordController {
-
-    ResponseEntity addWord(HttpServletRequest request, HttpServletResponse response, @ModelAttribute wordVO wordvo);
-
-    ResponseEntity addDailyWord(HttpServletRequest request, HttpServletResponse response, @ModelAttribute wordVO wordvo);
-
-    ModelAndView setStudyForm(HttpServletRequest request, HttpServletResponse response);
-
-    ModelAndView wordBoardForm(HttpServletRequest request, HttpServletResponse response,
-                               @RequestParam(value = "section", defaultValue = "1") int section,
-                               @RequestParam(value = "pageNum", defaultValue = "1") int pageNum);
-
-    ModelAndView searchTitle(HttpServletRequest request, HttpServletResponse response,
-                                    @RequestParam(value = "search") String search,
-                                    @RequestParam(value = "section", defaultValue = "1") int section,
-                                    @RequestParam(value = "pageNum", defaultValue = "1") int pageNum);
-    ModelAndView modifyWordForm(HttpServletRequest request, HttpServletResponse response, @PathVariable("wordId") int wordId);
-
-    ResponseEntity modifyWord(HttpServletRequest request, HttpServletResponse response, @RequestBody Map<String, Object> wordMap);
-
-    ModelAndView reviewCardForm(HttpServletRequest request, HttpServletResponse response);
-
-    ResponseEntity reviewStudy_Wrong(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap);
-
-    ResponseEntity reviewCardSelect(HttpServletRequest request, HttpServletResponse response);
-
-    ResponseEntity reviewStudy_appropriate(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap);
-
-    ModelAndView newCardForm(HttpServletRequest request, HttpServletResponse response);
-
-    ResponseEntity newCardStudy_wrong(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap);
-
-    ResponseEntity newCardUpdate_appropriate(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap);
-
-    ResponseEntity newCardSelect(HttpServletRequest request, HttpServletResponse response);
-
-
-}
Index: src/main/webapp/WEB-INF/views/word/modifyWordForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/word/modifyWordForm.jsp b/src/main/webapp/WEB-INF/views/word/modifyWordForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/word/modifyWordForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,74 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>단어 수정페이지</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        function modifyWord() {
-            var wordIdValue = document.getElementById("wordId").value;
-            var wordValue = document.getElementById("word").value;
-            var meanValue = document.getElementById("mean").value;
-            var data = {
-                wordId: wordIdValue,
-                word: wordValue,
-                mean: meanValue
-            }
-            $.ajax({
-                method: "put",
-                url: "${contextPath}/word/modifyWord",
-                contentType: "application/json",
-                data: JSON.stringify(data),
-                success: function (data) {
-                    if(data =="sucess"){
-                        alert("수정되었습니다.");
-                        location.href = "${contextPath}/word/wordBoardForm.do";
-                    }
-                },
-                error: function () {
-                    alert("잠시후 다시 시도해주세요.");
-                    location.href = "${contextPath}/word/error";
-                }
-            });
-        }
-
-        function deleteWord() {
-            var wordIdValue = document.getElementById("wordId").value;
-            var data = {
-                wordId: wordIdValue,
-            }
-            $.ajax({
-                method: "delete",
-                url: "${contextPath}/word/deleteWord",
-                contentType: "application/json",
-                data: JSON.stringify(data),
-                success: function (data) {
-                    if(data =="success"){
-                        alert("삭제되었습니다.");
-                        location.href = "${contextPath}/word/wordBoardForm.do";
-                    }
-                },
-                error: function () {
-                    alert("잠시후 다시 시도해주세요.");
-                    location.href = "${contextPath}/word/error";
-                }
-            });
-        }
-    </script>
-</head>
-<body>
-<div>
-    <input type="hidden" id="wordId" name="wordId" value="${wordvo.wordId}">
-    <span>단어<br><input type="text" id="word" name="word" value="${wordvo.word}"></span>
-    <span>의미<br><input type="text" id="mean" name="mean" value="${wordvo.mean}"></span>
-    <span>저장날짜<br><input type="text" value="${wordvo.savedDate}" disabled></span>
-    <span>복습날짜<br><input type="text" value="${wordvo.appearanceDate}" disabled></span>
-</div>
-<div>
-    <input type="button" value="수정하기" onclick="modifyWord()">
-    <input type="button" value="삭제하기" onclick="deleteWord()">
-</div>
-</body>
-</html>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/member/foundUserIdForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/member/foundUserIdForm.jsp b/src/main/webapp/WEB-INF/views/member/foundUserIdForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/member/foundUserIdForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,48 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>아이디찾기_출력 페이지</title>
-    <script>
-    </script>
-</head>
-<body>
-<div>
-    <c:choose>
-        <c:when test="${message eq 'empty'}">
-            해당 이름과 이메일로 등록된 계정이 없습니다.
-        </c:when>
-        <c:otherwise>
-            <span>발견된 아이디 </span><br>
-            <c:forEach var="item" items="${memberVOItems}">
-                <input type="text" value="${item.userId}">
-                <input type="text" value="${item.email}">
-                <input type="text" value="${item.joinDate}">
-                <c:choose>
-                    <c:when test="${item.authKey eq 'Y'}">
-                        <input type="text" value="이메일 인증 완료.">
-                    </c:when>
-                    <c:otherwise>
-                        <input type="text" value="이메일 인증이 필요합니다.">
-                    </c:otherwise>
-                </c:choose>
-            </c:forEach>
-        </c:otherwise>
-    </c:choose>
-</div>
-<div>
-     <a href="${contextPath}/main/main.do">로그인 하기</a>
-    <a href="${contextPath}/member/findUserPwdForm.do">비밀번호 찾기</a>
-</div>
-</body>
-</html>
Index: ../README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../README.md b/../README.md
deleted file mode 100644
--- a/../README.md	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,6 +0,0 @@
-<h3>remind_project</h3>
-<br>플래쉬 카드게임 방식으로 영어단어를 효율적으로 암기하는 웹 사이트입니다.<br>
-<hr><h2>ERD</h2></hr>
-
-
-![스크린샷 2021-03-30 오전 12 35 15](https://user-images.githubusercontent.com/48472569/112865024-57d59580-90f3-11eb-9ad6-fd8767231dd3.png)
Index: src/main/java/com/project/common/Interceptor/viewInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/common/Interceptor/viewInterceptor.java b/src/main/java/com/project/common/Interceptor/viewInterceptor.java
deleted file mode 100644
--- a/src/main/java/com/project/common/Interceptor/viewInterceptor.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,67 +0,0 @@
-package com.project.common.Interceptor;
-
-import org.springframework.web.servlet.ModelAndView;
-import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.servlet.http.HttpSession;
-import java.io.IOException;
-import java.util.logging.Logger;
-
-public class viewInterceptor extends HandlerInterceptorAdapter {
-
-    @Override
-    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {
-        try {
-            String viewName = getViewName(request);
-            request.setAttribute("viewName", viewName);
-        } catch (Exception e) {
-            e.printStackTrace();
-            return false;
-        }
-        return true;
-    }
-
-    @Override
-    public void postHandle(
-            HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {
-    }
-
-
-    @Override
-    public void afterCompletion(
-            HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {
-    }
-
-    private String getViewName(HttpServletRequest request) {
-        String contextPath = request.getContextPath();
-        String uri = (String) request.getAttribute("javax.servlet.include.request_uri");
-        if (uri == null || uri.trim().equals("")) {
-            uri = request.getRequestURI();
-        }
-
-        int begin = 0;
-        if (!((contextPath == null) || ("".equals(contextPath)))) {
-            begin = contextPath.length();
-        }
-
-        int end;
-        if (uri.indexOf(";") != -1) {
-            end = uri.indexOf(";");
-        } else if (uri.indexOf("?") != -1) {
-            end = uri.indexOf("?");
-        } else {
-            end = uri.length();
-        }
-
-        String fileName = uri.substring(begin, end);
-        if (fileName.indexOf(".") != -1) {
-            fileName = fileName.substring(0, fileName.lastIndexOf("."));
-        }
-        if (fileName.lastIndexOf("/") != -1) {
-            fileName = fileName.substring(fileName.lastIndexOf("/", 1), fileName.length());
-        }
-        return fileName;
-    }
-}
Index: src/main/java/com/project/dailyWord/dao/dailyWordDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dailyWord/dao/dailyWordDAOImpl.java b/src/main/java/com/project/dailyWord/dao/dailyWordDAOImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/dailyWord/dao/dailyWordDAOImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,31 +0,0 @@
-package com.project.dailyWord.dao;
-
-import com.project.dailyWord.vo.dailyWordVO;
-import org.apache.ibatis.session.SqlSession;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.dao.DataAccessException;
-import org.springframework.stereotype.Repository;
-
-import java.util.List;
-
-@Repository("dailyWordDAO")
-public class dailyWordDAOImpl implements dailyWordDAO {
-
-    @Autowired
-    SqlSession session;
-
-    @Override
-    public int selectmaxId() throws DataAccessException {
-        return session.selectOne("mapper.dailyWord.maxId");
-    }
-
-    @Override
-    public void insertDailyWord(List<dailyWordVO> wordVOElements) throws DataAccessException {
-        session.insert("mapper.dailyWord.insertDailyWord", wordVOElements);
-    }
-
-    @Override
-    public List<dailyWordVO> selectDailyWord() throws DataAccessException {
-        return session.selectList("mapper.dailyWord.selectDailyWord");
-    }
-}
Index: src/main/webapp/WEB-INF/views/common/tiles/layout.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/common/tiles/layout.jsp b/src/main/webapp/WEB-INF/views/common/tiles/layout.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/common/tiles/layout.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,31 +0,0 @@
-<%@ page language="java" contentType="text/html; ISO-8859-1"
-         pageEncoding="utf-8"
-         isELIgnored="false"
-%>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@ taglib uri="http://tiles.apache.org/tags-tiles" prefix="tiles" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title><tiles:insertAttribute name="title"/></title>
-
-</head>
-<body>
-<div>
-    <div>
-        <header>
-            <tiles:insertAttribute name="header"/>
-        </header>
-
-        <article>
-            <tiles:insertAttribute name="body"/>
-        </article>
-
-        <footer>
-            <tiles:insertAttribute name="footer"/>
-        </footer>
-    </div>
-</div>
-</body>
-</html>
Index: src/main/webapp/WEB-INF/views/inquiryBoard/writeBoardForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/inquiryBoard/writeBoardForm.jsp b/src/main/webapp/WEB-INF/views/inquiryBoard/writeBoardForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/inquiryBoard/writeBoardForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,50 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>문의 게시판 작성</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-        var cnt = 0;
-        function addImage() {
-            if (cnt == 0) {
-                $("#add_ImageForm").append("<br>" + "<input  type='file' name='imageFileName' id='imageFileName' onchange='setImage()'/>");
-                cnt++;
-            } else {
-                alert("이미지는 한 개만 추가가 가능합니다.");
-            }
-        }
-
-        function setImage(event) {
-            var reader = new FileReader();
-            reader.readAsDataURL(event.target.files[0]);
-
-            reader.onload = function (event) {
-                var img = document.createElement("img");
-                img.setAttribute("src", event.target.result);
-                document.getElementById("image_container").appendChild(img);
-            };
-        }
-
-    </script>
-
-</head>
-
-<body>
-
-<form method="post" enctype="multipart/form-data" action="${contextPath}/inquiryBoard/writeBoard">
-    <div>
-        제목 <input type="text" id="title" name="title" placeholder="글의 제목">
-        내용 <input type="text" id="content" name="content" placeholder="글의 내용">
-        <input type="submit" value="글쓰기" >
-    </div>
-    <div id="add_ImageForm"></div>
-</form>
-
-<button onclick="addImage()">이미지 추가</button>
-<div id="image_container"></div>
-
-</body>
-</html>
Index: src/test/java/com/project/word/mabatisTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/project/word/mabatisTest.java b/src/test/java/com/project/word/mabatisTest.java
deleted file mode 100644
--- a/src/test/java/com/project/word/mabatisTest.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,45 +0,0 @@
-package com.project.word;
-
-import org.apache.ibatis.session.SqlSession;
-import org.apache.ibatis.session.SqlSessionFactory;
-import org.junit.jupiter.api.DisplayName;
-import org.junit.runner.RunWith;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.test.context.ContextConfiguration;
-import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
-import org.junit.Test;
-
-import javax.sql.DataSource;
-import java.sql.Connection;
-
-@RunWith(SpringJUnit4ClassRunner.class)
-@ContextConfiguration(locations = "file:src/main/webapp/WEB-INF/spring/root-context.xml")
-public class mabatisTest {
-    @Autowired
-    DataSource dataSource;
-
-    @Autowired
-    SqlSessionFactory sqlSessionFactory;
-
-    @Test
-    @DisplayName("DataSourceTest")
-    public void datasource() {
-        try {
-            Connection connection = dataSource.getConnection();
-            System.out.println(connection);
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
-    @Test
-    @DisplayName("sqlSessonFactoryTest")
-    public void sqlSessionTest() {
-        try{
-            SqlSession session = sqlSessionFactory.openSession();
-            System.out.println(session);
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-}
Index: src/main/java/com/project/dailyWord/service/dailyWordServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dailyWord/service/dailyWordServiceImpl.java b/src/main/java/com/project/dailyWord/service/dailyWordServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/dailyWord/service/dailyWordServiceImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,31 +0,0 @@
-package com.project.dailyWord.service;
-
-import com.project.dailyWord.dao.dailyWordDAO;
-import com.project.dailyWord.vo.dailyWordVO;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-
-import java.util.List;
-
-@Service("dailyWordService")
-public class dailyWordServiceImpl implements dailyWordService {
-
-    @Autowired
-    dailyWordDAO dailyWordDAO;
-
-
-    @Override
-    public int selectmaxId() throws Exception{
-        return dailyWordDAO.selectmaxId();
-    }
-
-    @Override
-    public void insertDailyWord(List<dailyWordVO> wordVOElements) throws Exception{
-        dailyWordDAO.insertDailyWord(wordVOElements);
-    }
-
-    @Override
-    public List<dailyWordVO> selectDailyWord() throws Exception{
-        return dailyWordDAO.selectDailyWord();
-    }
-}
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/web.xml b/src/main/webapp/WEB-INF/web.xml
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/web.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
-<!--    PUT 메소드 apllication/x-www-from 처럼 동작하게 하는 필터-->
-    <filter>
-        <filter-name>httpPutFormFilter</filter-name>
-        <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
-    </filter>
-
-    <filter-mapping>
-        <filter-name>httpPutFormFilter</filter-name>
-        <servlet-name>appServlet</servlet-name>
-    </filter-mapping>
-    <!--encoding utf-8-->
-    <filter>
-        <filter-name>characterEncodingFilter</filter-name>
-        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
-        <init-param>
-            <param-name>encoding</param-name>
-            <param-value>utf-8</param-value>
-        </init-param>
-        <init-param>
-            <param-name>forceEncoding</param-name>
-            <param-value>true</param-value>
-        </init-param>
-    </filter>
-    <filter-mapping>
-        <filter-name>characterEncodingFilter</filter-name>
-        <url-pattern>/*</url-pattern>
-    </filter-mapping>
-
-    <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
-    <context-param>
-        <param-name>contextConfigLocation</param-name>
-        <param-value>/WEB-INF/spring/*.xml</param-value>
-    </context-param>
-
-    <!-- Creates the Spring Container shared by all Servlets and Filters -->
-    <listener>
-        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
-    </listener>
-
-    <!-- Processes application requests -->
-    <servlet>
-        <servlet-name>appServlet</servlet-name>
-        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
-        <init-param>
-            <param-name>contextConfigLocation</param-name>
-            <param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
-        </init-param>
-        <load-on-startup>1</load-on-startup>
-    </servlet>
-
-    <servlet-mapping>
-        <servlet-name>appServlet</servlet-name>
-        <url-pattern>/</url-pattern>
-    </servlet-mapping>
-</web-app>
Index: src/main/java/com/project/dailyWord/service/dailyWordService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dailyWord/service/dailyWordService.java b/src/main/java/com/project/dailyWord/service/dailyWordService.java
deleted file mode 100644
--- a/src/main/java/com/project/dailyWord/service/dailyWordService.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,13 +0,0 @@
-package com.project.dailyWord.service;
-
-import com.project.dailyWord.vo.dailyWordVO;
-
-import java.util.List;
-
-public interface dailyWordService {
-    int selectmaxId() throws Exception;
-
-    void insertDailyWord(List<dailyWordVO> wordVOElements) throws Exception;
-
-    List<dailyWordVO> selectDailyWord() throws Exception;
-}
Index: src/main/resources/mybatis/mappers/statistic.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mybatis/mappers/statistic.xml b/src/main/resources/mybatis/mappers/statistic.xml
deleted file mode 100644
--- a/src/main/resources/mybatis/mappers/statistic.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,70 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-
-
-<mapper namespace="mapper.statistic">
-    <resultMap id="statisticVO" type="statisticVO">
-        <result property="wordId" column="wordId"/>
-        <result property="word" column="word"/>
-        <result property="wrongCount" column="wrongCount"/>
-        <result property="correctCount" column="correctCount"/>
-    </resultMap>
-
-    <insert id="addWord" parameterType="wordvo">
-        <![CDATA[
-        insert into wordStatistic(wordId, word, wrongCount, correctCount)
-        values (#{wordId}, #{word}, 0, 0)
-        ]]>
-    </insert>
-
-    <insert id="addDailyWord" parameterType="wordvo">
-        <![CDATA[
-        insert into wordStatistic(wordId, word, wrongCount, correctCount)
-        values (#{wordId}, #{word}, 0, 0)
-        ]]>
-    </insert>
-
-    <update id="updateWrongCard" parameterType="java.util.Map">
-        <![CDATA[
-        update wordStatistic
-        set wrongCount = wrongCount + 1
-        where wordId = #{wordId}
-        ]]>
-    </update>
-
-    <update id="updateAppropriateCard" parameterType="java.util.Map">
-        <![CDATA[
-        update wordStatistic
-        set correctCount = correctCount + 1
-        where wordId = #{wordId}
-        ]]>
-    </update>
-
-    <select id="countWord" resultType="int" parameterType="java.util.Map">
-        <![CDATA[
-        select count(*)
-        from (
-              savedword as wordTable
-                 join wordStatistic as statistcTable
-                      on wordTable.wordId = statistcTable.wordId
-            )
-        where userId = #{userId}
-        ]]>
-    </select>
-
-    <select id="search" resultType="statisticVO" parameterType="java.util.Map">
-        <![CDATA[
-        select statistcTable.word,statistcTable.wrongCount,statistcTable.correctCount
-        from (
-              savedword as wordTable
-                 join wordStatistic as statistcTable
-                      on wordTable.wordId = statistcTable.wordId
-
-            )
-        where userId = #{userId} and statistcTable.word = #{word}
-        ]]>
-    </select>
-
-</mapper>
\ No newline at end of file
Index: src/main/java/com/project/dailyWord/dao/dailyWordDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dailyWord/dao/dailyWordDAO.java b/src/main/java/com/project/dailyWord/dao/dailyWordDAO.java
deleted file mode 100644
--- a/src/main/java/com/project/dailyWord/dao/dailyWordDAO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,14 +0,0 @@
-package com.project.dailyWord.dao;
-
-import com.project.dailyWord.vo.dailyWordVO;
-import org.springframework.dao.DataAccessException;
-
-import java.util.List;
-
-public interface dailyWordDAO {
-    int selectmaxId() throws DataAccessException;
-
-    void insertDailyWord(List<dailyWordVO> wordVOElements) throws DataAccessException;
-
-    List<dailyWordVO> selectDailyWord() throws DataAccessException;
-}
Index: src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAO.java b/src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAO.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/dao/inquiryBoardDAO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,43 +0,0 @@
-package com.project.inquiryBoard.dao;
-
-import com.project.inquiryBoard.vo.AnswerVO;
-import com.project.inquiryBoard.vo.imageVO;
-import com.project.inquiryBoard.vo.inquiryBoardVO;
-import org.springframework.dao.DataAccessException;
-
-import java.util.List;
-import java.util.Map;
-
-public interface inquiryBoardDAO {
-    List<inquiryBoardVO> selectInquiryBoard(Map inquiryBoardMap) throws DataAccessException;
-
-    inquiryBoardVO selectBoardDetail(Map boardMap) throws DataAccessException;
-
-    List<AnswerVO> selectBoardAnswer(Map boardMap) throws DataAccessException;
-
-    int maxBoardId() throws DataAccessException;
-
-    void writeBoard(Map boardMap) throws DataAccessException;
-
-    void writeImageBoard(List<imageVO> imageVOList) throws DataAccessException;
-
-    int maxBoardImageFileId() throws DataAccessException;
-
-    List<imageVO> selectBoardImage(Map boardMap) throws DataAccessException;
-
-    void writeAnswer(Map boardMap) throws DataAccessException;
-
-    int maxAnswerId() throws DataAccessException;
-
-    void updateBoard(Map boardMap) throws DataAccessException;
-
-    void updateImageBoard(List<imageVO> imageVOList) throws DataAccessException;
-
-    void deleteBoard(Map boardMap) throws DataAccessException;
-
-    void modifyAnswer(Map answerMap) throws DataAccessException;
-
-    void deleteAnswer(Map answerMap) throws DataAccessException;
-
-    int selectTotalCountBoard(Map boardMap) throws DataAccessException;
-}
Index: src/main/java/com/project/member/dao/MemberDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/member/dao/MemberDAOImpl.java b/src/main/java/com/project/member/dao/MemberDAOImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/member/dao/MemberDAOImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,61 +0,0 @@
-package com.project.member.dao;
-
-import com.project.member.vo.MemberVO;
-import org.apache.ibatis.session.SqlSession;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.dao.DataAccessException;
-import org.springframework.stereotype.Repository;
-
-import java.util.List;
-import java.util.Map;
-
-@Repository("memberDAO")
-public class MemberDAOImpl implements MemberDAO {
-    @Autowired
-    SqlSession sqlSession;
-
-    @Override
-    public void addMember(MemberVO memberVO) throws DataAccessException {
-        sqlSession.insert("mapper.member.addMember", memberVO);
-    }
-
-    @Override
-    public MemberVO loginMember(Map<String, String> memberMap)throws DataAccessException {
-        return sqlSession.selectOne("mapper.member.login", memberMap);
-    }
-
-    @Override
-    public String selectAuthKey(Map<String, Object> memberMap) throws DataAccessException {
-        return sqlSession.selectOne("mapper.member.selectAuthKey",memberMap);
-    }
-
-    @Override
-    public void updateAuthKey(Map<String, Object> memberMap) {
-        sqlSession.update("mapper.member.updateAuthKey",memberMap);
-    }
-
-    @Override
-    public String checkAuthEmail(Map<String, String> memberMap) throws DataAccessException {
-        return sqlSession.selectOne("mapper.member.checkAuthEmail",memberMap);
-    }
-
-    @Override
-    public int searchOverlapId(String userId) throws DataAccessException {
-        return sqlSession.selectOne("mapper.member.searchOverlapId",userId);
-    }
-
-    @Override
-    public List<MemberVO> findUserId(MemberVO memberVO) throws DataAccessException {
-        return sqlSession.selectList("mapper.member.findUserId",memberVO);
-    }
-
-    @Override
-    public MemberVO findUserPwd(MemberVO memberVO) throws DataAccessException {
-        return sqlSession.selectOne("mapper.member.findUserPwd",memberVO);
-    }
-
-    @Override
-    public void updateUserPwd(MemberVO memberVO) throws DataAccessException {
-        sqlSession.update("mapper.member.updateUserPwd",memberVO);
-    }
-}
Index: src/main/webapp/WEB-INF/spring/mail-context.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/spring/mail-context.xml b/src/main/webapp/WEB-INF/spring/mail-context.xml
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/spring/mail-context.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
-
-    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
-        <property name="host" value="smtp.gmail.com" />
-        <property name="port" value="587" />
-        <property name="username" value="ksj0109188@gmail.com" />
-        <property name="password" value="dzrr369mm" />
-        <property name="javaMailProperties">
-            <props>
-                <prop key="mail.transport.protocol">smtp</prop>
-                <prop key="mail.smtp.auth">true</prop>
-                <prop key="mail.smtp.starttls.enable">true</prop>
-                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
-                <prop key="mail.debug">true</prop>
-            </props>
-        </property>
-    </bean>
-</beans>
-
Index: src/main/java/com/project/inquiryBoard/vo/imageVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/vo/imageVO.java b/src/main/java/com/project/inquiryBoard/vo/imageVO.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/vo/imageVO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,46 +0,0 @@
-package com.project.inquiryBoard.vo;
-
-import org.springframework.stereotype.Component;
-
-import java.sql.Timestamp;
-
-@Component("imageVO")
-public class imageVO {
-    private int imageFileId;
-    private String imageFileName;
-    private Timestamp savedDate;
-    private int boardId;
-
-
-    public int getImageFileId() {
-        return imageFileId;
-    }
-
-    public void setImageFileId(int imageFileId) {
-        this.imageFileId = imageFileId;
-    }
-
-    public String getImageFileName() {
-        return imageFileName;
-    }
-
-    public void setImageFileName(String imageFileName) {
-        this.imageFileName = imageFileName;
-    }
-
-    public Timestamp getSavedDate() {
-        return savedDate;
-    }
-
-    public void setSavedDate(Timestamp savedDate) {
-        this.savedDate = savedDate;
-    }
-
-    public int getBoardId() {
-        return boardId;
-    }
-
-    public void setBoardId(int boardId) {
-        this.boardId = boardId;
-    }
-}
Index: src/main/java/com/project/inquiryBoard/Controller/inquiryBoardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/Controller/inquiryBoardController.java b/src/main/java/com/project/inquiryBoard/Controller/inquiryBoardController.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/Controller/inquiryBoardController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,41 +0,0 @@
-package com.project.inquiryBoard.Controller;
-
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestBody;
-import org.springframework.web.bind.annotation.RequestParam;
-import org.springframework.web.multipart.MultipartHttpServletRequest;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.util.Map;
-
-public interface inquiryBoardController {
-
-    ModelAndView selectInquiryBoard(HttpServletRequest request, HttpServletResponse response,
-                                    @RequestParam(value = "section", defaultValue = "1") int section,
-                                    @RequestParam(value = "page", defaultValue = "1") int page);
-
-    public ModelAndView selectTitle(HttpServletRequest request, HttpServletResponse response,
-                                    @RequestParam(value = "title") String title,
-                                    @RequestParam(value = "section", defaultValue = "1") int section,
-                                    @RequestParam(value = "pageNum", defaultValue = "1") int pageNum);
-
-    ModelAndView selectBoardDetail(HttpServletRequest request, HttpServletResponse response, @PathVariable("boardId") int boardId);
-
-    ResponseEntity writeBoard(MultipartHttpServletRequest multipartRequest, HttpServletResponse response) throws Exception;
-
-    ResponseEntity writeAnswer(HttpServletRequest request, HttpServletResponse response, @RequestBody Map<String, String> boardMap);
-
-    ModelAndView modifyForm(HttpServletRequest request, HttpServletResponse response, @RequestParam(value = "boardId", required = true) int boardId);
-
-    ModelAndView modifyBoard(MultipartHttpServletRequest multipartRequest, HttpServletResponse response) throws Exception;
-
-    ModelAndView deleteBoard(HttpServletRequest request, HttpServletResponse response, @RequestParam(value = "boardId") int boardId,
-                             @RequestParam(value = "imageFileName") String imageFileName);
-
-    ResponseEntity modifyAnswer(HttpServletRequest request, HttpServletResponse response, @RequestBody Map AnswerMap);
-
-    ResponseEntity deleteAnswer(HttpServletRequest request, HttpServletResponse response, @PathVariable int AnswerId);
-}
Index: src/main/java/com/project/member/vo/MemberVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/member/vo/MemberVO.java b/src/main/java/com/project/member/vo/MemberVO.java
deleted file mode 100644
--- a/src/main/java/com/project/member/vo/MemberVO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,91 +0,0 @@
-package com.project.member.vo;
-
-import org.springframework.stereotype.Component;
-
-import java.sql.Timestamp;
-
-@Component("memberVO")
-public class MemberVO {
-
-    private String userId;
-    private String userPwd;
-    private String userName;
-    private String email;
-    private Timestamp joinDate;
-    private String authKey;
-    private String phone1;
-    private String phone2;
-    private String phone3;
-
-    public String getUserId() {
-        return userId;
-    }
-
-    public void setUserId(String userId) {
-        this.userId = userId;
-    }
-
-    public String getUserPwd() {
-        return userPwd;
-    }
-
-    public void setUserPwd(String userPwd) {
-        this.userPwd = userPwd;
-    }
-
-    public String getUserName() {
-        return userName;
-    }
-
-    public void setUserName(String userName) {
-        this.userName = userName;
-    }
-
-    public String getEmail() {
-        return email;
-    }
-
-    public void setEmail(String email) {
-        this.email = email;
-    }
-
-    public Timestamp getJoinDate() {
-        return joinDate;
-    }
-
-    public void setJoinDate(Timestamp joinDate) {
-        this.joinDate = joinDate;
-    }
-
-    public String getAuthKey() {
-        return authKey;
-    }
-
-    public void setAuthKey(String authKey) {
-        this.authKey = authKey;
-    }
-
-    public String getPhone1() {
-        return phone1;
-    }
-
-    public void setPhone1(String phone1) {
-        this.phone1 = phone1;
-    }
-
-    public String getPhone2() {
-        return phone2;
-    }
-
-    public void setPhone2(String phone2) {
-        this.phone2 = phone2;
-    }
-
-    public String getPhone3() {
-        return phone3;
-    }
-
-    public void setPhone3(String phone3) {
-        this.phone3 = phone3;
-    }
-}
Index: src/main/java/com/project/word/dao/wordDAOImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/word/dao/wordDAOImpl.java b/src/main/java/com/project/word/dao/wordDAOImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/word/dao/wordDAOImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,113 +0,0 @@
-package com.project.word.dao;
-
-import com.project.word.vo.wordVO;
-import org.apache.ibatis.session.SqlSession;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.dao.DataAccessException;
-import org.springframework.stereotype.Repository;
-
-import java.util.List;
-import java.util.Map;
-
-@Repository("wordDao")
-public class wordDAOImpl implements wordDAO {
-    @Autowired
-    SqlSession session;
-
-    @Override
-    public void addWord(wordVO wordvo) throws DataAccessException {
-        session.insert("mapper.word.addword", wordvo);
-    }
-
-    @Override
-    public void addDailyWord(wordVO wordvo) throws DataAccessException {
-        session.insert("mapper.word.addDailyWord",wordvo);
-    }
-
-    @Override
-    public int countWrongReviewCard(Map wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.countWrongReviewCard", wordMap);
-    }
-
-    @Override
-    public int countReviewCard(Map wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.countReviewCard",wordMap);
-    }
-
-    @Override
-    public int countWrongNewCard(Map wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.countWrongNewCard",wordMap);
-    }
-
-    @Override
-    public int countNewCard(Map wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.countNewCard",wordMap);
-    }
-
-    @Override
-    public int maxWordId(wordVO wordvo) throws DataAccessException {
-        return session.selectOne("mapper.word.maxWordId", wordvo);
-    }
-
-    @Override
-    public wordVO selectReviewCard(Map wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.selectReviewCard", wordMap);
-    }
-
-    @Override
-    public wordVO selectNewCard(Map wordMap)throws  DataAccessException {
-        return session.selectOne("mapper.word.selectNewCard", wordMap);
-    }
-
-    @Override
-    public void updateWrongCard(Map wordMap) throws DataAccessException {
-        session.update("mapper.word.updateWrongCard",wordMap);
-    }
-
-    @Override
-    public void updateReviewCard_Appropriate(Map wordMap) throws DataAccessException {
-        session.update("mapper.word.updateReviewCard_Appropriate", wordMap);
-    }
-
-    @Override
-    public wordVO selectRemainedReviewCard(Map wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.selectRemainedReviewCard", wordMap);
-    }
-
-    @Override
-    public wordVO selectRemainedNewCard(Map wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.selectRemainedNewCard",wordMap);
-    }
-
-    @Override
-    public void updateNewCard_Appropriate(Map wordMap) throws DataAccessException {
-        session.update("mapper.word.updateNewCard_Appropriate",wordMap);
-    }
-
-    @Override
-    public List<wordVO> selectModifyWord(Map<String, Object> wordMap) {
-        return session.selectList("mapper.word.selectModifyWord",wordMap);
-    }
-
-    @Override
-    public int totalCount(Map<String, Object> wordMap) throws DataAccessException {
-        return session.selectOne("mapper.word.totalCount",wordMap);
-    }
-
-    @Override
-    public wordVO selectSpecificWord(Map<String, Object> wordMap) {
-        return session.selectOne("mapper.word.selectSpecificWord",wordMap);
-    }
-
-    @Override
-    public void updateWord(Map<String, Object> wordMap) throws DataAccessException {
-        session.selectOne("mapper.word.updateWord",wordMap);
-    }
-
-    @Override
-    public void deleteWord(Map<String, Object> wordMap) throws DataAccessException {
-        session.delete("mapper.word.deleteWord",wordMap);
-    }
-
-
-}
Index: src/main/webapp/WEB-INF/views/member/findUserPwdForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/member/findUserPwdForm.jsp b/src/main/webapp/WEB-INF/views/member/findUserPwdForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/member/findUserPwdForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,49 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-<html>
-<head>
-    <title>비밀번호 찾기 페이지</title>
-    <script>
-        function findUserPwd() {
-            var userIdValue = document.getElementById("userId").value;
-            var emailValue = document.getElementById("email").value;
-            $.ajax({
-                method: "get",
-                url: "${contextPath}/member/findUserPwd",
-                data: {userId: userIdValue, email: emailValue},
-                success: function (data) {
-                    if (data == "founded") {
-                        alert("입력하신 이메일로 임시 비밀번호를 발송했습니다.");
-                        location.href = "${contextPath}/main/main.do";
-                    } else {
-                        alert("입력하신 이름과 이메일로 등록된 아이디가 존재하지 않습니다.");
-                    }
-                }, error: function () {
-                    alert("죄송합니다. 잠시 후 다시 시도해주세요.");
-                }
-            });
-        }
-    </script>
-</head>
-<body>
-
-<div>
-    <form>
-        <input type="text" id="userId" name="userId" value="아이디">
-        <input type="text" id="email" name="email" value="이메일">
-        <input type="button" value="비밀번호 찾기" onclick="findUserPwd()">
-    </form>
-</div>
-
-</body>
-</html>
Index: src/main/java/com/project/common/base/BaseController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/common/base/BaseController.java b/src/main/java/com/project/common/base/BaseController.java
deleted file mode 100644
--- a/src/main/java/com/project/common/base/BaseController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,54 +0,0 @@
-package com.project.common.base;
-
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
-import org.springframework.web.multipart.MultipartFile;
-import org.springframework.web.multipart.MultipartHttpServletRequest;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.io.File;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-
-
-public abstract class BaseController {
-    protected static final String BOARD_IMAGE = "/Users/kim/IdeaProjects/EnglishWords_Practice/images";
-
-    @RequestMapping(value = "/*Form.do", method = {RequestMethod.POST,RequestMethod.GET})
-    public ModelAndView viewForm(HttpServletResponse response, HttpServletRequest request) throws Exception{
-        ModelAndView modelAndView = new ModelAndView();
-        String viewName= (String) request.getAttribute("viewName");
-        modelAndView.setViewName(viewName);
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "/error")
-    public ModelAndView viewError(HttpServletResponse response, HttpServletRequest request) throws Exception{
-        ModelAndView modelAndView = new ModelAndView();
-        modelAndView.setViewName("/common/error");
-        return modelAndView;
-    }
-    protected List<String> upload(MultipartHttpServletRequest multipartRequest) throws Exception{
-        List<String> fileList= new ArrayList<String>();
-        Iterator<String> fileNames = multipartRequest.getFileNames();
-        while(fileNames.hasNext()){
-            String fileName = fileNames.next();
-            MultipartFile mFile = multipartRequest.getFile(fileName);
-            String originalFileName=mFile.getOriginalFilename();
-            fileList.add(originalFileName);
-            File file = new File(BOARD_IMAGE +"/"+ fileName);
-            if(mFile.getSize()!=0){
-                if(! file.exists()){
-                    if(file.getParentFile().mkdirs()){
-                        file.createNewFile();
-                    }
-                }
-                mFile.transferTo(new File(BOARD_IMAGE +"/"+"temp"+ "/"+originalFileName));
-            }
-        }
-        return fileList;
-    }
-}
Index: src/main/java/com/project/dailyWord/vo/dailyWordVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dailyWord/vo/dailyWordVO.java b/src/main/java/com/project/dailyWord/vo/dailyWordVO.java
deleted file mode 100644
--- a/src/main/java/com/project/dailyWord/vo/dailyWordVO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,46 +0,0 @@
-package com.project.dailyWord.vo;
-
-import org.springframework.stereotype.Component;
-
-import java.sql.Timestamp;
-
-@Component("dailyWordvo")
-public class dailyWordVO {
-    private int dailyId;
-    private String word;
-    private String mean;
-
-    public int getDailyId() {
-        return dailyId;
-    }
-
-    public void setDailyId(int dailyId) {
-        this.dailyId = dailyId;
-    }
-
-    public String getWord() {
-        return word;
-    }
-
-    public void setWord(String word) {
-        this.word = word;
-    }
-
-    public String getMean() {
-        return mean;
-    }
-
-    public void setMean(String mean) {
-        this.mean = mean;
-    }
-
-    public Timestamp getSavedDate() {
-        return savedDate;
-    }
-
-    public void setSavedDate(Timestamp savedDate) {
-        this.savedDate = savedDate;
-    }
-
-    private Timestamp savedDate;
-}
Index: src/main/java/com/project/dailyWord/Controller/dailyWordController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dailyWord/Controller/dailyWordController.java b/src/main/java/com/project/dailyWord/Controller/dailyWordController.java
deleted file mode 100644
--- a/src/main/java/com/project/dailyWord/Controller/dailyWordController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,13 +0,0 @@
-package com.project.dailyWord.Controller;
-
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.io.IOException;
-
-public interface dailyWordController {
-
-    void cloneDailyWord() ;
-    ModelAndView dailyWordForm(HttpServletRequest request, HttpServletResponse response);
-}
Index: src/main/java/com/project/word/service/wordService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/word/service/wordService.java b/src/main/java/com/project/word/service/wordService.java
deleted file mode 100644
--- a/src/main/java/com/project/word/service/wordService.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,46 +0,0 @@
-package com.project.word.service;
-
-import com.project.word.vo.wordVO;
-
-import java.util.List;
-import java.util.Map;
-
-public interface wordService {
-    void addWord(wordVO wordvo) throws Exception;
-
-    void addDailyWord(wordVO wordvo) throws Exception;
-
-    int countReviewCard(Map wordMap) throws Exception;
-
-    int countNewCard(Map wordMap) throws Exception;
-
-    int countWrongReviewCard(Map wordMap) throws Exception;
-
-    int countWrongNewCard(Map wordMap) throws Exception;
-
-    int maxWordId(wordVO wordvo) throws Exception;
-
-    wordVO selectReviewCard(Map wordMap) throws Exception;
-
-    wordVO selectRemainedReviewCard(Map wordMap) throws Exception;
-
-    void updateWrongCard(Map wordMap) throws Exception;
-
-    void updateReviewCard_Appropriate(Map wordMap) throws Exception;
-
-    wordVO selectNewCard(Map<String, String> wordMap) throws Exception;
-
-    wordVO selectRemainedNewCard(Map wordMap) throws Exception;
-
-    void updateNewCard_Appropriate(Map wordMap) throws Exception;
-
-    List<wordVO> selectModifyWord(Map<String, Object> wordMap) throws Exception;
-
-    int totalCount(Map<String, Object> wordMap) throws Exception;
-
-    wordVO selectSpecificWord(Map<String, Object> wordMap) throws Exception;
-
-    void updateWord(Map<String, Object> wordMap) throws Exception;
-
-    void deleteWord(Map<String, Object> wordMap) throws  Exception;
-}
Index: src/test/resources/log4j.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/resources/log4j.xml b/src/test/resources/log4j.xml
deleted file mode 100644
--- a/src/test/resources/log4j.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
-<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
-
-	<!-- Appenders -->
-	<appender name="console" class="org.apache.log4j.ConsoleAppender">
-		<param name="Target" value="System.out" />
-		<layout class="org.apache.log4j.PatternLayout">
-			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
-		</layout>
-	</appender>
-	
-	<!-- Application Loggers -->
-	<logger name="com.project.word">
-		<level value="info" />
-	</logger>
-	
-	<!-- 3rdparty Loggers -->
-	<logger name="org.springframework.core">
-		<level value="info" />
-	</logger>	
-	
-	<logger name="org.springframework.beans">
-		<level value="info" />
-	</logger>
-	
-	<logger name="org.springframework.context">
-		<level value="info" />
-	</logger>
-
-	<logger name="org.springframework.web">
-		<level value="info" />
-	</logger>
-
-	<!-- Root Logger -->
-	<root>
-		<priority value="info" />
-		<appender-ref ref="console" />
-	</root>
-	
-</log4j:configuration>
Index: src/main/webapp/WEB-INF/views/word/reviewCardForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/word/reviewCardForm.jsp b/src/main/webapp/WEB-INF/views/word/reviewCardForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/word/reviewCardForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,147 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%-- ajax를 두번 호출한 이유, 처음 rest API를 이용해 학습할 수 만큼 데이터를 가지고 오려 했다. 하지만 데이터베이스에 저장된 단어의 출력시간을 체크해서
-계속 요청 받아야 하는 로직이로 REST API를 사용하기엔 HTML폼 태그가 너무 많아지고, 로직이 복잡해져 유지보수가 어렵다 판단 다음과 같은 코드를 작성했다.--%>
-
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>RevieCardStudy Page</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-
-        function showAnswer() {
-            document.getElementById("showAnswerButton").style.display = "none";
-            document.getElementById("mean").style.display = "block";
-            document.getElementById("appropriateButton").style.display = "block";
-            document.getElementById("reviewButton").style.display = "block";
-        }
-
-        function review() {
-            updateWord("review");
-        }
-
-        function appropriate() {
-            updateWord("appropriate");
-        }
-
-        function updateWord(command) {
-            var wordCount = document.getElementById("wordCount");
-            var wordId = document.getElementById("wordId");
-            var studyQuantity = document.getElementById("studyQuantity");
-            var wordcount = wordCount.value;
-            var wordIdValue = wordId.value;
-            var studyQuantityValue = studyQuantity.value;
-            if (command == "review") {
-                $.ajax({
-                    type: "put",
-                    dataType: "json",
-                    async: true,
-                    contentType: "application/json",
-                    url: "${contextPath}/word/reviewStudy_wrong",
-                    data: JSON.stringify({
-                        wordId: wordIdValue
-                    }),
-                    success: function (data) {
-                        studyQuantityValue = parseInt(studyQuantityValue) + 1
-                        studyQuantity.value = studyQuantityValue;
-                        reviewCardSelect();
-                    },
-                    error: function (request, error) {
-                        alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
-                    }
-                });
-
-
-            } else if (command == "appropriate") {
-                $.ajax({
-                    type: "put",
-                    async: true,
-                    dataType: "json",
-                    contentType: "application/json",
-                    url: "${contextPath}/word/reviewStudy_appropriate",
-                    data: JSON.stringify(
-                        {
-                            wordCount: wordcount,
-                            wordId: wordIdValue
-                        }),
-                    success: function (data) {
-                        studyQuantityValue = parseInt(studyQuantityValue) + 1
-                        studyQuantity.value = studyQuantityValue;
-                        reviewCardSelect();
-                    },
-                    error: function (request, status, error) {
-                        alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
-                    }
-                });
-
-            }
-        }
-
-        function reviewCardSelect() {
-            $.ajax({
-                type: "get",
-                async: true,
-                url: "${contextPath}/word/reviewStudy",
-                success: function (data) {
-                    if (data == 'Empty') {
-                        alert('학습할 것이 없습니다.');
-                        location.href = "${contextPath}/word/StudyForm.do";
-                    } else {
-                        receiveDataHandle(data);
-                    }
-                },
-                error: function (request, error) {
-                    alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
-                }
-            });
-        }
-
-        function receiveDataHandle(data) {
-            document.getElementById("word").value = data.word;
-            document.getElementById("wordCount").value = data.wordCount;
-            document.getElementById("wordId").value = data.wordId;
-            var mean = document.getElementById("mean")
-            mean.value = data.mean;
-            mean.style.display = "none";
-            document.getElementById("showAnswerButton").style.display = "block";
-            document.getElementById("appropriateButton").style.display = "none";
-            document.getElementById("reviewButton").style.display = "none";
-        }
-    </script>
-</head>
-<body>
-<c:choose>
-    <c:when test="${empty wordvo}">
-        <strong>학습할 단어가 없습니다. 새로운 카드를 학습하거나 추가하세요.</strong>
-    </c:when>
-    <c:otherwise>
-        <form action="${contextPath}/word/addWord.do">
-            <div name="studyDiv" style="display: block">
-                <input type="text" id="word" name="word" value="${wordvo.word}"><br>
-                <input type="text" id="mean" name="mean" value="${wordvo.mean}" style="display: none">
-                <input type="button" id="showAnswerButton" name="showAnswerButton" onclick="showAnswer()"
-                       value="답보기">
-                <input type="button" id="reviewButton" name="reviewButton" style="display: none"
-                       onclick="review()" value="다시하기">
-                <input type="button" id="appropriateButton" name="appropriateButton" style="display: none"
-                       onclick="appropriate()" value="알맞음">
-                <input type="hidden" id="wordCount" name="wordCount" value="${wordvo.wordCount}">
-                <input type="hidden" id="wordId" name="wordId" value="${wordvo.wordId}">
-            </div>
-            <div>
-                학습량<input type="text" id="studyQuantity" value="0">
-            </div>
-        </form>
-    </c:otherwise>
-</c:choose>
-</body>
-</html>
\ No newline at end of file
Index: src/main/resources/mybatis/mappers/dailyWord.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mybatis/mappers/dailyWord.xml b/src/main/resources/mybatis/mappers/dailyWord.xml
deleted file mode 100644
--- a/src/main/resources/mybatis/mappers/dailyWord.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-
-
-<mapper namespace="mapper.dailyWord">
-    <resultMap id="dailyWordResult" type="dailyWordVO">
-        <result property="dailyId" column="dailyId"/>
-        <result property="word" column="word"/>
-        <result property="mean" column="mean"/>
-        <result property="savedDate" column="savedDate"/>
-    </resultMap>
-
-    <select id="maxId" resultType="int">
-        <![CDATA[
-        select IFNULL(MAX(dailyId), 0) + 1
-        from dailyWord;
-        ]]>
-    </select>
-
-
-    <insert id="insertDailyWord" parameterType="java.util.Map">
-        insert into dailyWord(dailyId, word, mean, savedDate) values
-        <foreach item="item" collection="list" separator=",">
-                (#{item.dailyId},#{item.word},#{item.mean},current_timestamp)
-        </foreach>
-    </insert>
-
-    <select id="selectDailyWord" resultType="dailyWordVO">
-        select dailyId, word, mean from dailyWord where DATE_FORMAT(savedDate,"%y:%c:%d")=DATE_FORMAT(now(),"%y:%c:%d");
-    </select>
-</mapper>
\ No newline at end of file
Index: src/main/resources/mybatis/mappers/word.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mybatis/mappers/word.xml b/src/main/resources/mybatis/mappers/word.xml
deleted file mode 100644
--- a/src/main/resources/mybatis/mappers/word.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,235 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-
-
-<mapper namespace="mapper.word">
-    <resultMap id="wordResult" type="wordVO">
-        <result property="wordId" column="wordId"/>
-        <result property="word" column="word"/>
-        <result property="mean" column="mean"/>
-        <result property="savedDate" column="savedDate"/>
-        <result property="wordCount" column="wordCount"/>
-        <result property="userId" column="userId"/>
-        <result property="dailyWord_dailyId" column="dailyWord_dailyId"/>
-        <result property="isNewCard" column="isNewCard"/>
-        <result property="isWrongCard" column="isWrongCard"/>
-        <result property="isReviewCard" column="isReviewCard"/>
-        <result property="appearanceDate" column="appearanceDate"/>
-    </resultMap>
-
-    <select id="maxWordId" resultType="int">
-        <![CDATA[
-        select IFNULL(MAX(wordId), 0) + 1
-        from savedword;
-        ]]>
-    </select>
-
-    <insert id="addword" parameterType="wordVO">
-		<![CDATA[
-        insert into savedword(wordId, word, mean, wordcount, userId)
-        values (#{wordId}, #{word}, #{mean}, 0, #{userId})
-        ]]>
-	</insert>
-
-    <insert id="addDailyWord" parameterType="wordVO">
-		<![CDATA[
-        insert into savedword(wordId, word, mean, wordcount, userId, dailyId)
-        values (#{wordId}, #{word}, #{mean}, 0, #{userId}, #{dailyWord_dailyId})
-        ]]>
-	</insert>
-
-    <select id="selectReviewCard" resultType="wordVO" parameterType="java.util.Map">
-    <![CDATA[
-        select wordId, word, mean, appearanceDate, wordCount, userId
-        from savedword
-        where userId = #{userId}
-          and appearanceDate <= current_timestamp
-          and isNewcard = false
-          and isWrongcard = false
-          and isReviewCard = true LIMIT 1
-        ]]>
-    </select>
-
-    <select id="selectRemainedReviewCard" resultType="wordVO" parameterType="java.util.Map">
-        select wordId, word, mean, appearanceDate, wordCount, userId
-        from savedword
-        <where>
-            userId = #{userId}
-            <if test="selectState == 'notEmpty' and studyMode =='review' ">
-                <![CDATA[
-                and savedDate <= current_timestamp
-                and isNewcard = false
-                and isWrongcard = true
-                and isReviewCard = true
-                ]]>
-            </if>
-
-            <if test="selectState == 'empty' and studyMode =='review'">
-                <![CDATA[
-                and isNewcard = false
-                and isWrongcard = true
-                and isReviewCard = true
-                ]]>
-            </if>
-        </where>
-        ORDER BY savedDate
-        LIMIT 1
-    </select>
-
-    <update id="updateWrongCard" parameterType="java.util.Map">
-        <![CDATA[
-        update savedword
-        set wordcount      = #{wordCount},
-            appearanceDate = #{appearanceDate},
-            isWrongcard    = true
-        where userId = #{userId}
-          and wordId = #{wordId}
-        ]]>
-    </update>
-
-    <update id="updateReviewCard_Appropriate" parameterType="java.util.Map">
-        <![CDATA[
-        update savedword
-        set wordcount      = #{wordCount},
-            appearanceDate = #{appearanceDate},
-            isWrongcard    = false
-        where userId = #{userId}
-          and wordId = #{wordId}
-        ]]>
-    </update>
-
-    <select id="countWrongReviewCard" resultType="int" parameterType="java.util.Map">
-        <![CDATA[
-        select count(*)
-        from savedword
-        where userId = #{userId}
-          and isNewCard = false
-          and isWrongcard = true
-          and isReviewCard = true
-        ]]>
-    </select>
-
-    <select id="countReviewCard" resultType="int" parameterType="java.util.Map">
-        <![CDATA[
-        select count(*)
-        from savedword
-        where userId = #{userId}
-          and isNewCard = false
-          and isWrongcard = false
-          and isReviewCard = true
-          and appearanceDate <= current_timestamp
-        ]]>
-    </select>
-
-    <select id="countWrongNewCard" resultType="int" parameterType="java.util.Map">
-        <![CDATA[
-        select count(*)
-        from savedword
-        where userId = #{userId}
-          and isNewCard = true
-          and isWrongcard = true
-          and isReviewCard = false
-        ]]>
-    </select>
-
-    <select id="countNewCard" resultType="int" parameterType="java.util.Map">
-        <![CDATA[
-        select count(*)
-        from savedword
-        where userId = #{userId}
-          and isNewCard = true
-          and isWrongcard = false
-          and isReviewCard = false
-        ]]>
-    </select>
-
-    <select id="selectNewCard" resultType="wordVO" parameterType="java.util.Map">
-        <![CDATA[
-        select wordId, word, mean, appearanceDate, wordCount, userId
-        from savedword
-        where userId = #{userId}
-          and isNewCard = true
-          and isWrongcard = false
-          and isReviewCard = false limit 1
-        ]]>
-    </select>
-
-    <select id="selectRemainedNewCard" resultType="wordVO" parameterType="java.util.Map">
-        select wordId, word, mean, appearanceDate, wordCount, userId
-        from savedword
-        <where>
-            userId = #{userId}
-            <if test="selectState == 'notEmpty' and studyMode =='newCardStudy' ">
-                <![CDATA[
-                and appearanceDate <= current_timestamp
-                and isNewcard = true
-                and isWrongcard = true
-                and isReviewCard = false
-                ]]>
-            </if>
-
-            <if test="selectState == 'empty' and studyMode =='newCardStudy'">
-                <![CDATA[
-                and isNewcard = true
-                and isWrongcard = true
-                and isReviewCard = false
-                ]]>
-            </if>
-        </where>
-        ORDER BY savedDate
-        LIMIT 1
-    </select>
-
-    <update id="updateNewCard_Appropriate" parameterType="java.util.Map">
-        <![CDATA[
-        update savedword
-        set wordcount      = #{wordCount},
-            appearanceDate = #{appearanceDate},
-            isWrongcard    = false,
-            isReviewCard   = true,
-            isNewCard      = false
-        where userId = #{userId}
-          and wordId = #{wordId}
-        ]]>
-    </update>
-
-    <select id="selectModifyWord" resultType="wordVO" parameterType="java.util.Map">
-        <![CDATA[
-        select wordId, word, mean, savedDate, appearanceDate
-        from savedWord
-        where userId = #{userId}
-        ]]>
-        <if test="selectMode=='like'">
-        <![CDATA[
-        and word like CONCAT('%',#{search},'%')
-        ]]>
-        </if>
-        order by wordId
-        limit 10 offset #{startPage}
-    </select>
-
-    <select id="totalCount" resultType="int" parameterType="java.util.Map">
-        select count(*)
-        from savedWord
-        where userId = #{userId}
-    </select>
-
-    <select id="selectSpecificWord" resultType="wordVO" parameterType="java.util.Map">
-        select wordId, word, mean, savedDate, appearanceDate
-        from savedWord
-        where userId = #{userId} and wordId = #{wordId}
-    </select>
-
-    <update id="updateWord" parameterType="java.util.Map">
-        update savedWord
-        set word = #{word}, mean = #{mean}
-        where userId = #{userId} and wordId = #{wordId}
-    </update>
-
-    <delete id="deleteWord" parameterType="java.util.Map">
-        delete from savedWord
-        where userId= #{userId} and wordId = #{wordId}
-    </delete>
-</mapper>
\ No newline at end of file
Index: src/main/java/com/project/member/service/MemberServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/member/service/MemberServiceImpl.java b/src/main/java/com/project/member/service/MemberServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/member/service/MemberServiceImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,62 +0,0 @@
-package com.project.member.service;
-
-import com.project.member.dao.MemberDAO;
-import com.project.member.vo.MemberVO;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-import org.springframework.transaction.annotation.Propagation;
-import org.springframework.transaction.annotation.Transactional;
-
-import java.util.List;
-import java.util.Map;
-@Transactional(propagation = Propagation.REQUIRED)
-@Service("memberService")
-public class MemberServiceImpl implements MemberService {
-    @Autowired
-    MemberDAO memberDAO;
-
-    @Override
-    public void addMember(MemberVO memberVO) throws Exception {
-        memberDAO.addMember(memberVO);
-    }
-
-    @Override
-    public MemberVO loginMember(Map<String, String> memberMap) throws Exception {
-        return memberDAO.loginMember(memberMap);
-    }
-
-    @Override
-    public String selectAuthKey(Map<String, Object> memberMap) throws Exception {
-        return memberDAO.selectAuthKey(memberMap);
-    }
-
-    @Override
-    public void updateAuthKey(Map<String, Object> memberMap) {
-        memberDAO.updateAuthKey(memberMap);
-    }
-
-    @Override
-    public String checkAuthEmail(Map<String, String> memberMap) throws Exception {
-        return memberDAO.checkAuthEmail(memberMap);
-    }
-
-    @Override
-    public int searchOverlapId(String userId) throws Exception {
-        return memberDAO.searchOverlapId(userId);
-    }
-
-    @Override
-    public List<MemberVO> findUserId(MemberVO memberVO) throws Exception {
-        return memberDAO.findUserId(memberVO);
-    }
-
-    @Override
-    public MemberVO findUserPwd(MemberVO memberVO) throws Exception {
-        return memberDAO.findUserPwd(memberVO);
-    }
-
-    @Override
-    public void updateUserPwd(MemberVO memberVO) throws Exception {
-        memberDAO.updateUserPwd(memberVO);
-    }
-}
Index: src/main/resources/mybatis/mappers/member.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/mybatis/mappers/member.xml b/src/main/resources/mybatis/mappers/member.xml
deleted file mode 100644
--- a/src/main/resources/mybatis/mappers/member.xml	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,83 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!DOCTYPE mapper
-        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
-        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
-
-<mapper namespace="mapper.member">
-    <resultMap id="memberResult" type="MemberVO">
-        <result property="userId" column="userId"/>
-        <result property="userPwd" column="userPwd"/>
-        <result property="email" column="email"/>
-        <result property="joinDate" column="joinDate"/>
-        <result property="authKey" column="authKey"/>
-        <result property="phone1" column="phone1"/>
-        <result property="phone2" column="phone2"/>
-        <result property="phone3" column="phone3"/>
-        <result property="userName" column="userName"/>
-    </resultMap>
-
-    <insert id="addMember" parameterType="MemberVO">
-		<![CDATA[
-        insert into member(userId, userPwd, email, joinDate, authKey, phone1, phone2, phone3, userName)
-        values (#{userId}, #{userPwd}, #{email}, current_timestamp, #{authKey}, #{phone1}, #{phone2}, #{phone3},
-                #{userName})
-        ]]>
-	</insert>
-
-    <select id="login" resultType="MemberVO" parameterType="java.util.Map">
-        <![CDATA[
-        select userId, authKey
-        from member
-        where userId = #{userId}
-          and userPwd = #{userPwd}
-        ]]>
-    </select>
-
-    <select id="selectAuthKey" resultType="String" parameterType="java.util.Map">
-        <![CDATA[
-        select authKey
-        from member
-        where userId = #{userId}
-        ]]>
-    </select>
-
-    <update id="updateAuthKey" parameterType="java.util.Map">
-        <![CDATA[
-        UPDATE member
-        set authKey = "Y"
-        where userId = #{userId}
-        ]]>
-    </update>
-
-    <select id="searchOverlapId" resultType="int" parameterType="String">
-        <![CDATA[
-        select count(*)
-        from member
-        where userId = #{userId}
-        ]]>
-    </select>
-
-    <select id="findUserId" resultType="MemberVO" parameterType="java.util.List">
-        select userId, email, joinDate, authKey
-        from member
-        where userName = #{userName}
-          and email = #{email}
-    </select>
-
-    <select id="findUserPwd" resultType="MemberVO" parameterType="MemberVO">
-        <![CDATA[
-        select userId, email, userName
-        from member
-        where userId = #{userId}
-          and email = #{email}
-        ]]>
-    </select>
-
-    <update id="updateUserPwd" parameterType="MemberVO">
-        <![CDATA[
-        update member
-        set userPwd = #{userPwd}
-        where userId = #{userId}
-        ]]>
-    </update>
-</mapper>
\ No newline at end of file
Index: src/main/java/com/project/inquiryBoard/service/inquiryBoardServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/service/inquiryBoardServiceImpl.java b/src/main/java/com/project/inquiryBoard/service/inquiryBoardServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/service/inquiryBoardServiceImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,113 +0,0 @@
-package com.project.inquiryBoard.service;
-
-import com.project.inquiryBoard.dao.inquiryBoardDAO;
-import com.project.inquiryBoard.vo.AnswerVO;
-import com.project.inquiryBoard.vo.imageVO;
-import com.project.inquiryBoard.vo.inquiryBoardVO;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-import org.springframework.transaction.annotation.Propagation;
-import org.springframework.transaction.annotation.Transactional;
-
-import java.util.List;
-import java.util.Map;
-
-@Transactional(propagation = Propagation.REQUIRED)
-@Service("inquiryBoardService")
-public class inquiryBoardServiceImpl implements inquiryBoardService {
-
-    @Autowired
-    inquiryBoardDAO inquiryBoardDAO;
-
-    @Override
-    public List<inquiryBoardVO> selectInquiryBoard(Map inquiryBoardMap) {
-        return inquiryBoardDAO.selectInquiryBoard(inquiryBoardMap);
-    }
-
-    @Override
-    public inquiryBoardVO selectBoardDetail(Map boardMap) throws Exception {
-        return inquiryBoardDAO.selectBoardDetail(boardMap);
-    }
-
-    @Override
-    public List<AnswerVO> selectBoardAnswer(Map boardMap) throws Exception {
-        return inquiryBoardDAO.selectBoardAnswer(boardMap);
-    }
-
-    @Override
-    public int writeBoard(Map boardMap) throws Exception {
-        int maxBoardId = inquiryBoardDAO.maxBoardId();
-        boardMap.put("boardId", maxBoardId);
-        inquiryBoardDAO.writeBoard(boardMap);
-        return maxBoardId;
-    }
-
-    @Override
-    public void writeImageBoard(Map boardMap) throws Exception {
-        int maxBoardImageFileId = inquiryBoardDAO.maxBoardImageFileId();
-        List<imageVO> fileList = (List<imageVO>) boardMap.get("imageFileList");
-        int boardId = (int) boardMap.get("boardId");
-        for (imageVO imageVO : fileList) {
-            imageVO.setImageFileId(maxBoardImageFileId++);
-            imageVO.setBoardId(boardId);
-        }
-        inquiryBoardDAO.writeImageBoard(fileList);
-    }
-
-    @Override
-    public List<imageVO> selectBoardImage(Map boardMap) throws Exception {
-        return inquiryBoardDAO.selectBoardImage(boardMap);
-    }
-
-    @Override
-    public void writeAnswer(Map boardMap) throws Exception {
-        int AnswerId = inquiryBoardDAO.maxAnswerId();
-        boardMap.put("AnswerId", AnswerId);
-        inquiryBoardDAO.writeAnswer(boardMap);
-    }
-
-    @Override
-    public void updateBoard(Map boardMap) throws Exception {
-        inquiryBoardDAO.updateBoard(boardMap);
-    }
-
-    @Override
-    public void updateImageBoard(Map boardMap) throws Exception {
-        List<imageVO> fileList = (List<imageVO>) boardMap.get("imageFileList");
-        List<imageVO> exist = inquiryBoardDAO.selectBoardImage(boardMap);
-        if (exist != null && exist.size() != 0) {
-            for (imageVO existImage : exist) {
-                for (imageVO changeImage : fileList) {
-                    existImage.setImageFileName(changeImage.getImageFileName());
-                }
-            }
-            inquiryBoardDAO.updateImageBoard(exist);
-        } else {
-            int maxBoardImageFileId = inquiryBoardDAO.maxBoardImageFileId();
-            for (imageVO Image : fileList) {
-                Image.setImageFileId(maxBoardImageFileId);
-            }
-            inquiryBoardDAO.writeImageBoard(fileList);
-        }
-    }
-
-    @Override
-    public void deleteBoard(Map boardMap) throws Exception {
-        inquiryBoardDAO.deleteBoard(boardMap);
-    }
-
-    @Override
-    public void modifyAnswer(Map answerMap) throws Exception {
-        inquiryBoardDAO.modifyAnswer(answerMap);
-    }
-
-    @Override
-    public void deleteAnswer(Map answerMap) throws Exception {
-        inquiryBoardDAO.deleteAnswer(answerMap);
-    }
-
-    @Override
-    public int selectTotalCountBoard(Map boardMap) throws Exception {
-        return inquiryBoardDAO.selectTotalCountBoard(boardMap);
-    }
-}
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/introduction/introductionPage.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/introduction/introductionPage.jsp b/src/main/webapp/WEB-INF/views/introduction/introductionPage.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/introduction/introductionPage.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,17 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-<html>
-<head>
-    <title>소개 페이지</title>
-</head>
-<body>
-<div>
-    안녕하세요 리마인드입니다.
-    사용 방법은 다음과 같습니다.
-    헤르만 에빙하우싀 이론을 근거로 해당 웹 페이지를 설개했습니다.
-    많이 이용해주세요 ^^
-</div>
-</body>
-</html>
Index: src/main/java/com/project/word/Controller/wordControllerImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/word/Controller/wordControllerImpl.java b/src/main/java/com/project/word/Controller/wordControllerImpl.java
deleted file mode 100644
--- a/src/main/java/com/project/word/Controller/wordControllerImpl.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,542 +0,0 @@
-package com.project.word.Controller;
-
-import com.project.common.base.BaseController;
-import com.project.statistic.service.statisticService;
-import com.project.word.service.wordService;
-import com.project.word.vo.wordVO;
-import org.json.simple.JSONArray;
-import org.json.simple.JSONObject;
-import org.json.simple.parser.JSONParser;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.*;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.servlet.http.HttpSession;
-import java.io.BufferedReader;
-import java.io.DataOutputStream;
-import java.io.InputStreamReader;
-import java.net.HttpURLConnection;
-import java.net.URL;
-import java.net.URLEncoder;
-import java.sql.Timestamp;
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-@RestController("wordcontroller")
-@RequestMapping("/word")
-public class wordControllerImpl extends BaseController implements wordController {
-    @Autowired
-    wordVO wordvo;
-
-    @Autowired
-    wordService wordservice;
-
-    @Autowired
-    statisticService statisticservice;
-
-    @RequestMapping(value = "/word", method = RequestMethod.POST)
-    @Override
-    public ResponseEntity addWord(HttpServletRequest request, HttpServletResponse response, @ModelAttribute wordVO wordvo) {
-        String message;
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        HttpSession ssesion = request.getSession();
-        String userId = (String) ssesion.getAttribute("userId");
-        wordvo.setUserId(userId);
-        try {
-            int wordId = wordservice.maxWordId(wordvo);
-            wordvo.setWordId(wordId);
-            wordservice.addWord(wordvo);
-            statisticservice.addWord(wordvo);
-
-            message = "<script>";
-            message += "alert('저장완료.');";
-            message += "location.href='" + request.getContextPath() + "/word/saveWordForm.do';";
-            message += "</script>";
-        } catch (Exception e) {
-            message = "<script>";
-            message += "alert('저장실패 잠시 후 다시 시도해주세요.');";
-            message += "location.href='" + request.getContextPath() + "/word/saveWordForm.do';";
-            message += "</script>";
-        }
-        return new ResponseEntity(message, responseHeader, HttpStatus.OK);
-    }
-
-    @RequestMapping(value = "/DailyWord", method = RequestMethod.POST)
-    @Override
-    public ResponseEntity addDailyWord(HttpServletRequest request, HttpServletResponse response, wordVO wordvo) {
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        String message;
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        wordvo.setUserId(userId);
-        try {
-            int wordId = wordservice.maxWordId(wordvo);
-            wordvo.setWordId(wordId);
-            wordservice.addDailyWord(wordvo);
-            statisticservice.addDailyWord(wordvo);
-            message = "<script>";
-            message += "alert('오늘의 단어를 나의 새카드 학습하기로 이동했습니다.');";
-            message += "</script>";
-            return new ResponseEntity(message, responseHeader, HttpStatus.CREATED);
-        } catch (Exception e) {
-            e.printStackTrace();
-            message = "<script>";
-            message += "alert('잠시후 다시 시도해주세요.');";
-            message += "</script>";
-            return new ResponseEntity(message, responseHeader, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-    }
-
-    @RequestMapping(value = "/StudyForm.do")
-    @Override
-    public ModelAndView setStudyForm(HttpServletRequest request, HttpServletResponse response) {
-        ModelAndView modelAndView;
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        Map wordMap = new HashMap();
-        wordMap.put("userId", userId);
-        try {
-            int countWrongReviewCard = wordservice.countWrongReviewCard(wordMap);
-            int countReviewCard = wordservice.countReviewCard(wordMap);
-            int countWrongNewCard = wordservice.countWrongNewCard(wordMap);
-            int countNewCard = wordservice.countNewCard(wordMap);
-
-            Map setting = new HashMap();
-            setting.put("countWrongReviewCard", countWrongReviewCard);
-            setting.put("countReviewCard", countReviewCard);
-            setting.put("countWrongNewCard", countWrongNewCard);
-            setting.put("countNewCard", countNewCard);
-
-            if (countWrongReviewCard == 0 && countReviewCard == 0 && countWrongNewCard == 0 && countNewCard == 0) {
-                modelAndView = new ModelAndView();
-                modelAndView.setViewName("/main/mainContent");
-                modelAndView.addObject("finish", "true");
-                return modelAndView;
-            }
-            modelAndView = new ModelAndView("/word/settingStudyForm");
-            modelAndView.addObject("setting", setting);
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("/common/error");
-            return modelAndView;
-        }
-    }
-
-    @RequestMapping(value = "/wordBoardForm.do", method = RequestMethod.GET)
-    @Override
-    public ModelAndView wordBoardForm(HttpServletRequest request, HttpServletResponse response,
-                                      @RequestParam(value = "section", defaultValue = "1") int section,
-                                      @RequestParam(value = "pageNum", defaultValue = "1") int pageNum) {
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        int startPage = ((section - 1) * 100) + ((pageNum - 1) * 10);
-
-        Map<String, Object> wordMap = new HashMap<>();
-        wordMap.put("pageNum", pageNum);
-        wordMap.put("section", section);
-        wordMap.put("startPage", startPage);
-        wordMap.put("userId", userId);
-
-        ModelAndView modelAndView;
-        List<wordVO> wordVoItems;
-        try {
-            wordVoItems = wordservice.selectModifyWord(wordMap);
-            int totalCount = wordservice.totalCount(wordMap);
-            wordMap.remove("userId");
-            wordMap.put("wordVoItems", wordVoItems);
-            wordMap.put("totalCount", totalCount);
-            modelAndView = new ModelAndView("/word/wordBoardForm");
-            modelAndView.addObject("wordMap", wordMap);
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("common/error");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "/title")
-    @Override
-    public ModelAndView searchTitle(HttpServletRequest request, HttpServletResponse response,
-                                    @RequestParam(value = "search") String search,
-                                    @RequestParam(value = "section", defaultValue = "1") int section,
-                                    @RequestParam(value = "pageNum", defaultValue = "1") int pageNum) {
-
-        ModelAndView modelAndView;
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        int startPage = ((section - 1) * 100) + ((pageNum - 1) * 10);
-
-        Map<String, Object> wordMap = new HashMap<String, Object>();
-        wordMap.put("search", search);
-        wordMap.put("pageNum", pageNum);
-        wordMap.put("section", section);
-        wordMap.put("startPage", startPage);
-        wordMap.put("selectMode", "like");
-        wordMap.put("userId", userId);
-
-        List<wordVO> wordVoItems;
-        try {
-            wordVoItems = wordservice.selectModifyWord(wordMap);
-            int totalCount = wordservice.totalCount(wordMap);
-            wordMap.remove("userId");
-            wordMap.put("wordVoItems", wordVoItems);
-            wordMap.put("totalCount", totalCount);
-            modelAndView = new ModelAndView("/word/wordBoardForm");
-            modelAndView.addObject("wordMap", wordMap);
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("common/error");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "/modifyWordForm.do/{wordId}")
-    public ModelAndView modifyWordForm(HttpServletRequest request, HttpServletResponse response, @PathVariable("wordId") int wordId) {
-        ModelAndView modelAndView;
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-
-        Map<String, Object> wordMap = new HashMap<String, Object>();
-        wordMap.put("userId", userId);
-        wordMap.put("wordId", wordId);
-
-        try {
-            wordVO _wordvo = wordservice.selectSpecificWord(wordMap);
-            modelAndView = new ModelAndView("/word/modifyWordForm");
-            modelAndView.addObject("wordvo", _wordvo);
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView("common/error");
-        }
-        return modelAndView;
-    }
-
-    @RequestMapping(value = "/modifyWord", method = RequestMethod.PUT)
-    public ResponseEntity modifyWord(HttpServletRequest request, HttpServletResponse response, @RequestBody Map<String, Object> wordMap) {
-        ResponseEntity responseEntity;
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        wordMap.put("userId", userId);
-        try {
-            wordservice.updateWord(wordMap);
-            responseEntity = new ResponseEntity<String>("sucess", HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            responseEntity = new ResponseEntity<String>("error", HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-
-    @RequestMapping(value = "/deleteWord", method = RequestMethod.DELETE)
-    public ResponseEntity deleteWord(HttpServletRequest request, HttpServletResponse response, @RequestBody Map<String, Object> wordMap) {
-        ResponseEntity responseEntity;
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        wordMap.put("userId", userId);
-        try {
-            wordservice.deleteWord(wordMap);
-            responseEntity = new ResponseEntity<String>("success", HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            responseEntity = new ResponseEntity<String>("error", HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-        return responseEntity;
-    }
-
-    @RequestMapping(value = "/reviewCardForm.do", method = RequestMethod.GET)
-    @Override
-    public ModelAndView reviewCardForm(HttpServletRequest request, HttpServletResponse response) {
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        ModelAndView modelAndView = new ModelAndView();
-        wordVO _wordvo = null;
-        Map<String, String> wordMap = new HashMap<String, String>();
-        wordMap.put("userId", userId);
-        wordMap.put("studyMode", "review");
-        wordMap.put("selectState", "notEmpty");
-        try {//틀린 카드부터 출력
-            _wordvo = wordservice.selectRemainedReviewCard(wordMap);
-            if (_wordvo == null) {
-                _wordvo = wordservice.selectReviewCard(wordMap); //복습해야할 카드 출력
-                if (_wordvo == null) {
-                    wordMap.put("selectState", "empty");
-                    _wordvo = wordservice.selectRemainedReviewCard(wordMap); //남은 틀린카드 출력
-                }
-            }
-            modelAndView.addObject("wordvo", _wordvo);
-            modelAndView.setViewName("/word/reviewCardForm");
-            return modelAndView;
-
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView();
-            modelAndView.setViewName("/common/error");
-            return modelAndView;
-        }
-    }
-
-    @RequestMapping(value = "/reviewStudy_wrong", method = RequestMethod.PUT)
-    @Override
-    public ResponseEntity reviewStudy_Wrong(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap) {
-        HttpSession session = request.getSession();
-        session.setAttribute("studyQuantity", 0);
-        String userId = (String) session.getAttribute("userId");
-
-        wordMap.put("userId", userId);
-        wordMap.put("wordCount", 0);
-        wordMap.put("appearanceDate", setTime(0));
-
-        try {
-            wordservice.updateWrongCard(wordMap);
-            statisticservice.updateWrongCard(wordMap);
-            Map ResponseMap = new HashMap();
-            ResponseMap.put("Message", "SUCESS");
-            return new ResponseEntity(ResponseMap, HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            Map ResponseMap = new HashMap();
-            ResponseMap.put("Message", "FAIL");
-            return new ResponseEntity(ResponseMap, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-    }
-
-    @Override
-    @RequestMapping(value = "/reviewStudy", method = RequestMethod.GET)
-    public ResponseEntity reviewCardSelect(HttpServletRequest request, HttpServletResponse response) {
-        String message;
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        wordVO _wordvo;
-        Map wordMap = new HashMap();
-        wordMap.put("userId", userId);
-        wordMap.put("selectState", "notEmpty");
-        wordMap.put("studyMode", "review");
-
-        try {
-            _wordvo = wordservice.selectRemainedReviewCard(wordMap);
-            if (_wordvo == null) {
-                _wordvo = wordservice.selectReviewCard(wordMap); //복습해야할 카드 출력
-                if (_wordvo == null) {
-                    wordMap.put("selectState", "empty");
-                    _wordvo = wordservice.selectRemainedReviewCard(wordMap); //남은 틀린카드 출력
-                }
-            }
-            if (_wordvo != null) {
-                return new ResponseEntity(_wordvo, HttpStatus.OK);
-            }
-            return new ResponseEntity<String>("Empty", HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            return new ResponseEntity<String>("ERROR", HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-
-    }
-
-
-    @RequestMapping(value = "/reviewStudy_appropriate", method = RequestMethod.PUT)
-    @Override
-    public ResponseEntity reviewStudy_appropriate(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap) {
-        Map ResponseMap = new HashMap();
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        int increasedWordCount = Integer.parseInt((String) wordMap.get("wordCount")) + 1;
-        wordMap.put("userId", userId);
-        wordMap.put("appearanceDate", setTime(increasedWordCount));
-        wordMap.put("wordCount", increasedWordCount);
-        try {
-            wordservice.updateReviewCard_Appropriate(wordMap);
-            statisticservice.updateAppropriateCard(wordMap);
-            ResponseMap.put("MESSAGE", "SUCESS");
-            return new ResponseEntity(ResponseMap, HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            ResponseMap.put("MESSAGE", "ERROR");
-            return new ResponseEntity(ResponseMap, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-    }
-
-    @RequestMapping(value = "/newCardForm.do", method = RequestMethod.GET)
-    @Override
-    public ModelAndView newCardForm(HttpServletRequest request, HttpServletResponse response) {
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        ModelAndView modelAndView = new ModelAndView();
-        wordVO _wordvo = null;
-        Map<String, String> wordMap = new HashMap<String, String>();
-        wordMap.put("userId", userId);
-        wordMap.put("studyMode", "newCardStudy");
-        wordMap.put("selectState", "notEmpty");
-        try {
-            _wordvo = wordservice.selectRemainedNewCard(wordMap);
-            if (_wordvo == null) {
-                _wordvo = wordservice.selectNewCard(wordMap); //복습해야할 카드 출력
-                if (_wordvo == null) {
-                    wordMap.put("selectState", "empty");
-                    _wordvo = wordservice.selectRemainedNewCard(wordMap); //남은 틀린카드 출력
-                }
-            }
-            modelAndView.addObject("wordvo", _wordvo);
-            modelAndView.setViewName("/word/newCardForm");
-            return modelAndView;
-        } catch (Exception e) {
-            e.printStackTrace();
-            modelAndView = new ModelAndView();
-            modelAndView.setViewName("/common/error");
-            return modelAndView;
-        }
-    }
-
-    @RequestMapping(value = "/newCardStudy_wrong", method = RequestMethod.PUT)
-    @Override
-    public ResponseEntity newCardStudy_wrong(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap) {
-
-        HttpSession session = request.getSession();
-        session.setAttribute("studyQuantity", 0);
-        String userId = (String) session.getAttribute("userId");
-
-        wordMap.put("userId", userId);
-        wordMap.put("wordCount", 0);
-        wordMap.put("appearanceDate", setTime(0));
-
-        try {
-            wordservice.updateWrongCard(wordMap);
-            statisticservice.updateWrongCard(wordMap);
-            Map ResponseMap = new HashMap();
-            ResponseMap.put("Message", "SUCESS");
-            return new ResponseEntity(ResponseMap, HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            Map ResponseMap = new HashMap();
-            ResponseMap.put("Message", "FAIL");
-            return new ResponseEntity(ResponseMap, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-    }
-
-    @RequestMapping(value = "/newCardStudy_appropriate", method = RequestMethod.PUT)
-    @Override
-    public ResponseEntity newCardUpdate_appropriate(HttpServletRequest request, HttpServletResponse response, @RequestBody Map wordMap) {
-        Map ResponseMap = new HashMap();
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        int increasedWordCount = Integer.parseInt((String) wordMap.get("wordCount")) + 1;
-        wordMap.put("userId", userId);
-        wordMap.put("appearanceDate", setTime(increasedWordCount));
-        wordMap.put("wordCount", increasedWordCount);
-        try {
-            wordservice.updateNewCard_Appropriate(wordMap);
-            statisticservice.updateAppropriateCard(wordMap);
-            ResponseMap.put("MESSAGE", "SUCESS");
-            return new ResponseEntity(ResponseMap, HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            ResponseMap.put("MESSAGE", "ERROR");
-            return new ResponseEntity(ResponseMap, HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-    }
-
-    @RequestMapping(value = "/newCardStudy", method = RequestMethod.GET)
-    @Override
-    public ResponseEntity newCardSelect(HttpServletRequest request, HttpServletResponse response) {
-        String message;
-        HttpHeaders responseHeader = new HttpHeaders();
-        responseHeader.add("content-type", "text/html; charset=utf-8");
-        HttpSession session = request.getSession();
-        String userId = (String) session.getAttribute("userId");
-        wordVO _wordvo;
-        Map wordMap = new HashMap();
-        wordMap.put("userId", userId);
-        wordMap.put("selectState", "notEmpty");
-        wordMap.put("studyMode", "newCardStudy");
-        try {
-            _wordvo = wordservice.selectRemainedNewCard(wordMap);
-            if (_wordvo == null) { // 시간에 맞는 틀린카드가 없다면
-                _wordvo = wordservice.selectNewCard(wordMap); //새카드 출력
-                if (_wordvo == null) {
-                    wordMap.put("selectState", "empty");
-                    _wordvo = wordservice.selectRemainedNewCard(wordMap); //새카드가 없다면 시간 관계없이 틀린카드 출력
-                }
-            }
-            if (_wordvo != null) {
-                return new ResponseEntity(_wordvo, HttpStatus.OK);
-            }
-            return new ResponseEntity<String>("Study_Done", HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            return new ResponseEntity<String>("ERROR", HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-    }
-
-    public Timestamp setTime(int wordCount) {
-        LocalDateTime time = LocalDateTime.now();
-        if (wordCount <= 0) {
-            return Timestamp.valueOf(time.plusMinutes(10));
-        } else if (wordCount == 1) {
-            return Timestamp.valueOf(time.plusDays(1));
-        } else if (wordCount == 2) {
-            return Timestamp.valueOf(time.plusDays(7));
-        } else if (wordCount == 3) {
-            return Timestamp.valueOf(time.plusMonths(1));
-        } else if (wordCount == 4) {
-            return Timestamp.valueOf(time.plusMonths(6));
-        } else if (wordCount == 5) {
-            return Timestamp.valueOf(time.plusYears(1));
-        } else {
-            return Timestamp.valueOf(time.plusYears(3));
-        }
-    }
-
-    @RequestMapping(value = "papagoAPI/{word}", method = RequestMethod.GET)
-    public ResponseEntity sendToPapagoAPI(HttpServletRequest request, HttpServletResponse response, @PathVariable("word") String word) {
-        String clientId = "IqQYujxUWHOH54f7zT80";//애플리케이션 클라이언트 아이디값";
-        String clientSecret = "vP7xoeCWTA";//애플리케이션 클라이언트 시크릿값";
-        try {
-            String text = URLEncoder.encode(word, "UTF-8");
-            String apiURL = "https://openapi.naver.com/v1/papago/n2mt";
-            URL url = new URL(apiURL);
-            HttpURLConnection con = (HttpURLConnection)url.openConnection();
-            con.setRequestMethod("POST");
-            con.setRequestProperty("X-Naver-Client-Id", clientId);
-            con.setRequestProperty("X-Naver-Client-Secret", clientSecret);
-            // post request
-            String postParams = "source=en&target=ko&text=" + text;
-            con.setDoOutput(true);
-            DataOutputStream wr = new DataOutputStream(con.getOutputStream());
-            wr.writeBytes(postParams);
-            wr.flush();
-            wr.close();
-            int responseCode = con.getResponseCode();
-            BufferedReader br;
-            if(responseCode==200) { // 정상 호출
-                br = new BufferedReader(new InputStreamReader(con.getInputStream()));
-            } else {  // 에러 발생
-                br = new BufferedReader(new InputStreamReader(con.getErrorStream()));
-            }
-            String inputLine;
-            StringBuffer responseBuffer = new StringBuffer();
-            while ((inputLine = br.readLine()) != null) {
-                responseBuffer.append(inputLine);
-            }
-            br.close();
-            JSONParser jsonParser = new JSONParser();
-            JSONObject jsonObject = (JSONObject) jsonParser.parse(responseBuffer.toString());
-            jsonObject = (JSONObject) jsonParser.parse(jsonObject.get("message").toString());
-            jsonObject = (JSONObject) jsonParser.parse(jsonObject.get("result").toString());
-            return new ResponseEntity<Object>(jsonObject,HttpStatus.OK);
-        } catch (Exception e) {
-            e.printStackTrace();
-            return new ResponseEntity<String>("error",HttpStatus.INTERNAL_SERVER_ERROR);
-        }
-    }
-}
\ No newline at end of file
Index: src/main/webapp/WEB-INF/views/word/newCardForm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/views/word/newCardForm.jsp b/src/main/webapp/WEB-INF/views/word/newCardForm.jsp
deleted file mode 100644
--- a/src/main/webapp/WEB-INF/views/word/newCardForm.jsp	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,143 +0,0 @@
-<%--
-  Created by IntelliJ IDEA.
-  User: kim
-  Date: 2021/02/18
-  Time: 7:06 오후창
-  To change this template use File | Settings | File Templates.
---%>
-<%-- ajax를 두번 호출한 이유, 처음 rest API를 이용해 학습할 수 만큼 데이터를 가지고 오려 했다. 하지만 데이터베이스에 저장된 단어의 출력시간을 체크해서
-계속 요청 받아야 하는 로직이로 REST API를 사용하기엔 HTML폼 태그가 너무 많아지고, 로직이 복잡해져 유지보수가 어렵다 판단 다음과 같은 코드를 작성했다.--%>
-
-<%@ page contentType="text/html;charset=UTF-8" language="java" %>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<c:set var="contextPath" value="${pageContext.request.contextPath}"/>
-
-<html>
-<head>
-    <title>newCardStudy Page</title>
-    <script type="text/javascript" src="<c:url value="/webjars/jquery/2.2.1/jquery.min.js"/>"></script>
-    <script>
-
-        function showAnswer() {
-            document.getElementById("showAnswerButton").style.display = "none";
-            document.getElementById("mean").style.display = "block";
-            document.getElementById("appropriateButton").style.display = "block";
-            document.getElementById("reviewButton").style.display = "block";
-        }
-
-        function review() {
-            updateWord("review");
-        }
-
-        function appropriate() {
-            updateWord("appropriate");
-        }
-
-        function updateWord(command) {
-            var wordCount = document.getElementById("wordCount");
-            var wordId = document.getElementById("wordId");
-            var studyQuantity = document.getElementById("studyQuantity");
-            var wordcount = wordCount.value;
-            var wordIdValue = wordId.value;
-            var studyQuantityValue = studyQuantity.value;
-            if (command == "review") {
-                $.ajax({
-                    type: "put",
-                    dataType: "json",
-                    async: true,
-                    contentType: "application/json",
-                    url: "${contextPath}/word/newCardStudy_wrong",
-                    data: JSON.stringify({
-                        wordId: wordIdValue
-                    }),
-                    success: function () {
-                        studyQuantityValue = parseInt(studyQuantityValue) + 1
-                        studyQuantity.value = studyQuantityValue;
-                        newCardCardSelect(wordIdValue);
-                    },
-                    error: function (request, error) {
-                        alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
-                    }
-                });
-            } else if (command == "appropriate") {
-                $.ajax({
-                    type: "put",
-                    async: true,
-                    dataType: "json",
-                    contentType: "application/json",
-                    url: "${contextPath}/word/newCardStudy_appropriate",
-                    data: JSON.stringify(
-                        {
-                            wordCount: wordcount,
-                            wordId: wordIdValue
-                        }),
-                    success: function () {
-                        studyQuantityValue = parseInt(studyQuantityValue) + 1
-                        studyQuantity.value = studyQuantityValue;
-                        newCardCardSelect(wordIdValue);
-                    },
-                    error: function (request, status, error) {
-                        alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
-                    }
-                });
-            }
-        }
-
-        function newCardCardSelect() {
-            $.ajax({
-                type: "get",
-                async: true,
-                url: "${contextPath}/word/newCardStudy",
-                success: function (data) {
-                    if(data=="Study_Done"){
-                        alert("학습이 끝났습니다.");
-                        location.href = "${contextPath}/word/StudyForm.do";
-                    }
-                    receiveDataHandle(data);
-                },
-                error: function (request, error) {
-                    alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error);
-                }
-            });
-        }
-
-        function receiveDataHandle(data) {
-            document.getElementById("word").value = data.word;
-            document.getElementById("wordCount").value = data.wordCount;
-            document.getElementById("wordId").value = data.wordId;
-            var mean = document.getElementById("mean")
-            mean.value = data.mean;
-            mean.style.display = "none";
-            document.getElementById("showAnswerButton").style.display = "block";
-            document.getElementById("appropriateButton").style.display = "none";
-            document.getElementById("reviewButton").style.display = "none";
-        }
-    </script>
-</head>
-<body>
-<c:choose>
-    <c:when test="${empty wordvo}">
-        <strong>학습할 단어가 없습니다. 새로운 카드를 학습하거나 추가하세요.</strong>
-    </c:when>
-    <c:otherwise>
-        <form action="${contextPath}/word/addWord.do">
-            <div name="studyDiv" style="display: block">
-                <input type="text" id="word" name="word" value="${wordvo.word}"><br>
-                <input type="text" id="mean" name="mean" value="${wordvo.mean}" style="display: none">
-                <input type="button" id="showAnswerButton" name="showAnswerButton" onclick="showAnswer()"
-                       value="답보기">
-                <input type="button" id="reviewButton" name="reviewButton" style="display: none"
-                       onclick="review()" value="다시하기">
-                <input type="button" id="appropriateButton" name="appropriateButton" style="display: none"
-                       onclick="appropriate()" value="알맞음">
-                <input type="hidden" id="wordCount" name="wordCount" value="${wordvo.wordCount}">
-                <input type="hidden" id="wordId" name="wordId" value="${wordvo.wordId}">
-            </div>
-            <div>
-                학습량<input type="text" id="studyQuantity" value="0">
-            </div>
-        </form>
-    </c:otherwise>
-</c:choose>
-</body>
-</html>
\ No newline at end of file
Index: src/main/java/com/project/common/file/fileDownloadController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/common/file/fileDownloadController.java b/src/main/java/com/project/common/file/fileDownloadController.java
deleted file mode 100644
--- a/src/main/java/com/project/common/file/fileDownloadController.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,36 +0,0 @@
-package com.project.common.file;
-
-import org.springframework.stereotype.Controller;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestParam;
-
-import javax.servlet.http.HttpServletResponse;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.OutputStream;
-
-@Controller
-public class fileDownloadController {
-    private static final String BOARD_IMAGE = "/Users/kim/IdeaProjects/EnglishWords_Practice/images";
-
-    @RequestMapping(value = "/download.do")
-    protected void download(@RequestParam("imageFileName") String imageFileName, @RequestParam("boardId") String boardId, HttpServletResponse response) throws Exception {
-        OutputStream out = response.getOutputStream();
-        String downFile = BOARD_IMAGE+"/"+boardId+"/"+imageFileName;
-        File file = new File(downFile);
-
-//        response.setHeader("Cache-Control", "no-cache");
-        response.addHeader("Content-disposition", "attachment; fileName=" + imageFileName);
-        FileInputStream in = new FileInputStream(file);
-        byte[] Buffer = new byte[1024];
-        while(true){
-            int count = in.read(Buffer);
-            if(count == -1){
-                break;
-            }
-            out.write(Buffer,0,count);
-        }
-        in.close();
-        out.close();
-    }
-}
Index: src/main/java/com/project/inquiryBoard/service/inquiryBoardService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/service/inquiryBoardService.java b/src/main/java/com/project/inquiryBoard/service/inquiryBoardService.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/service/inquiryBoardService.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,36 +0,0 @@
-package com.project.inquiryBoard.service;
-
-import com.project.inquiryBoard.vo.AnswerVO;
-import com.project.inquiryBoard.vo.imageVO;
-import com.project.inquiryBoard.vo.inquiryBoardVO;
-
-import java.util.List;
-import java.util.Map;
-
-public interface inquiryBoardService {
-    List<inquiryBoardVO> selectInquiryBoard(Map inquiryBoardMap) throws Exception;
-
-    inquiryBoardVO selectBoardDetail(Map boardMap) throws Exception;
-
-    List<AnswerVO> selectBoardAnswer(Map boardMap) throws Exception;
-
-    int writeBoard(Map boardMap)throws Exception;
-
-    void writeImageBoard(Map boardMap) throws Exception;
-
-    List<imageVO> selectBoardImage(Map boardMap) throws Exception;
-
-    void writeAnswer(Map boardMap) throws Exception;
-
-    void updateBoard(Map boardMap) throws Exception;
-
-    void updateImageBoard(Map boardMap) throws Exception;
-
-    void deleteBoard(Map boardMap) throws Exception;
-
-    void modifyAnswer(Map answerMap) throws Exception;
-
-    void deleteAnswer(Map answerMap) throws Exception;
-
-    int selectTotalCountBoard(Map boardMap) throws Exception;
-}
Index: src/main/java/com/project/inquiryBoard/vo/inquiryBoardVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/inquiryBoard/vo/inquiryBoardVO.java b/src/main/java/com/project/inquiryBoard/vo/inquiryBoardVO.java
deleted file mode 100644
--- a/src/main/java/com/project/inquiryBoard/vo/inquiryBoardVO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,54 +0,0 @@
-package com.project.inquiryBoard.vo;
-
-import org.springframework.stereotype.Component;
-
-import java.sql.Timestamp;
-
-@Component("inquiryBoardVO")
-public class inquiryBoardVO {
-    private int boardId;
-    private String title;
-    private String content;
-    private Timestamp writeDate;
-    private String userId;
-
-    public int getBoardId() {
-        return boardId;
-    }
-
-    public void setBoardId(int boardId) {
-        this.boardId = boardId;
-    }
-
-    public String getTitle() {
-        return title;
-    }
-
-    public void setTitle(String title) {
-        this.title = title;
-    }
-
-    public String getContent() {
-        return content;
-    }
-
-    public void setContent(String content) {
-        this.content = content;
-    }
-
-    public Timestamp getWriteDate() {
-        return writeDate;
-    }
-
-    public void setWriteDate(Timestamp writeDate) {
-        this.writeDate = writeDate;
-    }
-
-    public String getUserId() {
-        return userId;
-    }
-
-    public void setUserId(String userId) {
-        this.userId = userId;
-    }
-}
Index: src/main/java/com/project/member/dao/MemberDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/member/dao/MemberDAO.java b/src/main/java/com/project/member/dao/MemberDAO.java
deleted file mode 100644
--- a/src/main/java/com/project/member/dao/MemberDAO.java	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,27 +0,0 @@
-package com.project.member.dao;
-
-import com.project.member.vo.MemberVO;
-import org.springframework.dao.DataAccessException;
-
-import java.util.List;
-import java.util.Map;
-
-public interface MemberDAO {
-    void addMember(MemberVO memberVO) throws DataAccessException;
-
-    MemberVO loginMember(Map<String, String> memberMap) throws DataAccessException;
-
-    String selectAuthKey(Map<String, Object> memberMap) throws DataAccessException;
-
-    void updateAuthKey(Map<String, Object> memberMap) throws DataAccessException;
-
-    String checkAuthEmail(Map<String, String> memberMap) throws DataAccessException;
-
-    int searchOverlapId(String userId) throws DataAccessException;
-
-    List<MemberVO> findUserId(MemberVO memberVO) throws DataAccessException;
-
-    MemberVO findUserPwd(MemberVO memberVO) throws DataAccessException;
-
-    void updateUserPwd(MemberVO memberVO) throws DataAccessException;
-}
Index: .project
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.project b/.project
deleted file mode 100644
--- a/.project	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
+++ /dev/null	(revision f4cd4f73f8a051750d7b391fac0fe0c5cb7f819b)
@@ -1,47 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>RemindProject</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.wst.common.project.facet.core.builder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.springframework.ide.eclipse.core.springbuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.wst.jsdt.core.javascriptValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.wst.validation.validationbuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.m2e.core.maven2Builder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.springframework.ide.eclipse.core.springnature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.m2e.core.maven2Nature</nature>
-		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
-		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
-		<nature>org.eclipse.wst.jsdt.core.jsNature</nature>
-	</natures>
-</projectDescription>
